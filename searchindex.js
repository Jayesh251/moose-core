Search.setIndex({"docnames": ["advanced", "beginner", "changes/index", "doxygen/doxy", "index", "install/index_install", "install/install", "intermediate", "introduction/index_introduction", "introduction/introduction", "known_issues/index", "release_notes/index", "user/py/cookbook/chem", "user/py/cookbook/chem_GUI", "user/py/cookbook/chem_load_save", "user/py/cookbook/chem_sim_eg", "user/py/cookbook/chem_tut", "user/py/cookbook/elec", "user/py/cookbook/elec_GUI", "user/py/cookbook/elec_load_run", "user/py/cookbook/elec_mod", "user/py/cookbook/elec_sim_eg", "user/py/cookbook/index_ckbk", "user/py/cookbook/multi_sim_eg", "user/py/cookbook/multiscale", "user/py/cookbook/net_sim_eg", "user/py/cookbook/net_tut", "user/py/cookbook/network", "user/py/graphics/content_g", "user/py/graphics/index_graphics", "user/py/quickstart/classes_demos", "user/py/quickstart/demos", "user/py/quickstart/index_qs", "user/py/quickstart/moose_quickstart", "user/py/quickstart/qs_GUI", "user/py/quickstart/qs_inter", "user/py/rdesigneur/index_rd", "user/py/rdesigneur/multi_rdes", "user/py/rdesigneur/rdes", "user/py/references/AdExIF", "user/py/references/AdThreshIF", "user/py/references/Adaptor", "user/py/references/Annotator", "user/py/references/Arith", "user/py/references/BinomialRng", "user/py/references/CaConc", "user/py/references/CaConcBase", "user/py/references/ChanBase", "user/py/references/ChemCompt", "user/py/references/Cinfo", "user/py/references/Clock", "user/py/references/Compartment", "user/py/references/CompartmentBase", "user/py/references/CplxEnzBase", "user/py/references/CubeMesh", "user/py/references/CylMesh", "user/py/references/DiagonalMsg", "user/py/references/DifShell", "user/py/references/DiffAmp", "user/py/references/Dsolve", "user/py/references/Enz", "user/py/references/EnzBase", "user/py/references/ExIF", "user/py/references/ExponentialRng", "user/py/references/Finfo", "user/py/references/Func", "user/py/references/Function", "user/py/references/GammaRng", "user/py/references/GapJunction", "user/py/references/GraupnerBrunel2012CaPlasticitySynHandler", "user/py/references/Group", "user/py/references/Gsolve", "user/py/references/HDF5DataWriter", "user/py/references/HDF5WriterBase", "user/py/references/HHChannel", "user/py/references/HHChannel2D", "user/py/references/HHChannelBase", "user/py/references/HHGate", "user/py/references/HHGate2D", "user/py/references/HSolve", "user/py/references/InputVariable", "user/py/references/IntFire", "user/py/references/IntFireBase", "user/py/references/Interpol", "user/py/references/Interpol2D", "user/py/references/IzhIF", "user/py/references/IzhikevichNrn", "user/py/references/Ksolve", "user/py/references/LIF", "user/py/references/Leakage", "user/py/references/MarkovChannel", "user/py/references/MarkovGslSolver", "user/py/references/MarkovRateTable", "user/py/references/MarkovSolver", "user/py/references/MarkovSolverBase", "user/py/references/Melement", "user/py/references/MeshEntry", "user/py/references/MgBlock", "user/py/references/Msg", "user/py/references/Mstring", "user/py/references/NMDAChan", "user/py/references/NSDFWriter", "user/py/references/Nernst", "user/py/references/NeuroMesh", "user/py/references/Neuron", "user/py/references/Neutral", "user/py/references/NormalRng", "user/py/references/OneToAllMsg", "user/py/references/PIDController", "user/py/references/PoissonRng", "user/py/references/Pool", "user/py/references/PoolBase", "user/py/references/PostMaster", "user/py/references/PsdMesh", "user/py/references/PulseGen", "user/py/references/PyRun", "user/py/references/QIF", "user/py/references/RandGenerator", "user/py/references/RandSpike", "user/py/references/ReacBase", "user/py/references/STDPSynHandler", "user/py/references/STDPSynapse", "user/py/references/SeqSynHandler", "user/py/references/Shell", "user/py/references/SimpleSynHandler", "user/py/references/SingleMsg", "user/py/references/SparseMsg", "user/py/references/Species", "user/py/references/SpikeGen", "user/py/references/SpikeStats", "user/py/references/Spine", "user/py/references/SpineMesh", "user/py/references/Stats", "user/py/references/SteadyState", "user/py/references/StimulusTable", "user/py/references/Stoich", "user/py/references/Streamer", "user/py/references/SymCompartment", "user/py/references/SynChan", "user/py/references/SynHandlerBase", "user/py/references/Synapse", "user/py/references/Table", "user/py/references/Table2", "user/py/references/TableBase", "user/py/references/TimeTable", "user/py/references/UniformRng", "user/py/references/VClamp", "user/py/references/Variable", "user/py/references/VectorTable", "user/py/references/ZombieCaConc", "user/py/references/ZombieCompartment", "user/py/references/ZombieFunction", "user/py/references/index_ref", "user/py/references/moose_classes", "user/py/references/moose_functions", "user/py/references/testSched", "user/py/tutorials/ChemicalBistables", "user/py/tutorials/ChemicalOscillators", "user/py/tutorials/Squid", "user/py/tutorials/index_tut"], "filenames": ["advanced.rst", "beginner.rst", "changes/index.rst", "doxygen/doxy.rst", "index.rst", "install/index_install.rst", "install/install.rst", "intermediate.rst", "introduction/index_introduction.rst", "introduction/introduction.rst", "known_issues/index.rst", "release_notes/index.rst", "user/py/cookbook/chem.rst", "user/py/cookbook/chem_GUI.rst", "user/py/cookbook/chem_load_save.rst", "user/py/cookbook/chem_sim_eg.rst", "user/py/cookbook/chem_tut.rst", "user/py/cookbook/elec.rst", "user/py/cookbook/elec_GUI.rst", "user/py/cookbook/elec_load_run.rst", "user/py/cookbook/elec_mod.rst", "user/py/cookbook/elec_sim_eg.rst", "user/py/cookbook/index_ckbk.rst", "user/py/cookbook/multi_sim_eg.rst", "user/py/cookbook/multiscale.rst", "user/py/cookbook/net_sim_eg.rst", "user/py/cookbook/net_tut.rst", "user/py/cookbook/network.rst", "user/py/graphics/content_g.rst", "user/py/graphics/index_graphics.rst", "user/py/quickstart/classes_demos.rst", "user/py/quickstart/demos.rst", "user/py/quickstart/index_qs.rst", "user/py/quickstart/moose_quickstart.rst", "user/py/quickstart/qs_GUI.rst", "user/py/quickstart/qs_inter.rst", "user/py/rdesigneur/index_rd.rst", "user/py/rdesigneur/multi_rdes.rst", "user/py/rdesigneur/rdes.rst", "user/py/references/AdExIF.rst", "user/py/references/AdThreshIF.rst", "user/py/references/Adaptor.rst", "user/py/references/Annotator.rst", "user/py/references/Arith.rst", "user/py/references/BinomialRng.rst", "user/py/references/CaConc.rst", "user/py/references/CaConcBase.rst", "user/py/references/ChanBase.rst", "user/py/references/ChemCompt.rst", "user/py/references/Cinfo.rst", "user/py/references/Clock.rst", "user/py/references/Compartment.rst", "user/py/references/CompartmentBase.rst", "user/py/references/CplxEnzBase.rst", "user/py/references/CubeMesh.rst", "user/py/references/CylMesh.rst", "user/py/references/DiagonalMsg.rst", "user/py/references/DifShell.rst", "user/py/references/DiffAmp.rst", "user/py/references/Dsolve.rst", "user/py/references/Enz.rst", "user/py/references/EnzBase.rst", "user/py/references/ExIF.rst", "user/py/references/ExponentialRng.rst", "user/py/references/Finfo.rst", "user/py/references/Func.rst", "user/py/references/Function.rst", "user/py/references/GammaRng.rst", "user/py/references/GapJunction.rst", "user/py/references/GraupnerBrunel2012CaPlasticitySynHandler.rst", "user/py/references/Group.rst", "user/py/references/Gsolve.rst", "user/py/references/HDF5DataWriter.rst", "user/py/references/HDF5WriterBase.rst", "user/py/references/HHChannel.rst", "user/py/references/HHChannel2D.rst", "user/py/references/HHChannelBase.rst", "user/py/references/HHGate.rst", "user/py/references/HHGate2D.rst", "user/py/references/HSolve.rst", "user/py/references/InputVariable.rst", "user/py/references/IntFire.rst", "user/py/references/IntFireBase.rst", "user/py/references/Interpol.rst", "user/py/references/Interpol2D.rst", "user/py/references/IzhIF.rst", "user/py/references/IzhikevichNrn.rst", "user/py/references/Ksolve.rst", "user/py/references/LIF.rst", "user/py/references/Leakage.rst", "user/py/references/MarkovChannel.rst", "user/py/references/MarkovGslSolver.rst", "user/py/references/MarkovRateTable.rst", "user/py/references/MarkovSolver.rst", "user/py/references/MarkovSolverBase.rst", "user/py/references/Melement.rst", "user/py/references/MeshEntry.rst", "user/py/references/MgBlock.rst", "user/py/references/Msg.rst", "user/py/references/Mstring.rst", "user/py/references/NMDAChan.rst", "user/py/references/NSDFWriter.rst", "user/py/references/Nernst.rst", "user/py/references/NeuroMesh.rst", "user/py/references/Neuron.rst", "user/py/references/Neutral.rst", "user/py/references/NormalRng.rst", "user/py/references/OneToAllMsg.rst", "user/py/references/PIDController.rst", "user/py/references/PoissonRng.rst", "user/py/references/Pool.rst", "user/py/references/PoolBase.rst", "user/py/references/PostMaster.rst", "user/py/references/PsdMesh.rst", "user/py/references/PulseGen.rst", "user/py/references/PyRun.rst", "user/py/references/QIF.rst", "user/py/references/RandGenerator.rst", "user/py/references/RandSpike.rst", "user/py/references/ReacBase.rst", "user/py/references/STDPSynHandler.rst", "user/py/references/STDPSynapse.rst", "user/py/references/SeqSynHandler.rst", "user/py/references/Shell.rst", "user/py/references/SimpleSynHandler.rst", "user/py/references/SingleMsg.rst", "user/py/references/SparseMsg.rst", "user/py/references/Species.rst", "user/py/references/SpikeGen.rst", "user/py/references/SpikeStats.rst", "user/py/references/Spine.rst", "user/py/references/SpineMesh.rst", "user/py/references/Stats.rst", "user/py/references/SteadyState.rst", "user/py/references/StimulusTable.rst", "user/py/references/Stoich.rst", "user/py/references/Streamer.rst", "user/py/references/SymCompartment.rst", "user/py/references/SynChan.rst", "user/py/references/SynHandlerBase.rst", "user/py/references/Synapse.rst", "user/py/references/Table.rst", "user/py/references/Table2.rst", "user/py/references/TableBase.rst", "user/py/references/TimeTable.rst", "user/py/references/UniformRng.rst", "user/py/references/VClamp.rst", "user/py/references/Variable.rst", "user/py/references/VectorTable.rst", "user/py/references/ZombieCaConc.rst", "user/py/references/ZombieCompartment.rst", "user/py/references/ZombieFunction.rst", "user/py/references/index_ref.rst", "user/py/references/moose_classes.rst", "user/py/references/moose_functions.rst", "user/py/references/testSched.rst", "user/py/tutorials/ChemicalBistables.rst", "user/py/tutorials/ChemicalOscillators.rst", "user/py/tutorials/Squid.rst", "user/py/tutorials/index_tut.rst"], "titles": ["Advanced Guide", "Beginner Guide", "Series <cite>chennapoda</cite>", "Doxygen", "MOOSE Docs", "Installation", "Use pre-built packages", "Intermediate Guide", "Introduction", "What is MOOSE and what is it good for?", "Known issues", "Release Notes", "Chemical Aspects", "Interface for chemical kinetic models in MOOSEGUI", "Load - Run - Save models", "Simple Examples", "Tutorials", "Single Neuron Electrical Aspects (BioPhysics)", "Neuronal simulations in MOOSEGUI", "Load and Run simple models", "Neuron Modeling", "Simple Examples", "Cook Book", "Simple Examples", "MultiScale Modeling", "Simple Examples", "Tutorials", "Networking", "MOOGLI", "Graphics", "MOOSE Classes", "Demonstration of basic functionalities", "Quick Start", "Getting started with python scripting for MOOSE", "MOOSE GUI: Graphical interface for MOOSE", "Interactive Tutorials", "Rdesignuer", "Rdesigneur Examples", "<strong>Rdesigneur: Building multiscale models</strong>", "AdExIF", "AdThreshIF", "Adaptor", "Annotator", "Arith", "BinomialRng", "CaConc", "CaConcBase", "ChanBase", "ChemCompt", "Cinfo", "Clock", "Compartment", "CompartmentBase", "CplxEnzBase", "CubeMesh", "CylMesh", "DiagonalMsg", "DifShell", "DiffAmp", "Dsolve", "Enz", "EnzBase", "ExIF", "ExponentialRng", "Finfo", "Func", "Function", "GammaRng", "GapJunction", "GraupnerBrunel2012CaPlasticitySynHandler", "Group", "Gsolve", "HDF5DataWriter", "HDF5WriterBase", "HHChannel", "HHChannel2D", "HHChannelBase", "HHGate", "HHGate2D", "HSolve", "InputVariable", "IntFire", "IntFireBase", "Interpol", "Interpol2D", "IzhIF", "IzhikevichNrn", "Ksolve", "LIF", "Leakage", "MarkovChannel", "MarkovGslSolver", "MarkovRateTable", "MarkovSolver", "MarkovSolverBase", "&lt;no title&gt;", "MeshEntry", "MgBlock", "Msg", "Mstring", "NMDAChan", "NSDFWriter", "Nernst", "NeuroMesh", "Neuron", "Neutral", "NormalRng", "OneToAllMsg", "PIDController", "PoissonRng", "Pool", "PoolBase", "PostMaster", "PsdMesh", "PulseGen", "PyRun", "QIF", "RandGenerator", "RandSpike", "ReacBase", "STDPSynHandler", "STDPSynapse", "SeqSynHandler", "Shell", "SimpleSynHandler", "SingleMsg", "SparseMsg", "Species", "SpikeGen", "SpikeStats", "Spine", "SpineMesh", "Stats", "SteadyState", "StimulusTable", "Stoich", "Streamer", "SymCompartment", "SynChan", "SynHandlerBase", "Synapse", "Table", "Table2", "TableBase", "TimeTable", "UniformRng", "VClamp", "Variable", "VectorTable", "ZombieCaConc", "ZombieCompartment", "ZombieFunction", "References", "Class Hierarchy", "MOOSE Functions", "testSched", "Chemical Bistables", "Chemical Oscillators", "Squid giant axon", "Teaching Tutorials"], "terms": {"welcom": [0, 1, 7, 33], "section": [0, 1, 7, 13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 59, 130, 156, 157, 159], "moos": [0, 1, 3, 5, 7, 8, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 32, 35, 37, 38, 41, 50, 65, 66, 72, 105, 115, 119, 136, 152, 156, 157, 158, 159], "document": [0, 1, 4, 7, 10, 13, 32, 34, 35, 49, 64, 158], "thi": [0, 6, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 32, 34, 37, 38, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 57, 58, 59, 61, 63, 64, 65, 66, 68, 69, 71, 72, 73, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 92, 93, 94, 96, 99, 100, 103, 104, 105, 108, 111, 113, 114, 115, 117, 118, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 146, 147, 148, 151, 154, 156, 157, 158, 159], "includ": [0, 9, 13, 15, 33, 38, 48, 59, 61, 71, 87, 104, 121, 123, 135, 139, 143, 157], "api": [0, 4, 33, 34, 41], "develop": [0, 4, 6, 38, 158], "resourc": 0, "introduct": [0, 1, 7, 12, 32, 36], "what": [0, 1, 7, 8, 12, 15, 18, 33, 38, 69, 154, 156, 157], "i": [0, 1, 6, 7, 8, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 33, 34, 35, 37, 38, 39, 40, 41, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 73, 77, 78, 79, 81, 82, 84, 85, 86, 87, 90, 92, 93, 94, 96, 100, 101, 103, 104, 105, 106, 108, 111, 113, 114, 115, 116, 118, 120, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 151, 152, 154, 156, 157, 158], "good": [0, 1, 7, 8, 33, 38, 133, 141, 142, 146, 156, 157], "instal": [0, 14, 15, 16, 19, 20, 21, 23, 25, 26, 33, 37, 38, 104], "us": [0, 5, 9, 12, 15, 18, 20, 29, 32, 34, 41, 42, 46, 47, 48, 50, 52, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 68, 69, 71, 73, 76, 77, 78, 79, 83, 84, 85, 86, 87, 91, 92, 93, 94, 96, 100, 103, 104, 105, 106, 108, 111, 113, 114, 115, 117, 120, 121, 122, 123, 124, 126, 130, 131, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 151, 154, 156, 157, 158, 159], "pre": [0, 5, 38, 69, 120, 121], "built": [0, 5, 9, 15, 33, 34, 38, 103, 113, 131, 135, 152, 157], "packag": [0, 5, 10], "build": [0, 1, 5, 7, 10, 12, 20, 27, 33, 36, 48, 59, 103, 104, 135], "graphic": [0, 5, 9, 13, 18, 32, 33, 38, 158], "user": [0, 5, 18, 38, 41, 53, 104, 130, 137, 154], "interfac": [0, 5, 9, 12, 18, 22, 32, 33, 38, 41, 47, 74, 75, 76, 87, 96, 97, 105, 135, 139, 152, 156, 158], "gui": [0, 5, 10, 13, 18, 20, 32, 33, 42, 158], "moogli": [0, 5, 10, 29], "quick": 0, "start": [0, 13, 38, 50, 52, 66, 69, 104, 113, 114, 133, 134, 135, 143, 152, 156, 157], "interact": [0, 13, 32, 33, 34, 158, 159], "tutori": [0, 1, 4, 7, 12, 15, 20, 22, 27, 32, 33, 38, 156, 157, 158], "get": [0, 6, 13, 32, 38, 58, 66, 69, 72, 84, 103, 105, 137, 148, 152, 154], "python": [0, 9, 14, 15, 16, 18, 19, 21, 23, 25, 26, 32, 34, 35, 37, 38, 103, 105, 115, 152, 154, 156, 157, 158], "script": [0, 6, 9, 12, 13, 18, 20, 32, 35, 38, 156, 157], "demonstr": [0, 12, 27, 32, 33, 38, 156, 157], "basic": [0, 1, 4, 7, 15, 32, 38, 73, 137, 157], "function": [0, 13, 20, 32, 33, 34, 41, 43, 48, 50, 59, 60, 63, 65, 71, 72, 73, 76, 77, 87, 99, 103, 104, 105, 113, 115, 123, 131, 133, 135, 141, 142, 147, 148, 151, 152, 153, 156], "class": [0, 9, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155], "refer": [0, 3, 4, 20, 33, 36, 77, 104, 105, 108, 113, 119, 154], "how": [0, 13, 15, 18, 22, 32, 38, 41, 79, 103, 122, 141, 142, 156, 157, 158], "doxygen": 0, "here": [1, 3, 6, 7, 13, 15, 20, 33, 38, 41, 50, 57, 58, 59, 69, 85, 103, 123, 135, 146, 156, 157], "you": [1, 3, 6, 7, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 33, 34, 37, 38, 48, 50, 53, 54, 60, 66, 69, 72, 85, 115, 133, 137, 141, 142, 154, 156, 157, 158], "find": [1, 3, 7, 12, 13, 38, 57, 90, 133, 154, 156, 157], "concept": [1, 7, 9, 15, 33, 38, 41, 159], "exampl": [1, 4, 7, 12, 13, 14, 16, 17, 19, 22, 24, 26, 27, 33, 34, 36, 41, 71, 104, 137, 154, 156, 157, 158], "level": [1, 4, 7, 9, 12, 20, 33, 38, 58, 60, 73, 104, 113, 114, 139, 154, 156], "cook": [1, 7], "book": [1, 7, 20, 116], "singl": [1, 7, 9, 13, 18, 22, 24, 25, 33, 41, 45, 46, 48, 52, 55, 58, 65, 66, 68, 69, 92, 93, 94, 108, 113, 114, 115, 122, 126, 131, 134, 143, 149, 151, 154, 156], "neuron": [1, 6, 7, 9, 12, 13, 22, 24, 27, 33, 34, 39, 40, 51, 52, 62, 69, 72, 79, 85, 86, 88, 116, 120, 137, 139, 141, 142, 146, 150, 153, 154, 158], "electr": [1, 7, 9, 15, 20, 22, 33, 34, 36, 38, 41, 50, 52, 57, 69, 103, 104, 113, 130, 131, 141, 142, 154], "aspect": [1, 7, 13, 22, 34, 38, 41, 50, 156], "biophys": [1, 7, 22, 154, 158], "chemic": [1, 6, 7, 9, 20, 22, 24, 33, 34, 36, 38, 41, 48, 50, 69, 96, 103, 130, 133, 135, 154, 159], "network": [1, 6, 7, 9, 18, 20, 22, 33, 86, 141, 142], "multiscal": [1, 7, 9, 22, 34, 36, 41], "model": [1, 6, 7, 9, 12, 17, 18, 22, 27, 32, 33, 34, 36, 41, 42, 48, 50, 51, 52, 53, 55, 57, 72, 79, 86, 92, 100, 103, 104, 116, 131, 133, 135, 137, 141, 142, 150, 154, 157, 158, 159], "rdesignu": [1, 7], "rdesigneur": [1, 7, 36, 41], "teach": [1, 7, 35, 156], "bistabl": [1, 7, 38, 69, 159], "oscil": [1, 7, 108, 159], "squid": [1, 7, 20, 33, 77, 78, 159], "giant": [1, 7, 159], "axon": [1, 7, 20, 140, 159], "improv": 2, "sbml": [2, 6, 9, 12, 15, 33, 34, 38], "support": [2, 6, 9, 13, 15, 18, 20, 33, 38, 63, 73, 141, 142, 144], "neuroml2": 2, "thank": 2, "padraig": 2, "glesson": 2, "variou": [2, 13, 18, 20, 33, 34, 38, 41, 117, 133, 154, 156, 157, 159], "bugfix": 2, "can": [3, 6, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 33, 34, 35, 37, 38, 41, 42, 47, 50, 54, 56, 58, 59, 65, 66, 68, 69, 72, 77, 79, 83, 84, 90, 103, 104, 105, 110, 113, 114, 115, 122, 128, 129, 133, 137, 138, 141, 142, 152, 154, 156, 157, 158], "all": [3, 6, 9, 14, 15, 16, 18, 19, 21, 23, 25, 26, 33, 34, 35, 37, 38, 41, 47, 48, 50, 52, 54, 55, 58, 59, 60, 65, 66, 69, 71, 72, 73, 79, 87, 90, 92, 96, 102, 103, 104, 105, 113, 119, 122, 123, 131, 132, 133, 135, 137, 139, 143, 146, 154, 156, 157], "necessari": [3, 103, 113, 131, 156], "click": [3, 6, 13, 14, 15, 16, 18, 19, 21, 23, 25, 26, 33, 34, 35, 37, 158, 159], "choos": [4, 34, 38], "your": [4, 6, 14, 15, 16, 19, 21, 23, 25, 26, 33, 34, 37, 38], "experi": [4, 18, 33, 44], "beginn": [4, 7], "learn": [4, 33, 35, 122, 138, 139, 156, 159], "cookbook": [4, 22, 33], "intermedi": 4, "In": [4, 6, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 33, 34, 37, 38, 41, 44, 52, 54, 57, 65, 66, 69, 86, 96, 103, 108, 137, 138, 154, 156, 157], "depth": [4, 33], "guid": 4, "advanc": [4, 33, 38, 50, 57, 79, 122, 154, 156], "complet": [4, 6, 15, 34, 38, 50, 156], "If": [6, 33, 34, 38, 41, 46, 48, 50, 54, 55, 58, 65, 69, 72, 96, 101, 103, 104, 111, 115, 118, 123, 126, 128, 129, 133, 134, 135, 138, 141, 142, 143, 154, 156], "onli": [6, 13, 33, 34, 38, 48, 52, 53, 57, 65, 66, 69, 87, 90, 96, 104, 111, 123, 128, 133, 141, 142, 144, 152, 154], "need": [6, 13, 15, 18, 33, 38, 48, 52, 57, 60, 92, 94, 104, 137, 139, 154, 156], "recommend": [6, 15, 133], "wai": [6, 13, 15, 33, 34, 79, 103, 122, 133, 156], "via": [6, 17, 20, 27, 33, 38, 39, 66, 69, 84, 137, 152], "To": [6, 20, 33, 38, 122, 152, 156, 159], "nightli": 6, "version": [6, 13, 18, 33, 34, 38, 104, 154, 156, 157, 159], "upgrad": 6, "we": [6, 13, 18, 33, 38, 41, 53, 54, 57, 71, 87, 96, 103, 104, 108, 137, 138, 156, 157], "also": [6, 9, 13, 15, 18, 20, 33, 34, 38, 41, 50, 52, 53, 57, 58, 59, 65, 66, 68, 74, 75, 76, 79, 85, 92, 93, 94, 96, 97, 99, 100, 103, 104, 105, 108, 113, 114, 115, 123, 130, 133, 141, 142, 151, 154, 156, 157], "have": [6, 13, 15, 20, 33, 34, 38, 41, 50, 54, 59, 65, 66, 69, 71, 103, 104, 111, 113, 115, 119, 131, 133, 138, 141, 142, 154, 156, 157], "addit": [6, 13, 15, 33, 34, 38, 65, 66], "compon": [6, 9, 15, 33, 100, 104, 154], "our": [6, 33, 38], "repositori": 6, "host": 6, "open": [6, 13, 20, 33, 38, 72, 73, 90, 101, 156], "servic": 6, "most": [6, 13, 33, 38, 54, 65, 69, 73, 104, 154, 156, 157], "distribut": [6, 38, 41, 44, 63, 66, 67, 104, 106, 109, 117, 137, 145], "ar": [6, 9, 12, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 33, 34, 35, 37, 38, 41, 48, 50, 52, 53, 54, 58, 59, 63, 65, 66, 69, 71, 73, 77, 78, 85, 87, 90, 96, 100, 103, 104, 105, 106, 108, 111, 113, 122, 123, 131, 132, 133, 135, 137, 139, 141, 142, 146, 152, 154, 156, 157, 159], "avail": [6, 33, 35, 38, 65, 66, 104, 154, 156, 157], "visit": 6, "page": [6, 14, 15, 16, 19, 21, 23, 25, 26, 33, 35, 37, 119, 158], "pick": [6, 156, 157], "follow": [6, 10, 13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 34, 37, 38, 41, 77, 104, 141, 142, 146, 154, 156, 157, 159], "instruct": [6, 38, 104], "tool": [6, 15, 34], "visual": [6, 18, 34, 38], "activ": [6, 13, 18, 20, 50, 69, 81, 82, 122, 138, 139, 156, 157], "cento": 6, "6": [6, 38, 50, 54, 65, 66, 73, 86, 96, 104, 154, 156, 157], "gentoo": 6, "macosx": 6, "yet": [6, 122, 133, 135, 139, 143, 156], "becaus": [6, 33, 38, 57, 100, 103, 113, 131, 133, 157], "pyqt4": 6, "world": 6, "ha": [6, 9, 13, 15, 20, 33, 34, 38, 41, 48, 50, 52, 55, 58, 65, 66, 68, 69, 71, 73, 77, 79, 82, 87, 91, 92, 93, 94, 96, 103, 104, 108, 113, 114, 115, 118, 123, 128, 129, 133, 134, 141, 142, 143, 151, 154, 156, 157], "move": [6, 13, 32, 34, 38, 123, 152, 156], "onto": [6, 13, 38, 54, 139, 156, 157], "pyqt5": 6, "see": [6, 13, 15, 18, 20, 33, 34, 38, 41, 50, 63, 69, 154, 156, 157, 158, 159], "statu": [6, 38, 73, 133, 135, 156], "http": [6, 18, 66, 108], "github": [6, 11, 34], "com": 6, "bhallalab": 6, "issu": [6, 33, 41], "16": [6, 38, 50, 135, 156], "howev": [6, 33, 38, 137, 156], "homebrew": 6, "brew": 6, "tap": [6, 156], "Or": 6, "altern": [6, 13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 77, 79, 157], "stabl": [6, 133, 156], "from": [6, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 25, 26, 32, 33, 34, 37, 41, 43, 45, 46, 47, 50, 52, 53, 57, 58, 62, 65, 66, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 100, 103, 104, 105, 108, 111, 113, 114, 115, 118, 120, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 149, 151, 154, 156, 157, 158], "public": [6, 156, 157], "pull": [6, 33, 41], "run": [6, 12, 13, 16, 17, 18, 20, 21, 22, 23, 25, 26, 32, 35, 37, 38, 47, 50, 112, 113, 114, 115, 123, 133, 154, 156, 157, 158], "rm": [6, 33, 38, 39, 40, 52, 62, 85, 104, 116, 137], "v": [6, 13, 18, 20, 33, 85, 86], "tmp": 6, "x11": 6, "unix": [6, 33, 41], "e": [6, 13, 18, 20, 38, 47, 53, 58, 65, 66, 69, 102, 108, 122, 143, 146], "displai": [6, 9, 13, 18, 29, 33, 34, 42, 156, 157], "launch": 6, "xterm": 6, "moosegui": [6, 12, 17, 20, 22, 38], "termin": [6, 33, 58, 68, 104, 154], "lauch": 6, "case": [6, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 41, 50, 54, 65, 66, 86, 103, 133, 137, 148, 156], "list": [6, 18, 20, 33, 34, 38, 41, 54, 96, 103, 104, 105, 131, 154], "want": [6, 14, 15, 16, 19, 21, 23, 25, 26, 33, 34, 37, 38, 48, 50, 57, 69, 138, 154, 156], "latest": [6, 33, 71, 87], "code": [6, 13, 32, 38, 42, 152, 156, 157], "read": [6, 15, 18, 20, 33, 38, 57, 65, 66, 79, 143, 144, 146, 156], "first": [6, 20, 33, 34, 38, 47, 48, 50, 52, 57, 58, 65, 66, 68, 75, 86, 90, 92, 93, 94, 103, 104, 108, 113, 114, 115, 131, 134, 143, 151, 156, 158], "sourc": [6, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 41, 43, 46, 47, 48, 50, 52, 53, 57, 58, 61, 65, 66, 68, 70, 71, 72, 81, 82, 83, 84, 86, 87, 91, 92, 94, 96, 98, 100, 102, 103, 104, 105, 107, 108, 111, 113, 114, 115, 117, 118, 119, 125, 127, 128, 132, 134, 137, 139, 141, 142, 144, 146, 154], "git": 6, "clone": 6, "download": 6, "snapshot": [6, 38], "repo": 6, "link": [6, 15, 33, 34, 35, 38, 111, 159], "creat": [6, 9, 13, 15, 17, 18, 20, 34, 38, 57, 65, 66, 76, 104, 108, 113, 114, 123, 154, 156, 157], "folder": [6, 156, 157], "call": [6, 15, 33, 38, 41, 43, 46, 47, 50, 52, 57, 58, 59, 61, 65, 66, 68, 71, 72, 79, 81, 83, 86, 87, 90, 91, 92, 93, 94, 96, 101, 104, 105, 108, 111, 112, 113, 114, 115, 117, 118, 119, 128, 132, 133, 134, 136, 139, 141, 142, 144, 146, 151, 154, 155, 156], "wget": 6, "archiv": 6, "master": 6, "zip": 6, "unzip": 6, "don": [6, 34, 38, 48, 103], "t": [6, 20, 33, 34, 38, 48, 50, 52, 69, 71, 87, 90, 103, 122, 128, 129, 154, 156, 157], "other": [6, 13, 15, 20, 33, 38, 41, 50, 52, 54, 55, 57, 59, 60, 65, 66, 68, 71, 72, 84, 85, 96, 104, 106, 113, 114, 133, 137, 143, 154, 156, 157], "releas": 6, "next": [6, 33, 38, 47, 48, 57, 133, 134, 154, 156], "requir": [6, 20, 33, 38, 47, 65, 100, 103, 104, 133, 137], "o": [6, 156], "name": [6, 13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 33, 34, 37, 38, 42, 49, 52, 64, 65, 66, 73, 98, 103, 104, 105, 115, 117, 123, 141, 142, 154, 156, 157], "mai": [6, 15, 18, 20, 33, 38, 41, 50, 57, 100, 103, 105, 108, 113, 118, 123, 128, 131, 156], "vari": [6, 18, 32, 38, 52, 92, 118, 135, 148], "cmake": 6, "2": [6, 13, 15, 20, 33, 38, 41, 43, 48, 50, 57, 65, 66, 68, 69, 71, 73, 75, 76, 84, 85, 86, 87, 96, 103, 104, 106, 108, 113, 114, 122, 133, 135, 137, 143, 146, 154, 156, 157], "8": [6, 13, 33, 38, 50, 87, 96, 103, 113, 135, 141, 142, 154, 156, 157], "higher": [6, 156], "g": [6, 13, 15, 20, 38, 104, 143, 156, 157], "clang": 6, "c": [6, 13, 20, 33, 38, 40, 46, 57, 65, 66, 77, 85, 86, 103, 137, 143, 152, 156, 157], "11": [6, 13, 33, 38, 50, 156], "gsl": [6, 13, 87, 133, 156, 157], "1": [6, 13, 20, 33, 38, 41, 43, 46, 50, 53, 54, 57, 58, 61, 63, 65, 66, 68, 69, 71, 73, 75, 76, 79, 83, 86, 87, 92, 96, 97, 100, 103, 104, 105, 106, 111, 113, 114, 122, 128, 131, 133, 135, 141, 142, 143, 146, 154, 156, 157, 158], "option": [6, 13, 15, 34, 38, 50, 71, 87, 103, 106, 154, 156, 157], "hdf5": [6, 9, 33, 72, 73], "x": [6, 20, 33, 34, 38, 41, 42, 48, 52, 54, 55, 63, 65, 66, 75, 76, 77, 83, 84, 94, 104, 122, 126, 134, 135, 143, 156, 157], "For": [6, 13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 34, 37, 38, 41, 65, 71, 103, 104, 105, 113, 134, 137, 146, 154, 156, 158], "write": [6, 9, 15, 33, 72, 73, 101, 136, 141, 142, 154], "data": [6, 9, 32, 33, 34, 41, 50, 72, 73, 101, 105, 134, 136, 141, 142, 143, 144, 154, 156], "base": [6, 20, 27, 33, 38, 40, 41, 46, 47, 48, 49, 50, 53, 61, 65, 66, 69, 73, 76, 77, 78, 79, 82, 83, 84, 87, 102, 103, 105, 111, 116, 117, 118, 119, 128, 129, 139, 146, 156, 157, 158], "format": [6, 9, 12, 15, 18, 20, 33, 34, 38, 104, 136, 141, 142, 143, 156, 157], "disabl": [6, 13, 33, 38, 105], "default": [6, 13, 15, 33, 34, 38, 46, 48, 50, 54, 58, 63, 66, 69, 71, 72, 73, 79, 85, 86, 87, 103, 104, 105, 106, 108, 113, 115, 134, 136, 141, 142, 146, 154, 156, 157, 158], "both": [6, 33, 35, 38, 65, 77, 86, 100, 103, 104, 115, 122, 130, 156, 159], "7": [6, 33, 38, 50, 65, 66, 96, 154, 156], "3": [6, 13, 20, 33, 41, 43, 48, 50, 57, 63, 65, 66, 87, 96, 103, 122, 133, 135, 154, 156, 157], "dev": 6, "header": 6, "librari": [6, 13, 33, 38, 104, 156, 157], "devel": 6, "numpi": [6, 33, 38, 156, 157], "arrai": [6, 33, 38, 41, 48, 54, 66, 69, 73, 75, 76, 83, 101, 104, 120, 122, 123, 124, 139, 156], "networkx": 6, "automat": [6, 13, 38, 79, 104, 141, 142, 154, 156], "layout": [6, 12, 34, 38], "pygraphviz": 6, "matplotlib": [6, 9, 29, 33, 38, 156, 157], "plot": [6, 13, 18, 20, 29, 33, 38, 143, 154, 156, 157], "simul": [6, 9, 13, 17, 20, 22, 32, 41, 50, 69, 105, 112, 122, 123, 141, 142, 154, 156, 157, 158, 159], "result": [6, 20, 33, 38, 52, 53, 65, 66, 69, 83, 108, 130, 143, 156, 158], "libsbml": 6, "pylibsbml": 6, "manag": [6, 33, 38, 50, 69, 104, 120, 123, 124, 138, 154], "On": [6, 34, 38, 50], "debian": 6, "ubuntu": [6, 34], "sudo": 6, "apt": 6, "libhdf5": 6, "libgsl0": 6, "libpython": 6, "fedora": 6, "rhel": 6, "scientif": [6, 13, 143, 156, 157, 159], "yum": 6, "libgsl": 6, "opensus": 6, "zypper": 6, "cd": 6, "moose_directori": 6, "mkdir": 6, "_build": 6, "make": [6, 9, 13, 33, 34, 38, 123, 141, 142, 154, 156, 157], "ctest": 6, "output": [6, 13, 15, 33, 38, 41, 43, 50, 52, 58, 72, 108, 113, 114, 115, 117, 119, 134, 136, 141, 142, 143, 146, 154, 156, 157], "failur": [6, 38, 156], "": [6, 13, 15, 20, 33, 38, 48, 53, 63, 66, 85, 86, 100, 104, 105, 115, 120, 121, 137, 141, 142, 152, 154, 156, 157, 158], "extent": 6, "few": [6, 20, 34, 38], "test": [6, 38, 133], "check": [6, 33, 38, 139], "process": [6, 33, 38, 41, 43, 45, 46, 47, 50, 52, 57, 58, 59, 61, 65, 66, 68, 71, 72, 79, 81, 83, 86, 87, 91, 92, 93, 94, 96, 101, 108, 111, 112, 113, 114, 115, 117, 118, 119, 128, 132, 134, 135, 136, 139, 141, 142, 144, 146, 149, 151, 154, 155, 156, 157], "wa": [6, 13, 15, 57, 156], "success": [6, 38, 81, 82, 134, 156, 157], "non": [6, 15, 41, 48, 50, 135, 156], "standard": [6, 13, 15, 38, 69, 132, 146, 157], "directori": [6, 14, 15, 16, 18, 19, 21, 23, 25, 26, 33, 37, 38, 42, 156, 157, 158], "pass": [6, 33, 38, 52, 103, 113, 128, 134, 135, 156], "argument": [6, 33, 38, 43, 52, 58, 65, 66, 68, 76, 81, 82, 86, 92, 93, 94, 96, 103, 104, 108, 113, 114, 115, 123, 135, 143, 151, 156, 157], "dcmake_install_prefix": 6, "path": [6, 15, 33, 38, 42, 59, 72, 79, 103, 104, 105, 123, 135, 141, 142, 154, 156, 157], "dir": [6, 33], "dcmake_install_pref": 6, "home": [6, 38, 54], "local": [6, 38, 71, 72, 87, 96, 115, 122, 135, 154], "differ": [6, 13, 20, 33, 38, 41, 47, 50, 55, 58, 62, 66, 69, 100, 103, 108, 113, 118, 131, 133, 134, 135, 139, 141, 142, 154, 156, 157, 158], "dpython_execut": 6, "opt": 6, "python3": 6, "bin": [6, 132], "after": [6, 33, 38, 41, 52, 61, 68, 69, 82, 100, 113, 114, 117, 120, 133, 154, 156, 157], "pretti": [6, 38], "easi": [6, 38], "everyth": [6, 33, 156], "went": [6, 158], "fine": [6, 33, 38, 77, 103, 146], "should": [6, 13, 15, 33, 34, 38, 52, 53, 54, 66, 68, 71, 73, 75, 76, 86, 103, 104, 108, 111, 115, 117, 122, 134, 137, 144, 146, 154, 156], "abl": [6, 20, 156], "import": [6, 20, 32, 38, 137, 156, 157], "shell": [6, 20, 33, 46, 50, 57, 96, 153, 156], "alreadi": [6, 33, 34, 38, 73, 104, 157], "runnung": 6, "command": [6, 14, 15, 16, 19, 21, 23, 25, 26, 33, 36, 37, 50, 105, 108, 146, 156, 157, 158], "either": [6, 13, 15, 38, 41, 65, 66, 68, 83, 84, 128, 129, 141, 142, 146, 148, 156, 157], "exist": [6, 33, 38, 73, 104, 115, 152], "within": [6, 13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 33, 34, 37, 38, 48, 50, 54, 57, 79, 82, 104, 123, 131, 132, 133, 156, 157, 158], "earlier": [6, 38, 154], "It": [6, 9, 13, 20, 33, 34, 38, 41, 52, 53, 56, 58, 65, 66, 68, 71, 77, 85, 86, 90, 92, 93, 94, 96, 108, 113, 114, 115, 120, 121, 122, 123, 124, 133, 135, 137, 151, 154, 156, 157], "found": [6, 10, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 50, 79, 90, 103, 135, 136, 156, 157], "under": [6, 13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 33, 37, 38, 79, 104, 133, 154, 157, 159], "location_of_moose_fold": 6, "below": [6, 13, 15, 20, 25, 33, 34, 35, 38, 41, 48, 52, 62, 83, 128, 129, 134, 137, 156, 157, 158], "which": [6, 13, 15, 18, 20, 33, 34, 41, 47, 50, 52, 53, 54, 58, 59, 65, 66, 68, 69, 77, 79, 87, 90, 92, 93, 94, 99, 100, 103, 104, 108, 113, 114, 115, 119, 131, 135, 141, 142, 151, 154, 156, 157, 158], "4": [6, 13, 15, 33, 38, 41, 50, 63, 65, 66, 73, 85, 87, 96, 108, 133, 135, 144, 154, 156, 157], "signal": [6, 9, 13, 20, 33, 34, 36, 41, 50, 141, 142], "qt4": 6, "now": [6, 13, 33, 38, 41, 77, 154, 156], "fire": [6, 17, 18, 20, 27, 33, 38, 39, 40, 62, 71, 81, 82, 85, 88, 116, 118, 128, 139], "up": [6, 12, 13, 18, 25, 32, 34, 38, 48, 50, 52, 54, 57, 58, 59, 71, 77, 78, 83, 84, 92, 94, 103, 104, 111, 128, 129, 133, 135, 144, 148, 154, 156, 157, 158], "mgui": 6, "py": [6, 14, 15, 16, 18, 19, 21, 23, 25, 26, 33, 37, 38, 156, 157, 158], "commnad": 6, "subproject": 6, "more": [6, 13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 32, 34, 37, 38, 41, 52, 65, 66, 100, 103, 104, 133, 138, 146, 156, 157, 158], "detail": [6, 9, 13, 15, 17, 18, 32, 34, 38, 50, 104, 108, 158], "part": [6, 12, 13, 25, 33, 38, 40, 52, 113, 114, 120, 121, 122, 137, 152, 156, 157], "tricki": 6, "multipl": [6, 9, 13, 33, 38, 41, 50, 65, 66, 72, 90, 128, 132, 138], "depedneci": 6, "osg": 6, "3d": [6, 18], "render": 6, "openscenegraph": [6, 38], "0": [6, 15, 20, 33, 34, 38, 41, 43, 46, 50, 54, 57, 63, 65, 66, 69, 71, 72, 75, 76, 79, 83, 85, 86, 90, 96, 100, 103, 104, 105, 106, 113, 114, 116, 128, 133, 135, 141, 142, 146, 154, 156, 157, 158], "easili": [6, 33], "oper": [6, 9, 12, 33, 38, 41, 50, 52, 54, 58, 65, 66, 68, 92, 93, 94, 104, 105, 108, 113, 114, 115, 123, 133, 151, 154], "system": [6, 9, 12, 13, 33, 41, 55, 58, 59, 65, 66, 71, 87, 90, 103, 104, 108, 133, 135, 154, 157, 158, 159], "reason": [6, 33, 38, 137, 156], "would": [6, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 41, 48, 54, 71, 135, 156, 157], "gl": 6, "sip": 6, "libqt4": 6, "libjpeg": 6, "simpl": [6, 12, 13, 17, 22, 24, 27, 33, 38, 86, 104, 123, 124, 139, 148, 157, 159], "j3": 6, "troubl": 6, "pleas": [6, 34, 46, 159], "report": [6, 10, 34, 38, 50, 122, 133, 156], "object": [9, 13, 15, 25, 34, 38, 41, 42, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 65, 66, 68, 71, 72, 73, 75, 76, 79, 80, 82, 84, 87, 90, 94, 99, 101, 103, 104, 105, 108, 111, 113, 114, 115, 118, 123, 125, 128, 129, 132, 133, 135, 136, 137, 138, 141, 142, 146, 150, 151, 153, 154, 156, 157], "orient": [9, 33, 34, 38, 41, 137, 156, 157], "environ": [9, 33, 34, 35, 154, 156, 157, 159], "design": [9, 15, 38], "neural": [9, 86], "rang": [9, 20, 38, 46, 58, 77, 78, 87, 100, 104, 108, 133, 139, 156, 157], "subcellular": 9, "biochem": [9, 15, 38, 141, 142, 157], "reaction": [9, 12, 24, 34, 41, 53, 54, 57, 59, 61, 71, 87, 96, 103, 111, 119, 133, 135, 156, 157], "complex": [9, 13, 15, 33, 38, 53, 156], "circuit": [9, 20, 33, 38, 137, 146], "larg": [9, 15, 20, 33, 38, 100, 156, 157, 158], "mani": [9, 13, 15, 33, 38, 41, 47, 54, 96, 100, 103, 133, 136, 154, 156, 157], "stochast": [9, 13, 33, 38, 156, 157], "comput": [9, 13, 14, 15, 16, 19, 21, 23, 25, 26, 32, 33, 37, 38, 41, 43, 57, 63, 66, 77, 78, 79, 86, 92, 94, 100, 102, 104, 106, 113, 115, 122, 133, 135, 137, 154, 156, 157, 158], "multicompart": [9, 33], "spike": [9, 20, 27, 38, 39, 40, 62, 69, 81, 82, 85, 86, 116, 118, 120, 121, 128, 129, 132, 139, 140, 141, 142, 144, 153, 154], "scale": [9, 13, 33, 34, 38, 41, 46, 47, 52, 55, 59, 69, 77, 78, 96, 100, 102, 104, 108, 122, 130, 143, 157, 159], "do": [9, 13, 15, 18, 22, 33, 34, 38, 41, 46, 48, 52, 53, 57, 60, 69, 84, 104, 122, 128, 129, 134, 137, 156, 157], "calcul": [9, 13, 20, 33, 34, 38, 41, 46, 50, 52, 60, 65, 66, 76, 77, 79, 87, 90, 92, 100, 102, 104, 108, 133, 137, 143, 151, 156, 157], "togeth": [9, 32, 34, 38], "One": [9, 13, 15, 34, 38, 71, 96, 105, 137, 138, 156, 159], "its": [9, 13, 15, 18, 20, 33, 34, 38, 41, 50, 57, 61, 65, 66, 69, 72, 79, 96, 103, 104, 113, 114, 117, 123, 130, 131, 134, 135, 137, 154, 156, 157], "major": [9, 34, 133], "biolog": [9, 13, 33, 34, 38, 41], "combin": [9, 34, 38], "map": [9, 33, 38, 41, 50, 54, 100, 103, 104, 111, 113, 131, 133, 135], "instanc": [9, 33, 38, 154], "connect": [9, 13, 15, 18, 20, 27, 32, 34, 38, 50, 52, 53, 58, 61, 66, 68, 69, 72, 96, 103, 105, 111, 115, 119, 126, 127, 137, 138, 139, 146, 152, 156, 157], "them": [9, 15, 32, 34, 38, 41, 47, 57, 72, 80, 103, 115, 119, 123, 124, 154, 156, 158], "messag": [9, 15, 17, 32, 33, 34, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157], "numer": [9, 12, 33, 38, 41, 50, 66, 75, 76, 91, 104, 133, 135, 156], "whose": [9, 33, 38, 137, 154, 157], "job": [9, 33, 38, 52], "take": [9, 33, 38, 41, 45, 46, 77, 78, 122, 128, 129, 130, 149, 151, 154, 156, 157, 158], "over": [9, 13, 33, 34, 38, 41, 71, 79, 87, 151, 154, 156], "difficult": [9, 33, 38], "certain": [9, 13, 33, 38], "domain": [9, 13, 33, 38, 48], "fast": [9, 33, 38, 108], "There": [9, 15, 18, 33, 38, 41, 50, 98, 103, 141, 142, 156], "solver": [9, 12, 33, 38, 41, 42, 50, 59, 71, 79, 87, 91, 94, 133, 135, 154, 156, 157], "determinist": [9, 13, 33, 90, 156, 157], "chemistri": [9, 15, 33, 38], "diffus": [9, 12, 13, 33, 41, 48, 50, 54, 55, 57, 59, 87, 96, 103, 104, 111, 130, 135, 156, 157], "just": [9, 13, 33, 38, 43, 48, 52, 103, 111, 113, 118, 128, 131, 134, 137, 141, 142, 156], "engin": [9, 33, 41, 135], "provid": [9, 27, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154], "represent": [9, 13, 33, 58], "cours": [9, 13, 15, 33, 38, 41, 81, 104], "pyqt": [9, 33], "opengl": [9, 33, 38], "These": [9, 13, 15, 20, 33, 34, 35, 38, 41, 52, 66, 78, 87, 105, 141, 142, 156, 157, 159], "neuroml": [9, 18, 20, 33, 38], "genesi": [9, 13, 15, 17, 20, 33, 34, 38, 46, 47, 52, 57, 58, 74, 75, 76, 79, 97, 118, 156, 157, 158], "kkit": [9, 13, 15, 33, 38, 156, 157], "cell": [9, 13, 15, 18, 20, 27, 33, 38, 102, 103, 104, 122, 135, 137], "p": [9, 13, 20, 33, 38, 44, 53, 63, 104, 157], "nsdf": [9, 33, 38, 101], "full": [10, 33, 34, 38, 104, 123, 156, 157], "place": [10, 15, 35, 41, 56, 60, 103, 104, 156], "relat": [10, 13, 34, 100], "core": [10, 41, 48, 59, 71, 87, 156], "collect": [11, 13, 38, 72, 101, 137], "kinet": [12, 20, 22, 34, 38, 90, 135, 154, 156, 157], "todo": 12, "method": [12, 14, 16, 19, 21, 23, 25, 26, 33, 37, 38, 57, 63, 87, 90, 91, 106, 133, 144, 154, 156, 157], "kinetikit": [12, 38], "12": [12, 34, 38, 50, 103, 156, 157], "icon": [12, 34, 42], "load": [12, 13, 15, 17, 18, 22, 32, 33, 34, 96, 104, 143, 144, 154, 156, 157, 158], "save": [12, 13, 22, 33, 34, 38, 57, 72, 101], "an": [12, 13, 15, 18, 20, 32, 33, 34, 39, 41, 42, 48, 50, 52, 53, 57, 69, 73, 77, 84, 85, 86, 104, 105, 113, 114, 118, 120, 122, 123, 128, 130, 135, 137, 143, 146, 154, 156, 157, 158], "cspace": [12, 15, 156], "set": [12, 13, 18, 25, 32, 34, 38, 47, 50, 53, 54, 55, 58, 59, 60, 65, 66, 71, 75, 77, 82, 85, 91, 92, 102, 103, 104, 105, 110, 128, 129, 131, 133, 134, 135, 137, 141, 142, 146, 148, 154, 156, 157], "cross": [12, 38, 48, 59, 71, 87, 128, 129, 130, 135], "compart": [12, 17, 18, 20, 24, 25, 33, 34, 41, 47, 48, 50, 52, 55, 57, 59, 68, 69, 71, 79, 82, 85, 87, 92, 94, 96, 103, 104, 111, 113, 128, 131, 135, 137, 138, 146, 150, 153, 154, 156, 157], "tweak": [12, 38], "paramet": [12, 13, 20, 33, 38, 44, 47, 53, 62, 66, 67, 77, 86, 91, 104, 108, 116, 134, 156, 157, 158], "A": [12, 13, 18, 33, 34, 38, 42, 50, 57, 58, 69, 71, 77, 78, 79, 86, 87, 90, 105, 137, 154, 156, 157], "ture": [12, 159], "manipul": [12, 13, 34, 108, 156], "transport": [12, 41, 111], "branch": [12, 38, 51, 52, 79, 103, 104, 137, 150], "dendrit": [12, 52, 69, 103, 104, 137], "tree": [12, 33, 38, 41, 72, 103, 104, 111, 113, 123, 131, 154], "steadi": [12, 13, 38, 52, 100, 108, 122, 133, 159], "state": [12, 13, 33, 34, 38, 41, 73, 75, 76, 77, 78, 90, 91, 92, 94, 108, 133, 135, 144, 154, 157, 159], "defin": [12, 13, 15, 20, 25, 50, 52, 63, 65, 66, 77, 96, 103, 104, 105, 115, 122, 135, 156, 157], "upind": [13, 34, 156, 157], "bhalla": [13, 15, 18, 34, 38, 156, 157], "harsha": [13, 34], "rani": [13, 34], "nov": [13, 38], "2016": [13, 38], "deriv": [13, 33, 48, 57, 65, 66, 100, 105, 108, 128, 129, 133, 135, 138, 146], "similar": [13, 20, 38, 41, 47, 74, 75, 76, 97, 103, 156], "known": [13, 38, 108, 157], "much": [13, 33, 38, 41, 57, 108, 128, 129, 156], "occur": [13, 52, 69, 90, 128, 129], "through": [13, 20, 33, 34, 38, 41, 48, 52, 86, 100, 104, 105, 137, 138, 154, 156, 158], "form": [13, 15, 33, 35, 38, 41, 52, 66, 77, 104, 137, 154, 157], "synapt": [13, 18, 20, 25, 33, 69, 81, 82, 120, 121, 122, 130, 138, 140], "plastic": [13, 27, 69, 120, 121, 122, 123, 124, 139], "begin": [13, 33, 79, 134, 156, 157], "calcium": [13, 33, 41, 45, 46, 57, 79, 100, 149, 156], "influx": [13, 38, 57], "synaps": [13, 17, 18, 27, 38, 69, 79, 120, 121, 122, 123, 124, 138, 139, 153], "bind": [13, 38, 157], "calmodulin": 13, "event": [13, 38, 41, 69, 71, 81, 82, 86, 105, 118, 128, 129, 138, 139, 140, 156], "repres": [13, 20, 33, 34, 38, 41, 69, 71, 87, 122, 143], "term": [13, 38, 39, 40, 41, 47, 48, 59, 75, 76, 77, 78, 85, 86, 96, 103, 108, 116, 122, 135, 137, 156, 157], "ca": [13, 18, 20, 27, 38, 46, 69, 100, 156], "cam": [13, 38], "Such": [13, 66], "equat": [13, 20, 32, 38, 62, 69, 77, 85, 86, 90, 122, 156, 157, 158], "ordinari": [13, 33, 156, 157], "differenti": [13, 32, 66, 90, 108, 156, 157], "ignor": [13, 48, 59, 69, 103, 123, 132, 133], "space": [13, 38, 41, 54, 104, 122, 133, 137, 144, 156], "d": [13, 20, 39, 40, 57, 69, 77, 85, 86, 92, 103, 108, 122, 156, 157], "dt": [13, 20, 33, 38, 39, 40, 46, 50, 52, 57, 58, 62, 65, 66, 68, 79, 85, 86, 87, 92, 93, 94, 105, 108, 113, 114, 115, 116, 122, 123, 141, 142, 146, 151, 154, 156, 157], "\u00e2\u02c6": 13, "4kf": 13, "4kb": 13, "ca4": 13, "kf": [13, 119, 156, 157], "kb": [13, 38, 119, 156, 157], "help": [13, 20, 33, 38, 133, 137, 152, 158], "describ": [13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 33, 34, 37, 41, 63, 77, 158], "well": [13, 33, 34, 38, 71, 87, 133, 135, 143, 156, 157], "stir": [13, 135], "point": [13, 33, 34, 38, 41, 58, 66, 71, 73, 103, 122, 133, 137, 143, 156], "thei": [13, 14, 15, 16, 18, 19, 21, 23, 25, 26, 33, 37, 38, 50, 53, 69, 103, 132, 133, 137, 141, 142, 154, 156, 157, 158], "could": [13, 33, 34, 38, 41, 156, 157], "explicitli": [13, 15, 33, 38, 54, 60, 72, 141, 142, 154], "solv": [13, 32, 79, 90, 156], "formul": 13, "At": [13, 33, 38, 41, 85, 156], "present": [13, 20, 33, 38, 47, 54, 74, 75, 76, 96, 97, 103, 104, 131, 135, 154, 157], "handl": [13, 15, 20, 38, 41, 43, 46, 47, 50, 52, 53, 57, 58, 59, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 86, 87, 91, 92, 93, 94, 96, 101, 104, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 151, 155], "compartment": [13, 17, 20, 27, 34, 50, 52, 79, 104, 141, 142, 154], "doe": [13, 15, 18, 33, 34, 38, 41, 48, 52, 56, 57, 61, 65, 79, 104, 105, 115, 130, 137, 138, 139, 154, 156, 157], "though": [13, 38, 100, 156], "itself": [13, 15, 38, 61, 100, 137, 157], "kkit12": 13, "adapt": [13, 18, 38, 39, 40, 85, 87], "timestep": [13, 33, 38, 41, 43, 47, 50, 52, 53, 61, 71, 82, 87, 91, 105, 111, 119, 122, 128, 134, 137, 139, 141, 142, 144, 154, 156, 157], "5th": [13, 87], "order": [13, 15, 33, 34, 38, 50, 54, 66, 87, 90, 92, 94, 103, 104, 113, 122, 131, 133, 154, 156, 157], "rung": [13, 87, 156, 157], "kutta": [13, 87, 156, 157], "fehlberg": [13, 87, 156, 157], "gnu": [13, 156, 157], "optim": [13, 156, 157], "gillespi": [13, 38, 156, 157], "algorithm": [13, 38, 63, 106, 133, 156, 157], "custom": [13, 156, 157], "implement": [13, 33, 38, 41, 68, 90, 122, 135, 139, 143, 146, 156, 157], "file": [13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 33, 37, 50, 72, 73, 101, 104, 136, 141, 142, 143, 144, 154, 156, 157], "schemat": 13, "appear": [13, 34, 38, 120, 121], "editor": [13, 33, 156], "view": [13, 20, 33, 152], "tab": [13, 14, 15, 16, 19, 21, 23, 25, 26, 37, 158], "look": [13, 33, 38, 50, 59, 71, 77, 78, 83, 84, 94, 128, 129, 135, 154, 156, 157], "entri": [13, 32, 38, 47, 48, 50, 52, 54, 58, 65, 66, 68, 69, 75, 76, 77, 78, 84, 86, 92, 93, 94, 96, 98, 101, 103, 104, 105, 108, 111, 113, 114, 115, 120, 122, 123, 124, 126, 131, 134, 135, 143, 144, 151], "properti": [13, 18, 20, 32, 34, 38, 41, 73, 104, 130, 156, 157], "tabl": [13, 15, 32, 33, 50, 65, 75, 76, 77, 78, 79, 84, 92, 94, 133, 134, 136, 142, 143, 144, 148, 153, 154, 156], "right": [13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 34, 37, 38, 54, 78, 156, 158], "edit": [13, 18, 20, 34, 38], "chang": [13, 33, 34, 48, 53, 54, 57, 85, 96, 104, 130, 135, 146, 156, 157, 158], "valu": [13, 15, 29, 33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 156], "drag": [13, 34], "window": [13, 34, 38, 120, 121, 132, 158], "concentr": [13, 15, 20, 32, 34, 38, 41, 45, 46, 47, 48, 53, 57, 76, 90, 92, 94, 100, 102, 111, 119, 133, 148, 149, 156, 157], "time": [13, 15, 20, 29, 32, 33, 34, 38, 39, 40, 41, 46, 50, 52, 57, 58, 65, 66, 68, 69, 71, 72, 77, 79, 81, 82, 83, 92, 93, 94, 104, 108, 113, 114, 115, 117, 118, 120, 121, 122, 128, 129, 132, 133, 134, 135, 138, 141, 142, 144, 146, 151, 154, 156, 157], "plottabl": 13, "select": [13, 18, 20, 34, 38, 143], "along": [13, 20, 29, 59, 104, 122, 148, 156, 157], "updateinterv": 13, "prefer": [13, 15, 34, 141, 142], "button": [13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 34, 37], "control": [13, 20, 33, 41, 50, 58, 69, 96, 108, 135, 141, 142, 146, 154, 156], "imag": [13, 38, 156, 157], "top": [13, 33, 34, 44, 154, 158], "export": [13, 18, 34], "csv": [13, 34, 38, 136, 141, 142, 143], "share": [13, 33, 41, 43, 46, 47, 50, 52, 53, 57, 58, 59, 61, 65, 66, 68, 71, 72, 79, 81, 83, 84, 86, 87, 91, 92, 93, 94, 96, 101, 108, 111, 112, 113, 114, 115, 117, 118, 119, 127, 128, 132, 134, 136, 137, 139, 141, 142, 144, 146, 151, 154], "focu": 13, "specif": [13, 15, 18, 22, 33, 34, 38, 50, 73, 75, 76, 104, 117, 122, 123, 146], "item": [13, 33, 41, 50], "when": [13, 15, 20, 33, 34, 38, 50, 54, 57, 60, 69, 71, 72, 76, 85, 87, 103, 104, 120, 121, 123, 128, 130, 133, 134, 137, 141, 142, 143, 154, 156, 157], "arrow": [13, 34, 38], "grei": 13, "box": [13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 106], "surround": [13, 38], "scheme": [13, 33, 57], "being": [13, 33, 38, 44, 83, 90, 104, 156], "resiz": [13, 104], "zoom": [13, 34, 38], "comma": [13, 38], "period": [13, 33, 34, 104, 105, 157], "kei": [13, 15, 38, 73, 156], "mous": [13, 34, 38], "scroll": 13, "wheel": 13, "vertic": 13, "line": [13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 156, 157, 158], "track": [13, 38, 45, 46, 47, 57, 122, 141, 142, 149, 156], "pad": 13, "caus": [13, 20, 38, 71, 154], "out": [13, 33, 38, 41, 43, 47, 48, 50, 52, 53, 54, 57, 61, 66, 68, 69, 71, 81, 82, 86, 92, 102, 105, 111, 115, 118, 119, 123, 126, 128, 133, 134, 135, 136, 137, 139, 144, 146, 154, 156, 157], "pan": [13, 34], "The": [13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 156, 157, 158], "left": [13, 33, 34, 38, 135, 156], "down": [13, 33, 34, 38, 71, 108, 156, 157], "entir": [13, 15, 33, 34, 38, 46, 48, 59, 71, 84, 87, 99, 105, 122, 123, 126, 130, 133, 156, 157], "press": [13, 33, 34], "fit": [13, 34, 38, 156], "field": [13, 15, 32, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 154, 155], "angl": [13, 38, 104], "bracket": 13, "while": [13, 33, 38, 69, 104, 128, 148, 156], "leav": [13, 38, 54, 156], "posit": [13, 34, 38, 56, 58, 133, 156, 157], "screen": [13, 34, 38], "less": [13, 15, 33, 38, 65, 66, 134, 156], "same": [13, 38, 41, 48, 50, 54, 58, 66, 69, 85, 103, 104, 128, 129, 130, 134, 137, 154, 156], "origin": [13, 38, 77, 104, 123, 154, 156], "capit": [13, 38], "revert": [13, 33], "usual": [13, 20, 38, 48, 50, 61, 69, 77, 85, 108, 137, 141, 142], "contigu": [13, 103], "molecular": [13, 38, 41, 59, 71, 87, 111, 127, 133, 156, 157], "speci": [13, 38, 90, 111, 153], "definit": [13, 38, 50, 104, 156], "veri": [13, 15, 33, 38, 133, 156, 157, 158], "close": [13, 20, 33, 38, 72, 73, 101, 118, 156, 158], "extracellular": 13, "membran": [13, 15, 20, 33, 38, 52, 79, 81, 86, 90, 92, 104, 113, 128, 129, 146, 148, 154], "cytosol": [13, 15], "nucleu": 13, "nest": 13, "cannot": [13, 38, 122], "put": [13, 32, 34, 52, 69, 104, 143, 156], "bigger": [13, 34, 38, 104], "smaller": [13, 38, 55, 100, 108, 134, 156, 158], "one": [13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 34, 37, 38, 41, 44, 47, 48, 50, 54, 55, 68, 77, 79, 86, 90, 96, 103, 104, 105, 108, 113, 115, 123, 131, 133, 134, 137, 138, 154, 156, 157, 158], "boundari": 13, "around": [13, 18, 34, 35, 38, 54, 56, 104, 134, 156, 157], "happen": [13, 38, 57, 66, 73, 99, 103, 128, 129, 133, 156], "content": [13, 32, 33, 36, 73, 96, 99, 134, 143, 156], "reposit": 13, "so": [13, 15, 33, 34, 38, 41, 46, 52, 54, 58, 65, 66, 68, 69, 71, 73, 77, 85, 87, 103, 104, 105, 108, 113, 114, 115, 118, 131, 133, 134, 137, 151, 156, 157], "contain": [13, 15, 22, 33, 38, 41, 79, 90, 92, 94, 144, 154, 156, 157], "size": [13, 34, 38, 48, 50, 54, 72, 92, 96, 104, 112, 143, 156, 157, 158], "volum": [13, 20, 38, 46, 48, 54, 57, 59, 60, 61, 96, 104, 111, 113, 130, 135, 157, 159], "surfac": [13, 54, 103, 130, 137], "area": [13, 38, 59, 96, 104, 113, 130], "length": [13, 20, 33, 38, 46, 52, 55, 57, 59, 72, 103, 104, 130, 156], "depend": [13, 15, 20, 33, 38, 39, 40, 61, 69, 71, 73, 77, 78, 86, 90, 96, 120, 121, 122, 154], "type": [13, 14, 15, 16, 18, 19, 21, 23, 25, 26, 32, 33, 37, 38, 42, 52, 64, 72, 73, 74, 75, 76, 77, 78, 97, 127, 133, 139, 154, 156, 157], "fix": [13, 38, 87, 133, 137, 138, 146, 156], "numdimens": [13, 48], "specifi": [13, 15, 20, 34, 38, 42, 43, 48, 50, 52, 54, 65, 66, 72, 75, 76, 77, 78, 79, 84, 86, 87, 96, 98, 101, 103, 104, 105, 110, 113, 114, 115, 118, 123, 126, 131, 133, 135, 143, 144, 154, 156, 157], "whether": [13, 15, 38, 115], "molecul": [13, 15, 47, 48, 53, 57, 59, 61, 71, 87, 110, 111, 119, 130, 133, 156, 157], "given": [13, 33, 38, 48, 50, 54, 59, 65, 66, 83, 84, 102, 103, 108, 123, 133, 139, 156], "color": [13, 38, 42], "rectangl": [13, 34], "n": [13, 33, 38, 44, 48, 71, 77, 78, 87, 111, 122, 136, 154, 156, 157], "number": [13, 33, 38, 41, 44, 48, 50, 54, 55, 58, 59, 60, 61, 63, 65, 66, 67, 69, 71, 75, 76, 77, 79, 83, 84, 87, 90, 92, 96, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 119, 120, 122, 123, 124, 126, 132, 133, 135, 136, 137, 138, 139, 143, 145, 148, 151, 154, 156, 157], "ninit": [13, 111, 156], "initi": [13, 15, 20, 33, 34, 38, 48, 52, 69, 71, 85, 86, 91, 92, 94, 111, 115, 116, 133, 139, 154, 156, 157], "reinit": [13, 33, 38, 41, 43, 46, 47, 50, 52, 57, 58, 59, 61, 65, 66, 68, 71, 72, 79, 81, 83, 85, 86, 87, 90, 91, 92, 93, 94, 96, 101, 108, 111, 112, 113, 114, 115, 117, 118, 119, 128, 132, 134, 136, 137, 139, 141, 142, 144, 146, 151, 152, 156, 157], "done": [13, 15, 33, 34, 38, 54, 66, 100, 104, 133, 137, 138, 156], "conc": [13, 33, 38, 46, 61, 75, 76, 77, 78, 102, 111, 156, 157], "unit_scale_factor": 13, "n_a": 13, "vol": [13, 46, 63, 96, 135, 156], "concinit": [13, 15, 38, 111, 156, 157], "hold": [13, 34, 38, 42, 52, 58, 65, 66, 68, 92, 93, 94, 108, 113, 114, 115, 143, 146, 151], "some": [13, 20, 32, 35, 38, 41, 42, 50, 65, 66, 90, 100, 103, 104, 115, 128, 129, 154, 156, 157], "therefor": [13, 35, 38], "throughout": [13, 18, 38, 156], "compar": [13, 20, 38, 143, 154, 156], "tment": 13, "convers": [13, 38, 100], "between": [13, 15, 38, 41, 46, 52, 57, 58, 59, 65, 66, 68, 71, 81, 82, 87, 90, 103, 105, 108, 134, 135, 137, 154, 156, 157], "revers": [13, 20, 38, 47, 52, 53, 77, 86, 100, 102, 119, 156], "rate": [13, 15, 18, 33, 38, 41, 48, 50, 53, 57, 61, 66, 75, 76, 77, 90, 91, 92, 94, 96, 104, 111, 118, 119, 128, 129, 132, 135, 148, 157], "zero": [13, 38, 41, 46, 50, 71, 77, 78, 104, 105, 132, 133, 134, 135, 137, 143, 156], "irrevers": 13, "illustr": [13, 15, 38, 156, 157, 159], "substrat": [13, 15, 38, 53, 61, 119, 135], "b": [13, 15, 20, 38, 46, 65, 66, 77, 78, 85, 86, 137, 156, 157], "product": [13, 38, 43, 53, 61, 119, 143, 156, 157], "indic": [13, 33, 34, 38, 66, 84, 96, 103, 113, 115, 126, 131, 133, 135, 157], "direct": [13, 33, 34, 38, 77], "green": [13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 156], "k": [13, 15, 20, 25, 38, 63, 69, 77, 78, 100], "f": [13, 15, 38, 40, 46, 66, 77, 104], "forward": [13, 38, 53, 57, 61, 77, 119], "unit": [13, 18, 20, 33, 38, 41, 48, 50, 53, 61, 85, 86, 100, 104, 111, 119], "normal": [13, 84, 105, 106, 123, 138, 156], "express": [13, 38, 48, 53, 65, 66, 104, 122, 154], "intern": [13, 33, 38, 41, 43, 46, 58, 65, 66, 77, 83, 91, 92, 100, 102, 113, 114, 117, 134, 141, 142, 151, 156, 157], "unless": [13, 71, 104, 128], "realli": [13, 15, 52, 100, 157], "know": [13, 15, 33, 38, 48, 157], "backward": [13, 20, 33, 38, 57, 77], "numsubstr": [13, 61, 119], "numproduct": [13, 119], "note": [13, 15, 33, 38, 42, 47, 50, 52, 66, 69, 72, 77, 86, 100, 103, 104, 105, 113, 114, 118, 131, 133, 137, 143, 154, 156, 157, 158], "second": [13, 33, 34, 38, 47, 50, 52, 57, 58, 65, 66, 68, 75, 86, 92, 93, 94, 103, 108, 113, 114, 115, 133, 136, 151, 156, 157], "massactionenz": 13, "red": [13, 158], "ellips": 13, "atop": 13, "small": [13, 33, 38, 100, 133, 146, 156, 157], "squar": [13, 38, 65, 66], "straight": [13, 38], "sit": [13, 33, 38, 104, 138], "continu": [13, 38, 128, 129, 132, 138, 154], "typic": [13, 15, 20, 38, 41, 42, 47, 50, 57, 96, 100, 103, 104, 108, 122, 130, 133, 137, 141, 142], "curv": [13, 77, 137, 156], "ani": [13, 15, 33, 34, 38, 41, 43, 46, 48, 52, 60, 65, 66, 71, 79, 87, 103, 104, 105, 113, 114, 115, 130, 135, 137, 139, 141, 142, 144, 154, 156, 157], "sinc": [13, 15, 38, 50, 53, 54, 101, 104, 113, 128, 131, 137, 156, 157], "might": [13, 33, 38, 42, 104, 156, 157, 158], "catalyz": [13, 38, 157], "m": [13, 15, 18, 20, 33, 38, 40, 77, 78, 100, 104, 141, 142, 156, 157], "cat": [13, 15], "equal": [13, 38, 65, 66, 92, 122, 134, 137, 156], "equival": [13, 20, 33, 38, 71, 77, 78, 85, 86, 87, 104, 137, 148], "ratio": [13, 53, 71, 100, 130], "identica": 13, "l": [13, 38, 104], "those": [13, 33, 38, 135], "_cplx": 13, "conci": 13, "nit": 13, "assum": [13, 38, 46, 53, 54, 69, 90, 96, 100, 103, 113, 122, 130, 135, 137], "obei": [13, 38, 46, 86, 156], "v_max": 13, "k_m": 13, "k_cat": 13, "etot": 13, "where": [13, 14, 15, 16, 19, 21, 23, 25, 26, 33, 34, 37, 38, 41, 48, 60, 65, 66, 72, 86, 103, 108, 113, 114, 122, 133, 135, 146, 148, 154, 156, 157], "max": [13, 38, 65, 66, 77, 133, 145], "maximum": [13, 38, 58, 83, 84, 86, 94, 103, 104, 108, 148], "total": [13, 33, 38, 46, 55, 58, 86, 100, 130, 132, 133, 135], "amount": [13, 38, 110, 146, 156, 157], "constant": [13, 20, 38, 39, 40, 53, 55, 61, 65, 66, 69, 85, 86, 90, 92, 103, 104, 108, 111, 119, 120, 138, 146, 157], "nomin": 13, "assumpt": [13, 90], "quasi": 13, "sequestr": 13, "mm_enz": 13, "add": [13, 33, 34, 38, 128, 129, 136, 137], "variabl": [13, 20, 33, 34, 38, 47, 59, 65, 66, 69, 71, 75, 76, 77, 78, 80, 85, 86, 87, 100, 108, 115, 120, 121, 133, 135, 141, 142, 153, 154, 156, 157], "input": [13, 27, 33, 41, 43, 46, 58, 65, 66, 80, 83, 86, 108, 111, 113, 114, 115, 122, 128, 129, 132, 141, 142, 146, 147, 154, 156, 157], "\u00ee": 13, "blue": [13, 14, 15, 16, 19, 21, 23, 25, 26, 37, 156], "ouput": 13, "buffpool": 13, "dialog": 13, "previous": 13, "newli": [13, 154], "new": [13, 33, 34, 38, 57, 77, 78, 104, 123, 133, 154, 156], "empti": [13, 38, 48, 54, 96, 103, 104, 131, 135, 154], "widget": 13, "current": [13, 18, 20, 33, 34, 35, 39, 41, 45, 46, 47, 50, 52, 57, 58, 59, 65, 66, 68, 69, 71, 72, 79, 86, 87, 90, 92, 93, 94, 96, 100, 101, 104, 105, 108, 112, 113, 114, 115, 133, 134, 135, 137, 143, 144, 146, 149, 151, 154], "fifth": [13, 156, 157], "explicit": [13, 38, 53, 57, 104, 156, 157], "work": [13, 33, 34, 38, 41, 48, 128, 133, 135, 137, 146, 154, 156, 157, 158], "except": [13, 38, 77, 154, 156, 157], "stiff": [13, 156, 157], "slow": [13, 33, 38, 47, 108, 156, 159], "increas": [13, 18, 20, 38, 40, 46, 66, 69, 156, 157], "each": [13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 33, 37, 38, 39, 40, 41, 43, 47, 48, 50, 52, 53, 54, 61, 68, 69, 71, 72, 77, 85, 87, 90, 92, 96, 103, 104, 105, 111, 112, 113, 115, 119, 122, 128, 131, 135, 137, 138, 146, 154, 156, 157], "badli": [13, 156, 157], "goe": [13, 38, 41, 47, 48, 58, 128, 137, 156, 157], "exponenti": [13, 38, 39, 41, 45, 46, 62, 63, 94, 104, 149, 156, 157], "euler": [13, 87, 156, 157], "solut": [13, 41, 133, 156, 157], "partial": [13, 156, 157], "menu": [13, 33], "buttton": 13, "toolbar": 13, "two": [13, 14, 15, 16, 19, 21, 23, 26, 27, 33, 34, 37, 38, 41, 43, 44, 63, 65, 68, 71, 78, 120, 137, 141, 142, 144, 154, 156], "thing": [13, 33, 38, 156, 157], "pop": [13, 34, 158], "lot": [13, 38, 52, 58, 65, 66, 68, 92, 93, 94, 108, 113, 114, 115, 130, 151, 156], "respect": [13, 15, 33, 38, 57, 66, 71, 87, 103, 113, 131, 156, 157], "rule": [13, 38, 50, 54, 69, 122, 133, 138, 139, 156], "firstli": 13, "allow": [13, 18, 20, 33, 34, 41, 103, 132, 154, 156, 157, 158], "drop": [13, 38], "parent": [13, 33, 38, 42, 71, 87, 103, 104, 105, 111, 113, 123, 131, 137], "mooseobject": 13, "littl": [13, 34, 38, 77], "corner": [13, 156, 158], "reactant": [13, 34, 135, 157], "rearrang": 13, "clean": 13, "repeat": 13, "again": [13, 33, 38, 41, 133, 134, 154, 156], "delet": [13, 34, 38, 123, 152], "rubberband": 13, "draggabl": 13, "per": [13, 38, 41, 48, 69, 103, 113, 131, 137], "stop": [13, 32, 33, 34, 38, 50, 113, 114, 123, 134, 152], "mid": 13, "stream": [13, 136, 141, 142], "without": [13, 18, 33, 38, 50, 60, 65, 123, 124, 130, 156, 157], "affectiong": 13, "reset": [13, 34, 48, 62, 85, 86, 90], "clear": [13, 43, 73, 126, 135, 143, 154], "side": [14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 44, 137, 156], "mention": [14, 15, 16, 19, 21, 23, 25, 26, 37, 38], "main": [14, 15, 16, 19, 21, 23, 25, 26, 34, 37, 38, 105, 152, 156, 157], "snippet": [14, 15, 16, 18, 19, 21, 23, 25, 26, 33, 37, 38], "filenam": [14, 15, 16, 19, 21, 23, 25, 26, 37, 38, 72, 73, 101, 143, 144, 154, 156, 157], "show": [14, 15, 16, 19, 21, 22, 23, 25, 26, 33, 37, 38, 133, 156, 157], "cubemeshsigneur": [14, 15, 16, 19, 21, 23, 25, 26, 37], "createsquid": [14, 15, 16, 19, 21, 23, 25, 26, 37], "bit": [14, 15, 16, 19, 21, 23, 25, 26, 37, 38, 50, 75, 76, 133, 157], "come": [14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 47, 52, 65, 71, 86, 87, 91, 100, 105, 108, 113, 114, 128, 129, 156, 157], "befor": [14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 41, 47, 52, 60, 66, 69, 77, 121, 133, 134, 135, 154, 157], "ad": [14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 39, 40, 41, 65, 66, 69, 77, 115, 120], "end": [14, 15, 16, 19, 21, 23, 25, 26, 33, 37, 38, 41, 52, 54, 55, 68, 103, 113, 131, 134, 137, 154, 156, 157], "disclaim": 15, "avoid": [15, 38, 103, 115, 146], "simplest": [15, 33], "error": [15, 38, 77, 87, 108, 146], "prone": [15, 133], "tediou": [15, 33], "portabl": 15, "like": [15, 33, 38, 41, 73, 74, 75, 76, 96, 97, 104, 122, 133, 137, 146, 154, 156, 157], "nevertheless": 15, "sever": [15, 33, 38], "sequenc": [15, 33, 65, 113, 114, 122, 154, 156], "step": [15, 20, 33, 34, 38, 50, 66, 72, 79, 92, 101, 108, 115, 146, 154, 156, 157], "cubemesh": [15, 38, 153, 156], "cylmesh": [15, 153, 156, 157], "neuromesh": [15, 59, 113, 131, 153], "pool": [15, 18, 20, 33, 34, 38, 41, 45, 46, 47, 50, 53, 59, 71, 79, 87, 96, 111, 119, 127, 135, 149, 153, 156, 157], "reac": [15, 33, 38, 50, 59, 71, 87, 96, 111, 135, 153, 156, 157], "enzym": [15, 33, 34, 38, 53, 60, 61, 156, 157], "enz": [15, 33, 50, 53, 96, 135, 153, 156], "must": [15, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 157], "beneath": 15, "serv": [15, 35], "micha": [15, 61], "menten": [15, 61], "mmenz": [15, 33, 50, 61, 135, 153, 157], "puls": [15, 17, 33, 113, 114, 154, 157], "gener": [15, 17, 18, 33, 34, 38, 44, 63, 65, 66, 67, 96, 106, 109, 113, 114, 117, 118, 126, 133, 145, 151, 154, 156, 157], "child": [15, 33, 41, 48, 104, 105, 137], "occupi": [15, 90], "somewher": [15, 38, 111], "correctli": [15, 33, 156], "assign": [15, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 156, 157], "subtyp": 15, "quit": [15, 34, 38, 41, 123, 152, 156], "elabor": [15, 38], "partit": [15, 38, 41], "voxel": [15, 38, 48, 54, 59, 71, 87, 96, 103, 113, 131, 135, 156], "tion": 15, "yme": 15, "primari": [15, 137], "That": [15, 137], "enough": [15, 33, 38, 77, 156], "regular": [15, 18, 33, 38, 42, 47, 52, 87, 105, 123], "wish": [15, 38, 53, 60, 85, 141, 142, 156], "briefli": [15, 38], "ksolv": [15, 33, 48, 50, 135, 153, 156, 157], "gsolv": [15, 33, 48, 50, 135, 153, 156], "stoich": [15, 59, 71, 87, 133, 153, 156, 157], "final": [15, 33, 34, 38, 69, 100, 154, 156, 157], "fill": [15, 104, 126, 141, 142, 144], "understand": [15, 20, 33, 158], "legaci": [15, 38, 46], "compact": 15, "studi": 15, "ramakrishnan": 15, "plo": 15, "comp": [15, 33], "biol": 15, "2008": 15, "access": [15, 32, 34, 38, 41, 50, 99, 105, 152, 154, 158], "ident": [15, 33, 38, 48, 77, 141, 142], "regardless": [15, 54, 100], "loader": [15, 38], "autom": 15, "abov": [15, 18, 20, 33, 34, 38, 41, 57, 69, 83, 90, 104, 128, 129, 156], "thu": [15, 20, 33, 38, 41, 47, 58, 72, 100, 104, 115, 154], "even": [15, 38, 47, 73, 100, 104, 134, 156], "been": [15, 33, 38, 104, 133, 154, 156], "frequent": [15, 33], "span": 15, "cellular": [15, 38], "bound": [15, 38, 56, 57, 58, 69, 79, 108, 120, 145], "phosphoryl": [15, 38, 41], "kinas": 15, "solubl": 15, "atp": 15, "cytsol": 15, "interpret": [15, 33, 34, 38, 103], "resid": [15, 38, 154], "switch": [15, 34, 38, 156, 157], "emb": [15, 38, 103], "context": [15, 33], "sens": [15, 38, 108, 146], "restrict": [15, 38, 154], "subpart": 15, "dsolv": [15, 48, 50, 87, 104, 135, 153, 156, 157], "stoichiometri": [15, 59, 71, 87, 133, 135, 156], "matrix": [15, 91, 92, 94, 122, 126, 133, 135], "spatial": [15, 38, 41, 48, 54, 103, 137, 156], "discret": [15, 38, 41], "taper": [15, 156], "cylind": [15, 38, 46, 55, 96, 103, 130, 137, 156, 157], "cubicl": 17, "integr": [17, 20, 27, 34, 39, 40, 50, 57, 62, 75, 76, 79, 82, 85, 87, 88, 103, 108, 116, 133, 139, 146, 156], "leaki": [17, 20, 27, 39, 40, 62, 88, 116], "voltag": [17, 20, 33, 39, 40, 74, 75, 76, 77, 78, 79, 82, 86, 90, 92, 94, 97, 102, 116, 128, 129, 146, 148, 158], "clamp": [17, 146, 158], "transmiss": 17, "gap": [17, 68], "junction": [17, 48, 59, 68, 135, 156], "insert": [17, 38, 69, 80, 104, 120, 140], "spine": [17, 59, 69, 103, 104, 113, 131, 135, 137, 153], "head": [17, 59, 103, 104, 130, 131], "proce": 18, "concurr": 18, "channel": [18, 20, 25, 33, 41, 45, 46, 47, 52, 57, 68, 69, 74, 75, 76, 77, 78, 79, 86, 89, 90, 91, 92, 94, 97, 100, 104, 122, 138, 139, 149, 154], "morphologi": [18, 20, 130], "plan": 18, "futur": [18, 20], "si": [18, 33, 38, 61, 85, 86, 104, 111], "cerebellar": 18, "granul": 18, "granulecel": 18, "net": [18, 38], "xml": [18, 20, 38], "varieti": 18, "maex": 18, "r": [18, 20, 33, 38, 40, 104, 156, 157], "de": 18, "schutter": 18, "1997": 18, "www": 18, "neuroconstruct": 18, "org": [18, 38, 66, 108], "soma": [18, 33, 52, 72, 103, 104, 111, 137], "children": [18, 33, 105, 123, 137, 154], "gbar": [18, 20, 38, 47, 90, 100, 104], "obtain": [18, 33, 38, 54, 85, 90], "bursti": 18, "behaviour": [18, 154], "tau": [18, 20, 38, 46, 77, 81, 86, 103, 104, 146], "pylor": 18, "rhythm": 18, "stomatogastr": 18, "ganglion": 18, "lobster": 18, "purkinj": 18, "purkinjecel": 18, "pure": [18, 38, 48], "passiv": [18, 33, 89, 104, 137], "extens": [18, 33, 38], "bower": 18, "j": [18, 40, 92, 157], "1994": 18, "obsolet": 18, "channelml": [18, 20, 38], "olfactori": 18, "bulb": 18, "subnetwork": 18, "olfactorybulb": 18, "numgloms2_seed100": 18, "0_decim": 18, "prune": 18, "decim": 18, "gilra": 18, "u": [18, 33, 38, 54, 57, 85, 86], "prepar": 18, "hope": 18, "post": [18, 69, 120, 121, 130], "soon": [18, 33, 38, 156], "allchannelscel": 18, "plai": [18, 35, 38, 156, 157, 158], "cells_channel": 18, "further": [18, 20, 34, 38, 90, 137], "fvsi_granule98": 18, "inject": [18, 20, 33, 38, 52, 86, 146], "consult": [18, 20, 33], "ampl": 18, "too": [18, 33, 38, 108], "broken": 20, "isopotenti": 20, "axial": [20, 38, 52, 104, 137], "resist": [20, 38, 52, 104, 137], "denot": [20, 154], "cytoplasm": [20, 104], "capacit": [20, 38, 52, 104, 146], "shunt": 20, "leak": [20, 57], "electrochem": 20, "gradient": [20, 38, 100], "due": [20, 46, 50, 57, 100, 139, 143, 156], "ion": [20, 33, 38, 41, 46, 47, 57, 74, 75, 76, 90, 97, 100, 102, 156, 157], "pump": [20, 38, 57], "across": [20, 38, 137], "drive": [20, 41], "hyperpolar": 20, "insid": [20, 33, 38, 102, 115], "outsid": [20, 46, 77, 102], "conduct": [20, 38, 41, 47, 52, 68, 77, 78, 86, 90, 100, 104, 138], "gate": [20, 33, 38, 74, 75, 76, 77, 78, 97, 100, 113, 114], "seri": [20, 29, 33, 34, 38, 52, 132], "batteri": [20, 33], "figur": [20, 33, 38, 133, 156, 157], "action": [20, 33, 53, 146, 158], "potenti": [20, 33, 47, 52, 69, 79, 81, 86, 100, 102, 104, 128, 129, 146, 154, 158], "sharp": 20, "rise": [20, 38, 39, 62, 69, 128, 138], "fall": [20, 38, 54, 104, 128, 129, 144], "excitatori": 20, "inhibitori": 20, "complic": [20, 38, 41], "dynam": [20, 33, 38, 58, 108, 156], "pymoos": [20, 32, 33, 34], "incorpor": [20, 38, 100, 138, 156], "demo": [20, 38, 158], "about": [20, 33, 34, 35, 38, 42, 52, 58, 65, 66, 68, 92, 93, 94, 103, 108, 113, 114, 115, 151, 152, 156, 159], "chapter": 20, "mostli": 20, "morphml": 20, "networkml": 20, "compatibitil": 20, "salient": [20, 34], "block": [20, 33, 38, 96, 100, 135, 157], "updat": [20, 33, 38, 41, 47, 48, 50, 52, 57, 58, 65, 66, 69, 71, 80, 83, 87, 91, 92, 94, 96, 100, 102, 113, 114, 117, 120, 121, 128, 129, 134, 141, 142, 151, 154], "everi": [20, 33, 38, 41, 50, 52, 69, 71, 85, 120, 126, 133, 134, 136, 154, 156], "rest": [20, 33, 38, 41, 52, 79, 85, 104], "pane": 20, "volt": [20, 38, 104], "farad": [20, 38, 104], "setup": [20, 25, 33, 38, 94, 156], "amper": 20, "extern": [20, 38, 71, 86, 100, 102, 113, 114, 154, 156], "initvm": [20, 33, 38, 52, 86, 104], "ohm": [20, 38, 86, 100, 104], "diamet": [20, 33, 38, 46, 52, 55, 57, 103, 104, 130, 156, 158], "metr": [20, 38, 104], "hhchannel": [20, 50, 153, 154], "hodgkin": [20, 25, 38, 47, 74, 75, 76, 97, 158], "huxlei": [20, 25, 38, 74, 75, 76, 77, 78, 97, 158], "peak": [20, 38, 86, 157], "siemen": [20, 38, 104], "xpower": [20, 75, 76], "y": [20, 33, 34, 38, 41, 42, 48, 52, 54, 55, 65, 66, 75, 76, 77, 78, 83, 84, 94, 104, 126, 137, 143, 157], "ypower": [20, 75, 76], "z": [20, 33, 38, 42, 48, 52, 54, 55, 65, 75, 76, 84, 104], "zpower": [20, 75, 76], "turn": [20, 38, 69, 156], "off": [20, 38, 50, 156], "dx": [20, 38, 54, 78, 84], "inf": 20, "\u03c4": 20, "sigmoid": 20, "linear": [20, 38, 41, 54, 77, 78, 103, 122, 156], "power": [20, 34, 65, 66, 75, 76, 77, 78, 156], "rais": [20, 65, 66, 154, 156], "formula": 20, "hhchannel2d": [20, 50, 153], "channel2d": 20, "ionic": 20, "sai": [20, 38, 41, 47, 69, 154, 157], "tab2dchannel": 20, "caconc": [20, 38, 50, 153, 154], "decai": [20, 38, 40, 41, 69, 120, 121, 138], "back": [20, 33, 38, 57, 78, 84, 135, 141, 142, 154, 156], "Its": [20, 38, 52], "etc": [20, 33, 69, 79, 154], "mm": [20, 38, 61, 97, 100, 156, 157, 158], "mol": [20, 71, 110, 111], "cabas": [20, 46], "ca_bas": 20, "thick": [20, 46, 57, 113], "19": [20, 50, 105, 156, 157], "recip": [22, 33], "task": [22, 33], "multi": [24, 27, 154], "diagram": [25, 137], "anoth": [25, 33, 38, 41, 58, 59, 68, 71, 87, 91, 128, 129, 133, 154, 156], "pulsegen": [25, 33, 50, 113, 146, 153, 154], "stimul": [25, 33, 38], "presynapt": 25, "experiment": [25, 33], "na": [25, 33, 38, 77, 78, 100], "random": [27, 44, 52, 59, 63, 65, 66, 67, 71, 106, 109, 117, 118, 126, 133, 154, 156], "handler": [27, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "recurr": 27, "anim": [29, 34], "axi": [29, 34, 38, 78, 84, 94, 104, 137], "element": [32, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 156, 157], "schedul": [32, 41, 46, 47, 50, 52, 57, 58, 65, 66, 68, 86, 105, 108, 113, 114, 115, 118, 128, 141, 142, 146, 151, 154, 156, 157], "clock": [32, 33, 41, 43, 52, 65, 66, 68, 71, 79, 87, 105, 123, 139, 141, 142, 153, 154, 156, 157], "vector": [32, 33, 38, 48, 50, 52, 54, 55, 59, 64, 65, 71, 73, 77, 78, 84, 87, 90, 91, 92, 94, 96, 98, 103, 104, 105, 113, 122, 123, 131, 135, 143, 148, 156, 157], "interpol": [32, 50, 77, 78, 84, 148, 153], "symcompart": [32, 38, 50, 153], "thread": [32, 52, 58, 65, 66, 68, 92, 93, 94, 104, 108, 113, 114, 115, 151, 154], "mathemat": [32, 38, 65, 66, 104, 122, 137, 156, 158], "arbitrari": [32, 38, 41, 54, 65], "harmon": 32, "oscillatori": [32, 38, 157], "lotka": 32, "voltera": 32, "modul": [33, 38, 47, 152, 154], "aim": 33, "give": [33, 38, 41, 56, 103, 133, 137, 154, 156, 157], "overview": 33, "extract": 33, "farther": 33, "inform": [33, 34, 38, 49, 52, 57, 58, 65, 66, 68, 90, 91, 92, 93, 94, 104, 108, 113, 114, 115, 151, 154, 156], "knowledg": [33, 77, 78], "program": [33, 156, 157], "locat": [33, 38, 41, 54, 72], "separ": [33, 38, 52, 65, 103, 111, 135, 137, 143, 144], "enter": [33, 34, 38, 156, 157], "act": [33, 38, 105, 141, 142, 146], "stone": 33, "intend": 33, "identifi": [33, 38, 111, 123, 156], "oppos": [33, 156], "this_is_a_python_command": 33, "encourag": 33, "try": [33, 38, 50, 108, 133, 135, 156], "yourself": 33, "wherein": 33, "individu": [33, 38, 122, 133, 138], "practic": 33, "onc": [33, 34, 38, 54, 55, 104, 134, 154, 156, 157, 158], "gone": [33, 38], "lost": [33, 133], "text": [33, 42, 105, 156, 157], "easiest": [33, 38], "gedit": 33, "simpli": [33, 38, 133, 156, 157], "sure": [33, 34, 38], "indent": 33, "touch": 33, "written": [33, 141, 142, 154, 156, 157], "apart": 33, "quickstart": 33, "dialogu": 33, "later": [33, 38, 104, 158], "q": [33, 38, 92, 94], "exit": [33, 73, 156, 157], "pager": 33, "independ": [33, 66, 69, 133, 141, 142], "doc": [33, 49, 64, 152], "whatev": 33, "author": [33, 38, 156], "maintain": [33, 122, 156], "wrote": 33, "kind": [33, 38, 41, 52, 154, 156], "session": 33, "own": [33, 38, 41, 50, 69, 113, 131, 154], "dot": [33, 38, 143], "quot": [33, 38], "otherwis": [33, 38, 48, 104, 135, 154], "receiv": [33, 41, 46, 47, 52, 57, 58, 65, 66, 68, 69, 72, 84, 86, 92, 93, 94, 101, 105, 108, 112, 113, 114, 115, 118, 128, 139, 141, 142, 146, 151, 156], "confus": 33, "brows": 33, "especi": [33, 38, 41], "go": [33, 38, 41, 47, 52, 54, 86, 96, 98, 105, 123, 128, 129, 134, 135, 154, 156], "index": [33, 38, 43, 54, 59, 66, 71, 75, 83, 84, 87, 103, 105, 112, 113, 114, 125, 131, 135, 143, 148], "entiti": [33, 34, 38, 41, 96, 154, 156, 157], "interchang": 33, "conceptu": [33, 137], "laid": 33, "hierarch": 33, "structur": [33, 38, 41, 72, 103, 104, 113, 131], "familiar": [33, 38], "common": [33, 38, 47, 57, 65, 69, 137], "root": [33, 65, 66, 130, 133], "le": [33, 157], "msg": [33, 52, 58, 65, 66, 68, 105, 108, 113, 114, 115, 123, 151, 153], "postmast": [33, 50, 153], "predefin": [33, 38, 65, 66, 77, 78], "And": 33, "singlemsg": [33, 153], "onetoonemsg": [33, 153], "onetoallmsg": [33, 153], "diagonalmsg": [33, 153], "sparsemsg": [33, 153], "let": [33, 38, 104, 156], "invok": [33, 133], "constructor": [33, 38], "neutral": [33, 38, 152, 153, 154, 156, 157], "someth": [33, 38, 74, 75, 76, 97], "uniqu": 33, "concaten": 33, "reach": [33, 38, 62, 86, 134], "print": [33, 38, 115, 156, 157], "carri": [33, 38, 46, 100, 156], "record": [33, 38, 72, 122, 154], "organ": [33, 52], "vmtab": 33, "soma_vm": 33, "essenti": [33, 69], "protocol": [33, 38], "ones": [33, 38, 104, 135, 156, 157], "member": 33, "getfieldnam": [33, 64, 152], "valuefinfo": [33, 154], "short": [33, 38, 122, 133, 156, 157], "me": [33, 105], "linears": 33, "objectdimens": 33, "lastdimens": 33, "localnumfield": 33, "pathindic": 33, "msgout": [33, 105], "msgin": [33, 105], "vm": [33, 38, 39, 40, 47, 52, 62, 68, 72, 76, 81, 85, 86, 90, 92, 94, 116, 128, 129, 137, 146, 154], "cm": [33, 38, 39, 40, 52, 62, 66, 85, 104, 116, 137, 146], "em": [33, 38, 39, 40, 52, 62, 85, 86, 104, 116, 137], "im": [33, 38, 52, 86], "ra": [33, 38, 52, 104, 137, 157], "x0": [33, 38, 52, 54, 55, 66, 156, 157], "y0": [33, 38, 52, 54, 55, 66], "z0": [33, 38, 52, 54, 55], "physic": [33, 38], "interest": [33, 38, 156, 157], "parallel": [33, 154], "rc": [33, 50, 146, 153], "attach": [33, 57], "resistor": 33, "capacitor": 33, "shown": [33, 38, 156, 157, 158], "popul": [33, 38], "06": [33, 38], "realist": 33, "1e": [33, 38, 41, 50, 103, 104, 156, 157], "9": [33, 38, 50, 77, 87, 154, 156], "1e7": 33, "07": 33, "instead": [33, 38, 54, 57, 73, 117, 137, 141, 142, 156], "statement": [33, 41, 115], "util": [33, 38, 50, 65, 111, 133, 154], "showfield": [33, 38, 157], "took": 33, "effect": [33, 38, 69, 122, 156, 157], "10000000": 33, "numdata": [33, 38, 105, 123, 156], "numfield": [33, 38, 105], "5e": [33, 38, 156, 157], "05": [33, 38, 156], "tick": [33, 38, 41, 43, 50, 52, 57, 68, 71, 105, 123, 141, 142, 154], "09": [33, 38], "classnam": [33, 38, 50, 105, 154], "deliv": [33, 38, 52, 156], "delai": [33, 38, 69, 113, 114, 138, 140, 157], "50e": [33, 38, 50], "width": [33, 113, 114, 122, 137], "100e": [33, 38], "1e9": [33, 86, 146], "tell": [33, 38, 48, 61, 96, 103], "100": [33, 38, 41, 73, 104, 156, 157], "long": [33, 38, 50, 73, 104, 113, 114, 122, 126, 136], "50": [33, 38, 41, 113, 156], "amplitud": [33, 38, 113, 114], "larger": [33, 38, 100, 108, 134, 156], "than": [33, 38, 65, 66, 75, 76, 86, 100, 103, 104, 122, 128, 129, 134, 156], "had": [33, 38, 71], "train": [33, 113, 114, 118, 128, 129], "interv": [33, 38, 41, 122, 154], "dure": [33, 38, 57, 90, 105, 154], "special": [33, 34, 38, 50, 54, 86, 133, 137], "destin": [33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 154, 155], "srcfinfo": [33, 64, 98, 105, 154], "destfinfo": [33, 64, 98, 154], "queri": [33, 41], "childmsg": [33, 152, 154], "advantag": [33, 156, 157], "doubl": [33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 100, 102, 103, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154], "But": [33, 156], "send": [33, 41, 43, 47, 48, 52, 53, 57, 61, 66, 68, 71, 72, 81, 82, 84, 86, 87, 91, 92, 94, 102, 108, 111, 112, 115, 118, 119, 122, 128, 132, 134, 137, 139, 141, 142, 144, 146], "introspect": 33, "parentmsg": [33, 105], "setthi": [33, 99, 105], "getthi": [33, 99, 105], "setz": [33, 42, 52, 65, 75, 76], "getz": [33, 42, 52, 65, 75, 76, 84], "injectmsg": [33, 52, 86, 146], "randinject": [33, 52], "cabl": [33, 52], "initproc": [33, 52, 71, 87], "initreinit": [33, 52, 71, 87], "handlechannel": [33, 52, 86], "handleraxi": [33, 52], "handleaxi": [33, 52], "anyth": [33, 38, 52, 66], "shall": 33, "among": 33, "seem": [33, 156], "candid": 33, "source_field": [33, 38], "dest": [33, 38, 64, 123, 125, 146, 154], "dest_field": [33, 38, 154], "return": [33, 34, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 154, 156], "id": [33, 59, 71, 79, 87, 98, 103, 105, 113, 123, 131, 133, 135, 154], "5": [33, 38, 41, 50, 65, 66, 77, 86, 87, 96, 103, 113, 133, 146, 154, 156, 157, 158], "dataid": [33, 56, 105, 107], "733": 33, "string": [33, 38, 42, 43, 49, 50, 59, 64, 65, 66, 73, 75, 79, 87, 90, 91, 98, 99, 103, 104, 105, 115, 122, 123, 133, 135, 136, 141, 142, 144, 154], "e1": [33, 98, 157], "e2": [33, 98, 157], "srcfieldsone1": [33, 98], "destfieldsone2": [33, 98], "confirm": [33, 38], "particular": [33, 152], "neighbor": [33, 96, 105], "729": 33, "notic": [33, 156, 157], "discuss": [33, 38], "lookupfinfo": [33, 154], "behav": 33, "dictionari": [33, 154], "retriev": [33, 84, 154], "requestout": [33, 41, 66, 72, 132, 141, 142, 156], "getvm": [33, 52, 81, 86, 90, 92], "dataindex": [33, 123], "finish": [33, 50], "wonder": 33, "relationship": [33, 154], "natur": [33, 157], "think": [33, 38, 104], "sent": [33, 66, 78, 103, 115, 141, 142], "repli": 33, "card": 33, "mode": [33, 34, 38, 65, 66, 73, 103, 113, 114, 115, 128, 141, 142, 146, 157], "skip": 33, "With": [33, 34, 38], "01": [33, 38, 50, 104, 156], "wherea": [33, 100], "address": 33, "hand": [33, 66, 156], "correspond": [33, 38, 52, 69, 122, 134, 154], "guarante": [33, 50, 54, 156], "correct": [33, 38, 79, 94, 100, 137], "alwai": [33, 38, 50, 53, 71, 92, 103, 113, 131], "miss": [33, 38, 135], "outcom": [33, 38, 156, 157], "central": 33, "care": [33, 130], "progress": [33, 50], "By": [33, 38, 50, 63, 136, 154], "microsecond": 33, "ligand": [33, 90, 92, 94, 100, 148], "nernst": [33, 50, 153], "stimulu": [33, 113, 114, 154, 156], "hsolv": [33, 50, 153], "elec": [33, 38], "10": [33, 38, 41, 50, 65, 66, 104, 154, 156, 157], "17": [33, 50, 156], "func": [33, 38, 50, 104, 153], "stat": [33, 50, 128, 129, 153], "table2": [33, 50, 141, 153, 156], "chem": [33, 38, 103, 104], "18": [33, 50, 141, 142, 156, 157], "hdf5datawrit": [33, 50, 153], "30": [33, 38, 50, 86, 156], "31": [33, 38, 50, 156], "32": [33, 38, 50], "20": [33, 38, 50, 104, 156, 157], "29": [33, 50, 156], "unassign": [33, 50], "purpos": [33, 38, 65, 66, 113, 114, 151, 154], "three": [33, 38, 65, 66, 69, 103, 104, 122, 156, 157], "alter": [33, 38, 54, 157], "associ": [33, 73, 90, 94, 113, 131], "setclock": [33, 50, 123, 152, 156, 157], "newdt": 33, "wildcard": [33, 38, 104, 135, 154, 156], "reassign": [33, 53], "useclock": [33, 123, 152, 156, 157], "newtick": 33, "13": [33, 38, 50, 77, 104, 156], "adopt": 33, "readonli": 33, "alon": 33, "remov": [33, 34, 38, 41, 136, 156], "025e": 33, "25e": [33, 38], "25": [33, 38, 50, 104, 156], "\u00ee\u00bc": 33, "250": [33, 38, 104], "faster": [33, 38, 108, 156], "finer": [33, 38], "timescal": [33, 41], "accuraci": [33, 38, 91, 133], "slower": [33, 38, 63], "sampl": [33, 38, 41, 63, 106, 117, 128, 129, 132, 141, 142, 156], "affect": [33, 38, 41, 122, 158], "re": [33, 34, 38, 69, 154], "unsur": 33, "vacant": 33, "whole": [33, 38, 156], "suppos": [33, 41], "init": [33, 50, 52, 68, 71, 87, 91, 92, 94, 115, 154, 156], "interleav": 33, "execut": [33, 35, 50, 105, 115, 154, 156, 157, 159], "wild": 33, "match": [33, 54, 69, 103, 104, 105, 111, 113, 122, 131, 154, 156], "preced": 33, "rememb": [33, 38], "verifi": 33, "300": [33, 38], "300e": [33, 38], "referenc": 33, "pylab": [33, 38, 156, 157], "linspac": 33, "len": [33, 38, 104, 156, 157], "submodul": 33, "third": [33, 38, 65, 135], "fourth": [33, 38], "visibl": [33, 41, 157, 158], "expect": [33, 38, 52, 86, 137], "id_": 33, "comp_arrai": 33, "dtype": 33, "loop": [33, 38, 105, 113, 114, 134, 156], "getid": 33, "appropri": [33, 38, 41, 57, 104, 146, 154], "scenario": 33, "convert": [33, 38, 41, 46, 105, 128, 129, 154], "cast": [33, 77], "jargon": 33, "proper": 33, "extend": [33, 38], "attribut": [33, 73], "invis": [33, 41], "readabl": 33, "xyz": [33, 54, 65, 103], "getxyz": 33, "writabl": 33, "setxyz": 33, "lookup": [33, 43, 48, 50, 59, 65, 66, 71, 73, 75, 76, 77, 78, 79, 83, 84, 87, 92, 94, 98, 103, 104, 105, 113, 114, 133, 134, 135, 143, 144, 148, 154], "iter": [33, 133, 156], "hhgate": [33, 153], "setupalpha": [33, 77], "sharedfinfo": [33, 64], "composit": 33, "usag": [33, 38, 146], "beyond": [33, 54, 58], "compat": [33, 59, 77], "reimplement": 33, "slight": [33, 38, 157], "camelcas": 33, "still": [33, 38, 156], "port": 33, "satisfi": [33, 154], "agnost": 33, "consist": [33, 34, 85, 133, 156], "appar": 33, "convolut": [33, 122], "perform": [33, 38, 41, 43, 57, 79, 148], "why": [33, 48, 156], "hint": [33, 38], "driven": 33, "principl": 33, "expos": [33, 46], "nonstandard": 33, "avir": 34, "goel": 34, "featur": [34, 104, 156], "kinetickit": 34, "biomodel": [34, 38], "dock": 34, "subwindow": 34, "bug": 34, "04": [34, 86], "strip": 34, "sub": [34, 38, 53, 61, 119, 156, 157], "paper_2015_demo": 34, "recent": [34, 38, 122], "atleast": 34, "databas": [34, 38], "bring": [34, 54, 146], "fledg": 34, "languag": 34, "overwrit": 34, "tile": 34, "tabifi": 34, "tracker": 34, "workspac": 34, "interconnect": 34, "screenshot": 34, "suggest": [34, 38, 157], "As": [34, 38, 41, 50, 54, 137, 156, 159], "graph": [34, 38, 156, 157], "subsequ": [34, 104], "evolut": [34, 38, 39, 40, 41, 62, 69, 85], "panel": 34, "determin": [34, 41, 58, 79, 103, 113, 114, 120, 121, 157], "durat": [34, 38, 50, 113, 114, 122, 134, 154], "restor": [34, 38, 135], "halt": [34, 38, 50], "ongo": 34, "row": [34, 90, 126, 135, 143], "hover": 34, "tip": [34, 156], "toggl": 34, "grid": [34, 84], "undo": 34, "becom": [34, 38, 137, 156, 157], "shrunk": 34, "mess": 34, "enabl": [34, 41, 141, 142, 154], "legend": [34, 156, 157], "fulli": [35, 126], "great": 35, "upi": 38, "date": 38, "aug": 38, "26": [38, 50, 156], "last": [38, 43, 48, 50, 53, 82, 83, 101, 103, 128, 134, 135, 154, 156], "08": 38, "2018": 38, "capabl": [38, 41], "pathwai": [38, 141, 142], "coupl": [38, 41, 47, 48, 68, 92, 94, 103], "assembl": 38, "deleg": 38, "adaptor": [38, 50, 130, 135, 153], "fold": 38, "stimuli": 38, "dump": [38, 50, 72, 143, 156], "role": [38, 158], "compactli": 38, "quickli": [38, 156], "minim": [38, 63, 128, 129, 148], "ex1_minimalmodel": 38, "rd": 38, "rde": 38, "buildmodel": 38, "made": [38, 65, 154, 156, 157], "produc": [38, 156, 157], "0005": 38, "fieldindex": [38, 105, 126], "7639437": 38, "26841": 38, "424413": 38, "177334": 38, "065": [38, 104], "0544": 38, "85398163398e": 38, "zombiecompart": [38, 153], "idvalu": [38, 105], "465": 38, "3194689277e": 38, "ex2": 38, "0_currentpuls": 38, "charg": [38, 81, 97], "discharg": 38, "2e": [38, 156], "five": [38, 66], "region_in_cel": 38, "region_express": 38, "moose_object": 38, "expression_str": 38, "decid": [38, 79, 128, 129], "appli": [38, 41, 52, 100, 104, 123, 156], "upon": [38, 128, 129], "mean": [38, 50, 53, 54, 57, 63, 65, 66, 77, 78, 79, 104, 105, 106, 109, 117, 118, 132], "modifi": [38, 86, 115], "evalu": [38, 65, 66, 104], "summaris": 38, "20na": 38, "title_of_plot": 38, "titl": 38, "depolar": 38, "settl": [38, 46, 133, 156], "65": [38, 154], "mv": [38, 86, 108], "54": 38, "1_vclamp": 38, "introduc": [38, 156], "vclamp": [38, 50, 153], "02": [38, 100, 156, 157], "jump": [38, 85], "transient": [38, 108, 156], "ex3": 38, "0_squid_currentpuls": 38, "prototyp": [38, 104, 137], "make_hh_na": 38, "make_hh_k": 38, "1200": 38, "360": 38, "subset": [38, 41, 50, 143], "four": 38, "object_nam": 38, "almost": [38, 119], "trivial": [38, 113, 131], "maxim": [38, 47, 104], "densiti": [38, 63, 130], "somat": [38, 52, 103], "rebound": [38, 156], "ramp": 38, "frequenc": [38, 157], "chirp": 38, "tune": [38, 108], "1_squid_vclamp": 38, "monitor": 38, "classic": [38, 157], "respons": [38, 108, 122, 159], "downward": 38, "brief": [38, 156], "deflect": 38, "upward": 38, "sustain": [38, 122], "rectifi": 38, "explor": 38, "ve": [38, 110, 157], "captur": [38, 80], "cycl": [38, 50, 52, 134, 156], "plot1": 38, "2_squid_axon_propgn": 38, "subdivid": [38, 55, 103, 104], "segment": [38, 96, 103, 104], "watch": 38, "propag": [38, 104, 140, 156], "boilerpl": 38, "np": [38, 156], "numaxonseg": 38, "200": [38, 104, 156], "comptlen": 38, "10e": [38, 104], "comptdia": 38, "def": [38, 156, 157], "makeaxonproto": 38, "prev": 38, "buildcompt": 38, "dia": [38, 52, 103, 104], "theta": [38, 66, 67, 104], "co": [38, 65, 66, 102], "dy": [38, 54, 84], "sin": [38, 65, 66], "sqrt": [38, 65, 66, 85], "compt": [38, 52, 71, 87, 103, 113, 135, 156, 157], "str": [38, 154], "raxial": [38, 52], "displaymoogli": 38, "00005": 38, "3_ap_collis": 38, "previou": [38, 66, 86, 108, 120, 121, 130, 156], "axon100": 38, "3e": [38, 156], "ap": 38, "bidirection": 38, "100th": 38, "observ": [38, 154], "bump": 38, "collid": 38, "4_myelinated_axon": 38, "curiou": 38, "chimera": 38, "node": [38, 96, 112, 137, 154, 156], "ranvier": 38, "condit": [38, 133, 154, 156], "405": 38, "nodespac": 38, "2x": 38, "10x": 38, "001": [38, 156], "1x": 38, "nodedia": 38, "noderm": 38, "nodecm": 38, "els": [38, 63, 65, 66, 69, 77, 156], "12000": 38, "3600": 38, "axon200": 38, "axon300": 38, "axon400": 38, "wildcardfind": [38, 152, 156, 157], "keep": [38, 41, 45, 46, 47, 48, 57, 103, 113, 114, 120, 121, 122, 149, 156], "ey": 38, "saltatori": 38, "fail": [38, 133, 143, 156], "reliabl": 38, "unmyelin": 38, "ex4": 38, "0_scaledsoma": 38, "convinc": 38, "offer": 38, "somewhat": [38, 156], "syntax": [38, 65, 66], "somaproto": 38, "20e": [38, 156], "200e": 38, "crucial": 38, "cylindr": [38, 46, 96, 103, 137, 157], "elong": 38, "wide": [38, 122], "1_ballandstick": 38, "exhibit": 38, "receptor": 38, "accomplish": 38, "variant": [38, 103, 139, 141, 142], "ballandstick": 38, "somadia": 38, "somalength": 38, "denddia": 38, "dendlength": 38, "numdendseg": 38, "4e": 38, "500e": 38, "dend": [38, 59, 103, 104], "400": [38, 104, 156, 157], "120": 38, "arg": [38, 52, 65, 66, 86, 123, 135, 154], "divid": [38, 66, 103, 108, 137], "integ": [38, 50, 65, 66, 71, 73, 77, 113, 114], "greater": [38, 65, 66], "blocki": 38, "rather": [38, 75, 76, 86, 156], "round": [38, 50, 65, 66, 71], "accur": 38, "2_ballandstickspe": 38, "opportun": 38, "ll": 38, "sine": [38, 65, 66], "wave": 38, "94": 38, "runtim": [38, 42, 50, 86, 135, 156, 157], "t0": 38, "real": [38, 65, 66, 83, 84, 151, 154], "shape": [38, 96], "peculiar": 38, "Not": [38, 60, 96], "surpris": 38, "laptop": 38, "costlier": 38, "1000": 38, "ex5": 38, "0_random_syn_input": 38, "make_glu": 38, "glu": 38, "randsyn": 38, "hz": 38, "poisson": [38, 109], "novelti": 38, "glutam": 38, "sq": [38, 104], "arg0": 38, "arg1": [38, 43], "uniform": 38, "weight": [38, 69, 120, 121, 122, 127, 138, 140], "arg2": [38, 43], "arg3": [38, 43], "arg4": 38, "henc": [38, 100], "versatil": 38, "1_periodic_syn_input": 38, "perfectli": 38, "periodicsyn": 38, "ex6_chem_osc": 38, "degrad": [38, 157], "irreversibli": [38, 157], "true": [38, 54, 69, 71, 73, 75, 76, 77, 86, 91, 103, 105, 115, 118, 123, 128, 133, 138, 141, 142, 154], "micron": [38, 103, 104, 156, 157], "makechemoscil": 38, "osc": [38, 133], "flag": [38, 54, 71, 75, 76, 77, 79, 103, 115, 123, 134, 138], "delink": 38, "remind": 38, "Then": [38, 41, 71, 87, 156], "5x": 38, "slowli": [38, 118, 156], "ex7": 38, "0_spatial_chem_osc": 38, "shorter": [38, 104, 122], "bv": 38, "vec": [38, 103, 153, 154, 156, 157], "rotat": [38, 104], "azim": 38, "pi": [38, 65, 66], "elev": [38, 104], "500": [38, 104, 156], "picturesqu": 38, "region": [38, 57], "signifi": 38, "dsiplai": 38, "low": [38, 52, 60, 77, 156], "high": [38, 77, 104, 113, 114, 156, 157], "break": [38, 156], "symmetri": [38, 156], "didn": 38, "bore": 38, "elsewher": [38, 71, 87, 104], "concenctr": 38, "frametim": 38, "azimuth": 38, "frame": 38, "radian": [38, 104], "inward": 38, "who": 38, "simpler": 38, "diff": [38, 59, 71, 87], "compil": 38, "better": 38, "fallback": 38, "mplot3d": 38, "convei": 38, "isn": [38, 103, 111, 156], "nice": [38, 157], "smooth": [38, 146, 156], "roll": 38, "pitch": 38, "yaw": 38, "letter": 38, "upper": [38, 46, 69, 79, 120, 145], "easier": 38, "w": [38, 39], "trackpad": 38, "suitabl": [38, 141, 142], "flick": 38, "1_diffusive_gradi": 38, "spend": 38, "profil": 38, "pyplot": [38, 156, 157], "plt": [38, 156, 157], "diffn": 38, "diffconst": [38, 111, 156, 157], "fals": [38, 54, 71, 154], "av": 38, "plist": 38, "append": [38, 73, 156], "fig": [38, 156, 157], "figsiz": [38, 156, 157], "xlabel": [38, 156, 157], "ylabel": [38, 156, 157], "overlaid": 38, "spread": 38, "2_cicr": 38, "involv": [38, 100, 157], "store": [38, 42, 43, 50, 54, 57, 92, 111, 115, 141, 142, 147], "endo": [38, 157], "endoplasm": 38, "reticulum": 38, "concchan": 38, "pore": 38, "permeabl": [38, 100], "ip3": 38, "lead": [38, 108, 156], "er": 38, "feedback": [38, 108, 159], "005": [38, 156], "cicrwithconcchan": 38, "cacyt": 38, "dend_endo": 38, "caer": 38, "actip3r": 38, "ip3r": 38, "004": [38, 156], "40": 38, "holder": 38, "evolv": 38, "movi": 38, "3_simple_transport": 38, "drift": 38, "fraction": [38, 46, 100, 113, 114, 133], "flux": [38, 57], "motorconst": [38, 111], "transp": 38, "sec": [38, 53, 61, 63, 103, 156, 157], "80": 38, "nowher": 38, "pile": 38, "motor": [38, 111], "sign": [38, 65, 66, 104], "detemin": 38, "opposit": 38, "consid": [38, 41, 69, 103, 122, 128, 129], "buildup": [38, 45, 46, 149], "achiev": [38, 154], "falloff": 38, "longer": [38, 122, 128], "possibl": [38, 41], "4_travelling_osc": 38, "zone": 38, "amplif": [38, 157], "waveform": [38, 128, 134], "198": 38, "undergo": [38, 157], "5_bidirectional_transport": 38, "middl": [38, 79, 103, 156], "converg": [38, 133, 139, 156], "collaps": 38, "awai": [38, 41, 111, 137], "numwavefram": 38, "1800": 38, "600": 38, "toward": [38, 111, 137, 156], "past": 38, "deplet": [38, 45, 46, 149], "6_func_controls_reac_r": 38, "processs": 38, "curvatur": [38, 103], "accumul": [38, 141, 142], "obscur": [38, 156], "underli": [38, 65, 66, 73, 113, 114, 154], "cleanli": 38, "buffer": [38, 57, 59, 71, 72, 73, 87, 101, 112, 135, 140, 141, 142], "makefuncr": 38, "15": [38, 50, 156], "num": [38, 132, 156, 157], "expr": [38, 65, 66, 104], "1e8": 38, "nout": [38, 111, 157], "valueout": [38, 65, 66], "setnumkf": [38, 119], "prd": [38, 61, 119, 156, 157], "waveplot": 38, "remain": [38, 54, 69, 72, 79, 128, 154], "decreas": [38, 46, 69, 108], "smallest": [38, 50, 135], "highest": [38, 50], "ex8": 38, "0_multiscale_ka_phosph": 38, "toi": 38, "simplifi": 38, "compris": [38, 104, 156], "ka": 38, "002": 38, "12e": 38, "chanphosphbycamkii": 38, "make_na": 38, "make_k_dr": 38, "k_dr": 38, "make_k_a": 38, "k_a": 38, "make_ca": 38, "make_ca_conc": 38, "ca_conc": 38, "03": [38, 156], "0333": 38, "chan": 38, "70": 38, "00008": [38, 156], "21": [38, 50, 156, 157], "0e": 38, "inj": 38, "ik": [38, 47], "unphosph": 38, "fundament": 38, "sourcefield": [38, 105], "destfield": [38, 105, 154], "offset": [38, 41, 77, 100, 143], "quantiti": 38, "basal": [38, 46, 113, 114], "millimolar": [38, 41, 53, 61, 100, 156, 157], "baselin": [38, 41], "advis": [38, 69], "directli": [38, 41, 50, 53, 73, 75, 76, 104, 117], "absolut": [38, 65, 66, 87, 118, 128], "multipli": [38, 58], "nanomolar": 38, "prefix": [38, 156], "wherev": 38, "coexist": 38, "subtleti": 38, "thumb": [38, 50, 133], "averag": [38, 41, 55, 118], "whichev": 38, "mx": 38, "handi": 38, "enclos": 38, "behavior": 38, "neat": [38, 158], "silent": 38, "briskli": 38, "downstream": [38, 157], "unphosphoryl": [38, 41], "reduc": [38, 104, 154], "persist": 38, "excit": 38, "vice": [38, 55, 156, 157], "versa": [38, 55, 156, 157], "1_syntrigcicr": 38, "arriv": [38, 69, 71, 81, 82, 87, 115, 120, 128, 129, 138, 140, 156], "nmda": [38, 69], "limit": [38, 46, 72, 104], "40e": 38, "makeactivespin": 38, "cicrspinedend": 38, "head0": [38, 104], "31e": 38, "0006": 38, "memb": 38, "potl": 38, "seed": [38, 65, 66, 79, 126, 152, 156], "1234": [38, 156], "geometr": [38, 104], "distanc": [38, 103, 104], "um": [38, 103], "embed": [38, 59, 87], "heurist": 38, "sort": 38, "omit": [38, 154], "endo_compart": 38, "six": 38, "doesn": [38, 52, 128, 129, 156], "mark": [38, 158], "subtl": 38, "actual": [38, 50, 104, 105, 108, 111, 138], "deviat": [38, 69, 132], "2_multiscale_glurr_phosph_3compt": 38, "computation": 38, "formal": [38, 85], "stai": [38, 47, 157], "strong": [38, 159], "endlength": 38, "chanphosph3compt": 38, "chan_p": 38, "syn": 38, "baslin": 38, "40hz": 38, "burst": 38, "2nd": [38, 143], "ca_cam": 38, "phosph": 38, "glur": 38, "ca_cam_camkii": 38, "camkii": 38, "123": 38, "nmdar": [38, 100], "thoughout": 38, "epsp": 38, "odd": 38, "transloc": 38, "slightli": [38, 156, 157], "trickl": 38, "gabar": 38, "make_gaba": 38, "replac": [38, 137], "factor": [38, 39, 40, 41, 46, 47, 69, 85, 100, 102, 122, 156], "life": 38, "tini": [38, 157], "millivolt": 38, "3_spine_vol_chang": 38, "ramif": 38, "sim": 38, "psdarea": [38, 130], "01e": 38, "wt": [38, 111], "phospho": 38, "proxi": [38, 69, 71, 87, 135], "minimum": [38, 77, 78, 81, 82, 83, 84, 94, 148], "01um": 38, "enhanc": 38, "subthreshold": 38, "obviou": 38, "linearli": [38, 41, 143, 156], "intuit": 38, "dilut": 38, "race": 38, "taken": [38, 46, 79, 111], "replenish": 38, "harder": 38, "shaftdiamet": [38, 130], "target": [38, 41, 52, 66, 72, 79, 96, 102, 103, 115, 126, 132, 141, 142, 154, 156], "shaftlength": [38, 130], "headlength": [38, 130], "headdiamet": [38, 130], "headvolum": [38, 130], "totallength": [38, 130], "mechan": [38, 41], "reli": 38, "biophysj": 38, "2011": [38, 157], "idea": [38, 57], "ex9": 38, "0_load_neuronal_morphology_fil": 38, "neuromorpho": 38, "sy": [38, 156, 157], "argv": [38, 156, 157], "fname": 38, "h10": 38, "cng": 38, "cellnam": 38, "recogn": [38, 122], "morpho": 38, "grab": 38, "1_chans_in_neuronal_morph": 38, "subdirectori": 38, "hd": 38, "kap": 38, "kad": 38, "kdr": 38, "na3": 38, "nax": 38, "apic": 38, "3e4": 38, "850": 38, "1250": 38, "h": [38, 77, 78, 104], "1e6": 38, "1e4": 38, "0133": 38, "0002": 38, "052": 38, "seen": 38, "channelnam": 38, "channelfunct": 38, "filetyp": 38, "suffix": [38, 156], "plain": 38, "importantli": 38, "classif": 38, "soma_": 38, "dend_": 38, "apical_": 38, "axon_": 38, "reader": [38, 137], "accept": [38, 104, 133], "econom": 38, "similarli": [38, 54, 104], "coordin": [38, 42, 48, 52, 54, 96, 103, 156], "measur": [38, 73, 104, 108, 158], "electroton": [38, 104], "liber": 38, "ternari": 38, "logic": [38, 65, 66, 137], "heavisid": [38, 104], "algebra": 38, "trignometr": 38, "logarithm": [38, 63, 65, 66, 156], "hh_na": 38, "make_hh_k_dr": 38, "hh_k": 38, "make_k_ahp": 38, "k_ahp": 38, "make_k_c": 38, "k_c": 38, "gaba": 38, "2_spines_in_neuronal_morpho": 38, "decor": 38, "023": [38, 156], "spine_proto": 38, "spinenam": 38, "shaft": [38, 103, 104, 130, 131], "meter": [38, 104], "makepassivespin": 38, "makeexcspin": 38, "feed": 38, "exc_spin": 38, "spacing_distrib": 38, "size_distrib": 38, "angle_distrib": 38, "mandatori": 38, "math": [38, 156, 157], "probability_of_spine_per_unit_length": 38, "probabl": [38, 44, 52, 63, 90, 117, 126, 133], "drawback": 38, "dimens": [38, 48, 92, 96, 104, 159], "were": [38, 156, 158], "warn": [38, 50, 135], "3_spiral_spin": 38, "fun": 38, "neg": [38, 56, 58, 133, 156, 157], "minspac": [38, 104], "2e4": 38, "28e7": 38, "025": [38, 156], "angular": 38, "placement": 38, "stage": [38, 57, 156, 157], "dummi": [38, 52, 61, 77], "construct": [38, 103, 159], "dispai": 38, "keyword": 38, "rplot": 38, "relpath": 38, "replic": [38, 72], "assembli": 38, "bool": [38, 50, 54, 69, 71, 73, 77, 82, 86, 91, 103, 105, 118, 123, 128, 133, 134, 138, 141, 142, 154], "gssa": [38, 156, 157], "worri": [38, 103], "memori": [38, 72, 92, 96, 141, 142], "garrul": 38, "largest": [38, 104, 143], "bother": 38, "happi": 38, "possibli": [38, 154], "endocompart": 38, "organel": 38, "degre": [38, 100], "celsiu": 38, "ensur": [38, 50, 69], "synchron": 38, "tight": 38, "hsolver": 38, "gaussian": 38, "elimin": [38, 57, 108, 156], "crank": 38, "nicolson": 38, "particularli": [38, 59, 156], "configur": [38, 146], "333": 38, "3000": 38, "library_proto_nam": 38, "nml": 38, "funcnam": 38, "copi": [38, 123, 152, 156, 157], "proto": [38, 104], "librarynam": 38, "renam": 38, "somalen": 38, "dendlen": 38, "request": [38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "functionnam": 38, "dual": 38, "alpha": [38, 66, 67, 77, 86], "ie": [38, 46], "suffic": 38, "deprec": [38, 46, 77], "filepath": 38, "rel": [38, 87], "thse": 38, "brain": 38, "brace": 38, "hippocamp": 38, "pyramid": 38, "traub": 38, "1991": 38, "afterhyperpolar": 38, "presenc": [38, 126], "2m": 38, "9m": 38, "4m": [38, 72], "minu": [38, 58], "channelproto": 38, "doqc": 38, "make_osc": 38, "fly": 38, "noth": [38, 50], "adjust": [38, 53], "charact": [38, 144], "anywher": 38, "desir": [38, 108], "electron": 38, "maxp": [38, 104], "maxg": [38, 104], "maxl": [38, 104], "accord": [38, 134, 154], "closer": [38, 58, 104, 137], "sizedistrib": [38, 104], "angledistrib": [38, 104], "Of": [38, 104], "remaind": 38, "pair": [38, 104, 126, 137], "2832": 38, "increment": [38, 53, 56, 61, 84, 94, 110, 119, 134, 156], "altogeth": 38, "center": 38, "chosen": 38, "centr": [38, 103], "28": [38, 50, 156], "150": 38, "proport": [38, 108, 146], "2pi": 38, "conveni": 38, "convent": [38, 103, 143, 154], "permit": [38, 41, 104], "infer": 38, "soma_endo": 38, "spine_endo": 38, "psd_endo": 38, "distinct": [38, 50, 137, 156], "react": 38, "slope": 38, "word": [38, 52], "geometry_expr": 38, "time_expr": 38, "repac": 38, "unlik": [38, 52, 66, 154], "cosin": [38, 65, 66], "rstim": 38, "elecpath": 38, "geom_expr": 38, "ymin": [38, 84, 94], "ymax": [38, 84, 94], "savefil": 38, "saveresolut": 38, "showflag": 38, "replath": 38, "durign": 38, "autoscal": 38, "rmoog": 38, "fullscreen": 38, "explain": 38, "dvm": [39, 40, 62, 86, 116], "deltathresh": [39, 62], "exp": [39, 62, 63, 65, 66, 77, 104], "thresh": [39, 40, 62, 81, 82, 141, 142], "tau_w": 39, "a0": [39, 40, 85, 116], "b0": [39, 85], "setw": 39, "getw": 39, "settauw": 39, "gettauw": 39, "seta0": [39, 40, 85, 116], "geta0": [39, 40, 85, 116], "setb0": [39, 85], "getb0": [39, 85], "tauw": 39, "dw": 39, "threshold": [40, 69, 81, 82, 86, 128, 129, 141, 142, 156], "rossant": 40, "goodman": 40, "platkiewicz": 40, "brett": 40, "2010": 40, "itauthresh": 40, "threshadapt": 40, "threshjump": 40, "setthreshadapt": 40, "getthreshadapt": 40, "settauthresh": 40, "gettauthresh": 40, "setthreshjump": 40, "getthreshjump": 40, "tauthresh": 40, "signeur": 41, "behind": [41, 158], "scene": 41, "transform": [41, 137], "inputoffset": 41, "outputoffset": 41, "worth": 41, "devis": 41, "opaqu": [41, 133], "transpar": 41, "facil": 41, "transformatoin": 41, "framework": [41, 104], "problem": [41, 133], "fed": [41, 108], "filesystem": 41, "whenev": [41, 69, 86, 115, 154], "push": [41, 156], "usec": 41, "5000": [41, 86, 157], "micromolar": 41, "001x": 41, "situat": [41, 60], "fan": 41, "hous": 41, "manner": [41, 141, 142], "regul": 41, "mesh": [41, 48, 54, 59, 96, 103, 104, 111, 131, 137, 156], "oeper": 41, "invisibli": 41, "proc": [41, 43, 46, 47, 52, 58, 59, 61, 65, 66, 68, 71, 72, 79, 81, 83, 86, 87, 91, 92, 93, 94, 96, 101, 108, 111, 112, 113, 114, 115, 117, 118, 119, 128, 132, 134, 136, 139, 141, 142, 144, 146, 151], "void": [41, 43, 46, 47, 50, 52, 53, 57, 58, 59, 61, 65, 66, 68, 70, 71, 72, 79, 81, 83, 84, 86, 87, 91, 92, 93, 94, 96, 101, 108, 111, 112, 113, 114, 115, 117, 118, 119, 127, 128, 132, 134, 136, 137, 139, 141, 142, 144, 146, 151], "setinputoffset": 41, "getinputoffset": 41, "setoutputoffset": 41, "getoutputoffset": 41, "setscal": [41, 102], "getscal": [41, 102], "getoutputvalu": [41, 43, 58, 108, 113, 114, 143], "pst6vectoridsaide": [41, 66, 72, 132, 141, 142], "outputvalu": [41, 43, 58, 108, 113, 114, 143], "setx": [42, 52, 65, 75, 76], "getx": [42, 52, 65, 75, 76], "seti": [42, 52, 65, 75, 76], "geti": [42, 52, 65, 75, 76, 83, 143], "setnot": 42, "getnot": 42, "setcolor": 42, "getcolor": 42, "settextcolor": 42, "gettextcolor": 42, "seticon": 42, "geticon": 42, "setsolv": 42, "getsolv": 42, "setruntim": 42, "getruntim": [42, 50], "setdirpath": 42, "getdirpath": 42, "setmodeltyp": 42, "getmodeltyp": 42, "english": 42, "rgb": 42, "rrrgggbbb": 42, "textcolor": 42, "labelthat": 42, "dirpath": 42, "modeltyp": [42, 156], "setfunct": 43, "getfunct": 43, "setoutputvalu": 43, "getarg1valu": 43, "setanyvalu": 43, "getanyvalu": 43, "sum": [43, 57, 58, 65, 66, 122, 132, 133, 156, 157], "arg1x2": 43, "output_": 43, "arithmet": 43, "arg1valu": 43, "anyvalu": 43, "unsign": [43, 48, 50, 54, 55, 57, 59, 61, 65, 66, 71, 72, 73, 77, 78, 84, 87, 90, 92, 94, 96, 103, 104, 105, 107, 111, 112, 113, 114, 119, 122, 123, 125, 126, 131, 132, 133, 135, 136, 139, 143, 146, 148], "int": [43, 48, 50, 54, 55, 56, 57, 59, 61, 63, 65, 66, 71, 72, 73, 75, 76, 77, 78, 79, 84, 87, 90, 92, 94, 96, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 119, 122, 123, 125, 126, 131, 132, 133, 135, 139, 143, 144, 146, 148, 154], "binomi": 44, "setn": [44, 111], "getn": [44, 111], "setp": 44, "getp": 44, "coin": 44, "toss": 44, "setca": [46, 69], "getca": [46, 69], "setcabas": 46, "getcabas": 46, "_base": 46, "settau": [46, 77, 81, 146], "gettau": [46, 77, 81, 146], "setb": [46, 85, 86], "getb": [46, 77, 78, 85, 86], "setthick": [46, 57, 113], "getthick": [46, 57, 113], "setdiamet": [46, 52, 57], "getdiamet": [46, 52, 57], "setlength": [46, 52, 57], "getlength": [46, 52, 57], "setceil": 46, "getceil": 46, "setfloor": 46, "getfloor": 46, "currentfract": 46, "ca2": [46, 156], "synonym": [46, 118, 128], "concout": 46, "dc": [46, 57], "i_ca": 46, "legal": 46, "radiu": [46, 55, 103], "ceil": 46, "floor": 46, "assort": 47, "msgsrc": [47, 52, 86], "gk": [47, 52, 68, 86], "ek": [47, 52, 86, 104], "msgdest": [47, 52, 58, 65, 66, 68, 86, 92, 93, 94, 105, 108, 113, 114, 115, 151], "ghk": [47, 100], "goldman": 47, "katz": 47, "setgbar": [47, 90], "getgbar": [47, 90], "setmodul": 47, "getmodul": 47, "setek": 47, "getek": 47, "setgk": [47, 68], "getgk": [47, 68], "getik": 47, "channelout": 47, "permeabilityout": 47, "ikout": 47, "concenobject": 47, "recomput": [47, 55, 61], "semant": 47, "virtual": 48, "setvolum": [48, 57, 111], "getvolum": [48, 57, 96, 111], "getvoxelvolum": 48, "getvoxelmidpoint": 48, "setonevoxelvolum": 48, "getonevoxelvolum": 48, "getnumdimens": 48, "getstencilr": 48, "getstencilindex": 48, "builddefaultmesh": 48, "thespecifi": 48, "meshentri": [48, 153], "setvolumenotr": 48, "notifi": [48, 154], "invalid": [48, 73, 154], "inth": 48, "shouldn": 48, "resetstencil": 48, "stencil": [48, 66], "prior": 48, "setnummesh": 48, "getnummesh": 48, "voxelvolout": 48, "recalcul": [48, 54], "hasonli": 48, "thetre": 48, "rescal": [48, 104, 133], "thevolum": 48, "alsomaintain": 48, "voxelvolum": 48, "voxelmidpoint": 48, "midpoint": 48, "3n": 48, "onevoxelvolum": 48, "stencilr": 48, "partner": 48, "stencilindex": 48, "getdoc": [49, 64], "getbaseclass": 49, "baseclass": 49, "oneof": 50, "basedt_": 50, "examin": 50, "themi": 50, "lowest": 50, "lookupdefaulttick": 50, "overridden": 50, "tickstep": 50, "fileio": 50, "resolut": 50, "diffamp": [50, 153], "pidcontrol": [50, 153], "stimulust": [50, 153], "testsch": [50, 153], "synhandlerbas": [50, 138, 153], "simplesynhandl": [50, 123, 153], "stdpsynhandl": [50, 153], "graupnerbrunel2012caplasticitysynhandl": [50, 153], "seqsynhandl": [50, 153], "caconcbas": [50, 153], "difshel": [50, 153], "mgblock": [50, 153], "randspik": [50, 153], "chanbas": [50, 153], "intfir": [50, 139, 153], "intfirebas": [50, 153], "lif": [50, 153], "qif": [50, 153], "exif": [50, 153], "adexif": [50, 153], "adthreshif": [50, 153], "izhif": [50, 153], "izhikevichnrn": [50, 153], "synchan": [50, 100, 153], "nmdachan": [50, 153], "gapjunct": [50, 153], "leakag": [50, 153], "markovchannel": [50, 91, 94, 148, 153], "markovgslsolv": [50, 153], "markovratet": [50, 91, 153], "markovsolv": [50, 90, 153], "markovsolverbas": [50, 153], "compartmentbas": [50, 153], "spikegen": [50, 153, 154], "spikestat": [50, 128], "timet": [50, 153], "arith": [50, 153], "bufpool": [50, 153], "poolbas": [50, 153, 156], "cplxenzbas": [50, 153], "14": [50, 86, 156], "enzbas": [50, 153, 157], "reacbas": [50, 153], "streamer": [50, 141, 142, 153], "hdf5writerbas": [50, 153], "nsdfwriter": [50, 153], "pyrun": [50, 153], "clockcontrol": 50, "proc0": 50, "proc1": 50, "proc2": 50, "proc3": 50, "proc4": 50, "proc5": 50, "proc6": 50, "proc7": 50, "proc8": 50, "proc9": 50, "proc10": 50, "proc11": 50, "proc12": 50, "proc13": 50, "proc14": 50, "proc15": 50, "proc16": 50, "proc17": 50, "proc18": 50, "proc19": 50, "proc20": 50, "proc21": 50, "proc22": 50, "proc23": 50, "proc24": 50, "proc25": 50, "proc26": 50, "proc27": 50, "proc28": 50, "proc29": 50, "proc30": 50, "proc31": 50, "setbasedt": 50, "getbasedt": 50, "getcurrenttim": 50, "getnstep": 50, "getnumtick": 50, "getstrid": [50, 56], "getcurrentstep": 50, "getdt": [50, 79, 105], "getisrun": 50, "settickstep": 50, "gettickstep": 50, "settickdt": 50, "gettickdt": 50, "getdefaulttick": 50, "restart": 50, "seamlessli": 50, "process0": 50, "pk8procinfo": 50, "reinit0": 50, "process1": 50, "reinit1": 50, "process2": 50, "reinit2": 50, "process3": 50, "reinit3": 50, "process4": 50, "reinit4": 50, "process5": 50, "reinit5": 50, "process6": 50, "reinit6": 50, "process7": 50, "reinit7": 50, "process8": 50, "reinit8": 50, "process9": 50, "reinit9": 50, "process10": 50, "reinit10": 50, "process11": 50, "reinit11": 50, "process12": 50, "reinit12": 50, "process13": 50, "reinit13": 50, "process14": 50, "reinit14": 50, "process15": 50, "reinit15": 50, "process16": 50, "reinit16": 50, "process17": 50, "reinit17": 50, "process18": 50, "reinit18": 50, "process19": 50, "reinit19": 50, "process20": 50, "reinit20": 50, "process21": 50, "reinit21": 50, "process22": 50, "22": [50, 156], "reinit22": 50, "process23": 50, "23": [50, 156], "reinit23": 50, "process24": 50, "24": [50, 156], "reinit24": 50, "process25": 50, "reinit25": 50, "process26": 50, "reinit26": 50, "process27": 50, "27": [50, 156], "reinit27": 50, "process28": 50, "reinit28": 50, "process29": 50, "reinit29": 50, "process30": 50, "reinit30": 50, "process31": 50, "reinit31": 50, "basedt": 50, "currenttim": 50, "nstep": 50, "numtick": 50, "stride": [50, 56], "currentstep": 50, "isrun": [50, 152], "dt_": 50, "inact": 50, "tickdt": [50, 156, 157], "defaulttick": 50, "zombi": [50, 60, 135], "0u": 50, "emit": [50, 134], "_second_": [52, 68], "procinfo": [52, 58, 65, 66, 68, 92, 93, 94, 108, 113, 114, 115, 151], "info": [52, 64, 86, 103, 111], "asymmetr": 52, "immedi": [52, 57, 102, 122, 158], "adjac": [52, 98], "toconnect": 52, "distal": [52, 103, 137], "face": [52, 54], "outward": 52, "axialfuncof": 52, "raxialfunc": 52, "setvm": [52, 81, 86, 90, 92], "setcm": [52, 104], "getcm": [52, 104], "setem": [52, 104], "getem": [52, 104], "getim": [52, 86], "setinject": [52, 86], "getinject": [52, 86], "setinitvm": [52, 86], "getinitvm": [52, 86], "setrm": [52, 104], "getrm": [52, 104], "setra": [52, 104], "getra": [52, 104], "setx0": [52, 54, 55], "getx0": [52, 54, 55], "sety0": [52, 54, 55], "gety0": [52, 54, 55], "setz0": [52, 54, 55], "getz0": [52, 54, 55], "handleinject": 52, "beupdat": 52, "group": [52, 153], "calledc": 52, "displac": 52, "setgeomandelec": 52, "account": 52, "phase": 52, "vmout": [52, 86, 146], "axialout": 52, "raxialout": [52, 137], "mass": [53, 156], "cplx": [53, 156], "setk1": 53, "getk1": 53, "setk2": 53, "getk2": 53, "setk3": 53, "getk3": 53, "setratio": 53, "getratio": 53, "setconck1": 53, "getconck1": 53, "enzdest": [53, 61, 157], "cplxdest": 53, "enzout": 53, "cplxout": 53, "k1": [53, 60], "subordin": 53, "km": [53, 60, 61, 156, 157], "thatwhen": 53, "whenk2": 53, "k3": 53, "aka": 53, "kcat": [53, 61, 156, 157], "remainsfix": 53, "whenk1": 53, "knowswhat": 53, "accordingli": [53, 96], "k2": 53, "elementari": 53, "conck1": 53, "unitsthi": 53, "whenconck1": 53, "sinceset": 53, "setistoroid": 54, "getistoroid": 54, "setpreservenumentri": 54, "getpreservenumentri": 54, "setalwaysdiffus": 54, "getalwaysdiffus": 54, "setx1": [54, 55], "getx1": [54, 55], "sety1": [54, 55], "gety1": [54, 55], "setz1": [54, 55], "getz1": [54, 55], "setdx": [54, 84], "getdx": [54, 84], "setdi": [54, 84], "getdi": [54, 84], "setdz": 54, "getdz": 54, "setnx": 54, "getnx": 54, "setni": 54, "getni": 54, "setnz": 54, "getnz": 54, "setcoord": [54, 55], "getcoord": [54, 55], "setmeshtospac": 54, "getmeshtospac": 54, "setspacetomesh": 54, "getspacetomesh": 54, "setsurfac": 54, "getsurfac": 54, "istoroid": 54, "toroid": 54, "theleft": 54, "nx": 54, "ny": 54, "nzentri": 54, "preservenumentri": 54, "nz": 54, "remainunchang": 54, "x1": [54, 55, 66, 156, 157], "y1": [54, 55], "z1": [54, 55], "thusdx": 54, "dz": 54, "thendx": 54, "alwaysdiffus": 54, "sequenti": [54, 103, 122], "chmestri": 54, "least": [54, 128], "systemdefault": 54, "coord": [54, 55, 104], "subdivis": [54, 96, 103, 104], "cuboid": [54, 96], "dzwhen": 54, "numentri": [54, 55, 126], "hack": 54, "preserv": [54, 104], "meshtospac": 54, "cubic": 54, "spacetomesh": 54, "meshindex": 54, "isno": 54, "ix": 54, "ii": [54, 63], "iz": 54, "ixnot": 54, "setr0": 55, "getr0": 55, "setr1": 55, "getr1": 55, "setdifflength": [55, 103], "getdifflength": [55, 103], "getnumdiffcompt": [55, 103], "gettotlength": 55, "r0": [55, 156, 157], "r1": [55, 156, 157], "difflength": [55, 103, 156, 157], "subdivisionsth": 55, "attempt": [55, 154, 156], "oflength": 55, "enddiamet": 55, "lengthsfor": 55, "totlength": 55, "numdiffcompt": [55, 103, 156, 157], "setstrid": 56, "src": [56, 64, 123, 154], "thedest": 56, "checkingtak": 56, "wrap": 56, "iso": 57, "adjoin": 57, "exchang": [57, 71, 87, 156], "talk": 57, "_0": 57, "finfo": [57, 111, 139, 153, 154], "procedur": 57, "prev_c": 57, "_1": 57, "fixbuff": 57, "difbuff": [57, 153], "cue": 57, "best": 57, "innerdif": 57, "inner": 57, "outer": 57, "outerdif": 57, "getc": [57, 66, 86], "setceq": 57, "getceq": 57, "setd": [57, 85, 86], "getd": [57, 85, 86], "setval": [57, 102], "getval": [57, 102], "setleak": 57, "getleak": 57, "setshapemod": 57, "getshapemod": 57, "setouterarea": 57, "getouterarea": 57, "setinnerarea": 57, "getinnerarea": 57, "free": [57, 113, 114], "fluxfromout": 57, "fluxfromin": 57, "outflux": 57, "finflux": 57, "foutflux": 57, "storeinflux": 57, "storeoutflux": 57, "taupump": 57, "eqtaupump": 57, "mmpump": [57, 153], "hillpump": 57, "concentrationout": 57, "innerdifsourceout": 57, "outerdifsourceout": 57, "ceq": 57, "valenc": [57, 102], "shapemod": 57, "outerarea": 57, "innerarea": 57, "amplifi": 58, "plu": 58, "gain": [58, 108, 146, 157], "static": 58, "setgain": [58, 108, 146], "getgain": [58, 108, 146], "setsatur": [58, 108], "getsatur": [58, 108], "gainin": 58, "plusin": 58, "minusin": 58, "stamp": [58, 65, 66, 83, 113, 114, 117, 134, 141, 142, 151], "satur": [58, 108], "truncat": [58, 73, 113, 114], "precis": [58, 73, 134, 156, 158], "float": [58, 65, 66, 71, 73, 154, 156], "setstoich": [59, 71, 133], "getstoich": [59, 71, 87, 133], "setpath": [59, 135], "getpath": [59, 105, 135], "setcompart": [59, 87, 135], "getcompart": [59, 87, 104, 135], "getnumvoxel": 59, "getnumallvoxel": [59, 71, 87], "setnvec": [59, 71, 87], "getnvec": [59, 71, 87], "setnumpool": [59, 71, 87], "getnumpool": [59, 71, 87], "setdiffvol1": 59, "getdiffvol1": 59, "setdiffvol2": 59, "getdiffvol2": 59, "setdiffscal": 59, "getdiffscal": 59, "buildmeshjunct": 59, "buildneuromeshjunct": 59, "spinemesh": [59, 103, 153], "psdmesh": [59, 103, 153], "numvoxel": 59, "numallvoxel": [59, 71, 87], "numpool": [59, 71, 87, 156, 157], "nvec": [59, 71, 87, 156], "diffvol1": 59, "firstvol": 59, "relev": [59, 60, 111, 154], "psd": [59, 103, 104, 113, 130], "diffvol2": 59, "secondvol": 59, "diffscal": 59, "geometri": [59, 96, 103, 104, 113, 156], "setkmk1": 60, "readkkit": 60, "abstract": [61, 111], "setkm": 61, "getkm": 61, "setnumkm": 61, "getnumkm": 61, "setkcat": 61, "getkcat": 61, "getnumsubstr": [61, 119], "subdest": [61, 119], "prddest": [61, 119], "remesh": [61, 156], "numkm": 61, "subout": [61, 119], "prdout": [61, 119], "setdeltathresh": 62, "getdeltathresh": 62, "setvpeak": [62, 85], "getvpeak": [62, 85], "vpeak": [62, 85], "knuth": 63, "taocp": 63, "setmean": [63, 106, 109], "getmean": [63, 106, 109, 117, 132], "setmethod": [63, 87, 91, 106, 144], "getmethod": [63, 87, 91, 106, 144], "gettyp": 64, "getsrc": 64, "getdest": 64, "fieldnam": [64, 72, 105, 154], "rtti": 64, "subsidiari": 64, "pars": [65, 66], "xy": 65, "141592": [65, 66], "718281": [65, 66], "getvalu": [65, 66, 99, 147], "getderiv": [65, 66, 108], "setmod": [65, 66, 73, 115, 146], "getmod": [65, 66, 73, 115, 146], "setexpr": [65, 66], "getexpr": [65, 66], "setvar": 65, "getvar": 65, "varin": 65, "xin": 65, "shorthand": 65, "var": [65, 66], "yin": 65, "zin": 65, "xyin": 65, "xyzin": 65, "derivativeout": [65, 66], "parser": [65, 66], "mupars": [65, 66, 104], "explan": [65, 66], "tan": [65, 66], "tangen": [65, 66], "asin": [65, 66], "arcu": [65, 66], "aco": [65, 66], "atan": [65, 66], "sinh": [65, 66], "hyperbol": [65, 66], "cosh": [65, 66], "tanh": [65, 66], "asinh": [65, 66], "acosh": [65, 66], "atanh": [65, 66], "arcur": [65, 66], "log2": [65, 66], "log10": [65, 66], "log": [65, 66, 156], "ln": [65, 66], "71828": [65, 66], "rint": [65, 66], "nearest": [65, 66, 71, 83, 84, 133, 156], "ab": [65, 66, 77, 118, 128], "min": [65, 66, 77, 104, 145], "avg": [65, 66], "rand": [65, 66, 152], "rand2": [65, 66], "random_devic": [65, 66], "op": [65, 66], "prioroti": 65, "subtract": [65, 66], "divis": [65, 66, 77, 78, 79, 84, 94, 143, 148], "style": [65, 66], "c0": [66, 85], "c1": 66, "xn": 66, "yp": 66, "ci": [66, 102], "xi": 66, "yi": 66, "getrat": [66, 118], "setnumvar": 66, "getnumvar": 66, "setnumx": 66, "getnumx": 66, "setc": [66, 86], "setindepend": 66, "getindepend": 66, "rateout": 66, "calul": 66, "en": 66, "wikipedia": [66, 108], "wiki": 66, "point_stencil": 66, "exact": [66, 133], "prioriti": [66, 69, 120, 123, 124], "modulo": 66, "numvar": 66, "gammarng": [66, 153], "gamma": [66, 67, 86, 97, 100, 133], "setalpha": [66, 67, 77, 86], "getalpha": [66, 67, 77, 86], "settheta": [66, 67, 104], "gettheta": [66, 67, 104], "channel1": 68, "channel2": 68, "vm2": 68, "vm1": 68, "channel1out": 68, "channel2out": 68, "synapseswith": 69, "higgin": 69, "et": 69, "al": 69, "2014": [69, 156, 157], "graupner": 69, "brunel": 69, "2012": 69, "delayd": 69, "inaccur": 69, "capool": 69, "synhandl": [69, 138, 139], "won": [69, 158], "queue": [69, 80, 120, 123, 124, 140], "setnumsynaps": [69, 120, 122, 123, 124, 139], "getnumsynaps": [69, 120, 122, 123, 124, 139], "addpostspik": [69, 120], "postev": [69, 120], "setcainit": 69, "getcainit": 69, "settauca": 69, "gettauca": 69, "settausyn": 69, "gettausyn": 69, "setcapr": 69, "getcapr": 69, "setcapost": 69, "getcapost": 69, "setdelayd": 69, "getdelayd": 69, "setthetap": 69, "getthetap": 69, "setthetad": 69, "getthetad": 69, "setgammap": 69, "getgammap": 69, "setgammad": 69, "getgammad": 69, "setweightmax": [69, 120], "getweightmax": [69, 120], "setweightmin": [69, 120], "getweightmin": [69, 120], "setweightscal": [69, 122], "getweightscal": [69, 122], "setnoisi": 69, "getnoisi": 69, "setnoisesd": 69, "getnoisesd": 69, "setbist": 69, "getbist": 69, "concentrationand": 69, "impuls": 69, "caution": 69, "validwhen": 69, "descript": [69, 154, 156, 157], "cainit": 69, "tauca": 69, "tausyn": 69, "capr": 69, "capost": 69, "thetap": 69, "causer": 69, "thetad": 69, "wrong": 69, "depress": 69, "gammap": 69, "gammad": 69, "weightmax": [69, 120], "weightmin": [69, 120], "lower": [69, 79, 120, 145], "weightscal": [69, 122], "terminologi": 69, "paper": [69, 86], "efficaci": 69, "noisi": [69, 156], "nois": [69, 156], "noisesd": 69, "graupnerbrunel2012": 69, "xcompt": [71, 87], "particip": [71, 87], "getnumlocalvoxel": [71, 87], "setnumallvoxel": [71, 87], "voxelvol": [71, 87], "chemcompt": [71, 87, 135, 153], "xcomptin": [71, 87], "setuserandinit": 71, "getuserandinit": 71, "setuseclockedupd": 71, "getuseclockedupd": 71, "getnumfir": 71, "xcomptout": [71, 87], "juxtapos": [71, 87], "belong": [71, 87, 105, 135], "aloc": [71, 87], "aremoteproxi": [71, 87], "aremot": [71, 87], "aproxi": [71, 87], "da": [71, 87], "numlocalvoxel": [71, 87], "abut": [71, 87], "userandinit": 71, "probabilist": [71, 126, 133, 156], "sinit": 71, "49": 71, "51": 71, "useclockedupd": 71, "propens": 71, "signific": 71, "speed": 71, "penalti": 71, "count": [71, 87, 113, 114], "numfir": 71, "writer": [72, 73, 101], "exce": [72, 101, 134, 141, 142], "flushlimit": [72, 101], "moose_output": 72, "h5": 72, "forc": 72, "flush": [72, 73], "dataset": 72, "until": [72, 156], "destroi": [72, 123], "setflushlimit": 72, "getflushlimit": 72, "reiniti": [72, 101, 108, 154], "valid": [72, 101, 154], "tri": [72, 101, 108, 156], "subclass": [73, 111, 117, 121, 154], "setfilenam": [73, 144], "getfilenam": [73, 144], "getisopen": 73, "setchunks": 73, "getchunks": 73, "setcompressor": 73, "getcompressor": 73, "setcompress": 73, "getcompress": 73, "setstringattr": 73, "getstringattr": 73, "setdoubleattr": 73, "getdoubleattr": 73, "setlongattr": 73, "getlongattr": 73, "setstringvecattr": 73, "getstringvecattr": 73, "setdoublevecattr": 73, "getdoublevecattr": 73, "setlongvecattr": 73, "getlongvecattr": 73, "safeti": 73, "crash": 73, "isopen": 73, "chunksiz": 73, "compressor": 73, "compress": 73, "zlib": 73, "szip": 73, "stringattr": 73, "doubleattr": 73, "longattr": 73, "stringvecattr": 73, "doublevecattr": 73, "longvecattr": 73, "old": [74, 75, 76, 97], "tabchannel": [74, 75, 76, 97], "hhchan": [74, 75, 76, 97], "setxindex": 75, "getxindex": 75, "setyindex": 75, "getyindex": 75, "setzindex": 75, "getzindex": 75, "setxpow": [75, 76], "getxpow": [75, 76], "setypow": [75, 76], "getypow": [75, 76], "setzpow": [75, 76], "getzpow": [75, 76], "setinst": [75, 76], "getinst": [75, 76], "concen": [75, 76], "incom": [75, 76, 80, 90, 92, 94, 113, 114, 115, 128, 141, 142, 147], "usea": 75, "concen2": 75, "setnumgatex": [75, 76], "getnumgatex": [75, 76], "setnumgatei": [75, 76], "getnumgatei": [75, 76], "setnumgatez": [75, 76], "getnumgatez": [75, 76], "xindex": 75, "yindex": 75, "zindex": 75, "instant": [75, 76], "bitmap": [75, 76], "xgate": [75, 76], "ygate": [75, 76], "zgatewhen": [75, 76], "beus": [75, 76], "useda": [75, 76], "setuseconcentr": 76, "getuseconcentr": 76, "usein": 76, "createg": 76, "useconcentr": 76, "tocontrol": 76, "hodkgin": [77, 78], "geta": [77, 78, 85, 86], "setbeta": [77, 86], "getbeta": [77, 86], "setminfin": 77, "getminfin": 77, "setmin": [77, 145], "getmin": [77, 145], "setmax": [77, 145], "getmax": [77, 145], "setdiv": 77, "getdiv": 77, "settablea": [77, 78], "gettablea": [77, 78], "settableb": [77, 78], "gettableb": [77, 78], "setuseinterpol": 77, "getuseinterpol": 77, "setalphaparm": 77, "getalphaparm": 77, "aa": 77, "ac": [77, 156], "af": 77, "ba": 77, "bb": 77, "bc": [77, 156], "bd": 77, "bf": 77, "xdiv": [77, 84, 94, 148], "xmin": [77, 78, 83, 84, 94, 148], "xmaxher": 77, "coeffici": [77, 86, 137], "termher": 77, "beta": [77, 86], "xmax": [77, 78, 83, 84, 94, 148], "hh": 77, "readili": 77, "setuptau": 77, "byth": 77, "infin": 77, "ratherthan": 77, "ta": 77, "tb": 77, "tc": 77, "td": [77, 146], "tf": 77, "ma": [77, 157], "mb": 77, "mc": 77, "md": 77, "mf": 77, "xmaxa": [77, 78], "tweakalpha": 77, "convertth": 77, "betabecaus": 77, "notneed": 77, "tweaktau": 77, "minf": 77, "setupg": 77, "is_betathi": 77, "minfin": 77, "div": 77, "tablea": [77, 78], "tableb": [77, 78], "useinterpol": 77, "alphaparm": 77, "lookupa": [77, 78], "doesso": 77, "usinga": 77, "granular": [77, 78], "ofvoltag": 77, "dv": 77, "lookupb": [77, 78], "raw": 77, "transformedfrom": 77, "setxmina": 78, "getxmina": 78, "setxmaxa": 78, "getxmaxa": 78, "setxdivsa": 78, "getxdivsa": 78, "setymina": 78, "getymina": 78, "setymaxa": 78, "getymaxa": 78, "setydivsa": 78, "getydivsa": 78, "setxminb": 78, "getxminb": 78, "setxmaxb": 78, "getxmaxb": 78, "setxdivsb": 78, "getxdivsb": 78, "setyminb": 78, "getyminb": 78, "setymaxb": 78, "getymaxb": 78, "setydivsb": 78, "getydivsb": 78, "xmina": 78, "xdivsa": 78, "ymina": 78, "ymaxa": 78, "ydivsa": 78, "xminb": 78, "xmaxb": 78, "xdivsb": 78, "yminb": 78, "ymaxb": 78, "ydivsb": 78, "passedin": 78, "2d": [78, 92, 156], "tableth": 78, "counterpart": 78, "hine": 79, "setse": [79, 126], "getse": [79, 126], "settarget": 79, "gettarget": 79, "setdt": 79, "setcaadv": 79, "getcaadv": 79, "setvdiv": 79, "getvdiv": 79, "setvmin": 79, "getvmin": 79, "setvmax": [79, 86], "getvmax": [79, 86], "setcadiv": 79, "getcadiv": 79, "setcamin": 79, "getcamin": 79, "setcamax": 79, "getcamax": 79, "discov": 79, "deep": 79, "search": [79, 154], "caadvanc": 79, "flow": [79, 90], "vdiv": 79, "sensit": 79, "vmin": 79, "vmax": [79, 86], "cadiv": 79, "camin": 79, "camax": 79, "owner": 80, "setthresh": [81, 82], "getthresh": [81, 82], "setrefractoryperiod": [81, 82], "getrefractoryperiod": [81, 82], "spikeout": [81, 82, 86, 118, 128], "timestamp": [81, 82], "refractoryperiod": [81, 82], "setvreset": 82, "getvreset": 82, "gethasfir": [82, 118, 128], "getlasteventtim": 82, "vreset": [82, 85], "hasfir": [82, 118, 128], "lasteventtim": 82, "dimension": [83, 84, 103, 156, 157], "roundoff": [83, 84], "setxmin": [83, 84, 94, 148], "getxmin": [83, 84, 94, 148], "setxmax": [83, 84, 94, 148], "getxmax": [83, 84, 94, 148], "lookupout": [83, 84], "respond": [83, 84], "lookupreturn2d": 84, "v1": 84, "v2": 84, "sendsvalu": 84, "setxdiv": [84, 94, 148], "getxdiv": [84, 94, 148], "setymin": [84, 94], "getymin": [84, 94], "setymax": [84, 94], "getymax": [84, 94], "setydiv": [84, 94], "getydiv": [84, 94], "settabl": [84, 148], "gettabl": [84, 148], "settablevector2d": 84, "gettablevector2d": 84, "ydiv": [84, 94], "tablevector2d": 84, "debug": [84, 115, 154], "izhikevich": [85, 86], "04e6": 85, "5e3": 85, "140": [85, 86], "u0": [85, 86], "v0": 85, "setc0": 85, "getc0": 85, "seta": [85, 86], "setu": 85, "getu": [85, 86], "setuinit": 85, "getuinit": 85, "uinit": 85, "2003": 86, "ieee": 86, "transact": 86, "pp": [86, 157], "1569": 86, "1572": 86, "physiolog": 86, "du": 86, "setrmbytau": 86, "getrmbytau": 86, "setaccommod": 86, "getaccommod": 86, "setu0": 86, "getu0": 86, "setinitu": 86, "getinitu": 86, "setgamma": 86, "getgamma": 86, "cdest": 86, "ddest": 86, "bdest": 86, "adest": 86, "thrshold": 86, "histori": [86, 120, 121, 122], "rmbytau": 86, "hidden": 86, "accommod": 86, "recoveri": 86, "initu": 86, "40000": 86, "setepsab": 87, "getepsab": 87, "setepsrel": 87, "getepsrel": 87, "getestimateddt": 87, "far": [87, 100], "explict": 87, "rk5": [87, 156], "methodgsl": 87, "alia": [87, 100, 106, 154], "aboverk4": 87, "4th": 87, "methodrk2": 87, "methodrkck": 87, "cash": 87, "karp": 87, "methodrk8": 87, "princ": 87, "dormand": 87, "epsab": 87, "permiss": [87, 108, 133], "epsrel": 87, "live": 87, "estimateddt": 87, "estim": 87, "ti": [87, 146], "multist": 90, "deal": [90, 123], "transit": [90, 92, 128, 129, 148, 156], "setligandconc": [90, 92], "getligandconc": [90, 92], "setnumst": 90, "getnumst": 90, "setnumopenst": 90, "getnumopenst": 90, "getstat": [90, 94, 144, 156], "setinitialst": [90, 94], "getinitialst": [90, 94], "setlabel": 90, "getlabel": 90, "handleligandconc": [90, 92], "handlest": 90, "ligandconc": [90, 92, 94], "numstat": 90, "numopenst": 90, "initialst": [90, 94], "label": [90, 156, 157], "markov": [91, 92, 94], "getisiniti": [91, 133], "setrelativeaccuraci": 91, "getrelativeaccuraci": 91, "setabsoluteaccuraci": 91, "getabsoluteaccuraci": 91, "setinternaldt": 91, "getinternaldt": 91, "handleq": 91, "regard": 91, "instantan": [91, 92, 94, 118, 122], "stateout": [91, 94], "isiniti": [91, 133], "relativeaccuraci": 91, "criterion": 91, "absoluteaccuraci": 91, "internaldt": 91, "theschedul": [92, 93, 94], "andso": [92, 93, 94], "handlevm": [92, 94], "alloc": [92, 96], "set1d": 92, "1d": [92, 148], "th": 92, "set2d": 92, "setconst": 92, "getq": [92, 94], "getsiz": [92, 143], "instratesout": 92, "ratesat": 92, "famili": 92, "getinvdx": [94, 148], "getinvdi": 94, "invdx": [94, 148], "reciproc": 94, "invdi": 94, "getdimens": 96, "getmeshtyp": 96, "getcoordin": 96, "getneighbor": [96, 105], "getdiffusionarea": 96, "getdiffusionsc": 96, "remeshout": 96, "redo": 96, "oldvol": 96, "numtotalentri": 96, "startentri": 96, "localindic": 96, "volsth": 96, "specifieshow": 96, "balanc": [96, 156], "secondcas": 96, "remeshreacsout": 96, "numkf_": 96, "meshtyp": 96, "sphere": [96, 103, 137], "spheric": [96, 103, 137], "tetrahedr": 96, "diffusionarea": 96, "diffusionsc": 96, "origchannel": 97, "setkmg": [97, 100], "_a": [97, 100], "getkmg": [97, 100], "_b": [97, 100], "setcmg": [97, 100], "getcmg": [97, 100], "setzk": 97, "getzk": 97, "kmg": [97, 100], "eta": [97, 100], "cmg": [97, 100], "mg": [97, 100], "zk": 97, "gete1": 98, "gete2": 98, "getsrcfieldsone1": 98, "getdestfieldsone2": 98, "getsrcfieldsone2": 98, "getdestfieldsone1": 98, "getadjac": 98, "arematch": 98, "srcfieldsone2": 98, "destfieldsone1": 98, "objid": [98, 103, 104, 105, 123], "setvalu": [99, 147], "settemperatur": [100, 102], "gettemperatur": [100, 102], "setextca": 100, "getextca": 100, "setintca": 100, "getintca": 100, "setintcascal": 100, "getintcascal": 100, "setintcaoffset": 100, "getintcaoffset": 100, "setcondfract": 100, "getcondfract": 100, "getica": 100, "setperm": 100, "getperm": 100, "assignintca": 100, "intca": 100, "intcascal": 100, "intcaoffset": 100, "icaout": 100, "portion": 100, "temperatur": [100, 102], "kelvin": 100, "extca": 100, "offsetfor": 100, "_after_": 100, "condfract": 100, "passag": 100, "ica": 100, "nasti": 100, "setnumeventinput": 101, "getnumeventinput": 101, "cin": 102, "cout": 102, "gete": [102, 108], "setcin": 102, "getcin": 102, "setcout": 102, "getcout": 102, "eout": 102, "setsubtre": 103, "getsubtre": 103, "setsubtreepath": 103, "getsubtreepath": 103, "setseparatespin": 103, "getseparatespin": 103, "getnumseg": 103, "getparentvoxel": [103, 131], "geteleccomptlist": [103, 113, 131], "geteleccomptmap": [103, 113, 131], "getstartvoxelincompt": [103, 113, 131], "getendvoxelincompt": [103, 113, 131], "getspinevoxelondendvoxel": 103, "getdendvoxelsoncompart": 103, "getspinevoxelsoncompart": 103, "setgeometrypolici": 103, "getgeometrypolici": 103, "spinelistout": 103, "self": [103, 105, 154], "psdlistout": 103, "perpendicular": [103, 130], "subtre": 103, "contiguousthen": 103, "alsohandl": 103, "multiplenon": 103, "subtreepath": 103, "separatespin": 103, "travers": [103, 137], "neck": 103, "tobe": 103, "numseg": 103, "parentvoxel": [103, 131], "eleccomptlist": [103, 113, 131], "startvoxelincompt": [103, 113, 131], "endvoxelincompt": [103, 113, 131], "eleccomptmap": [103, 113, 131], "addition": 103, "eleccompt": 103, "spinevoxelondendvoxel": 103, "never": 103, "willattempt": 103, "ofth": 103, "numbersof": 103, "half": [103, 156], "lambda": [103, 104], "mostreact": 103, "const": [103, 111], "geometrypolici": 103, "polici": 103, "constructslik": 103, "cone": 103, "trouser": 103, "frustrum": 103, "proxim": [103, 131, 137], "emerg": [103, 113, 131, 137], "overlap": 103, "smoothli": 103, "merg": [103, 104, 132], "dendvoxelsoncompart": 103, "none": [103, 154], "spinevoxelsoncompart": 103, "fieldel": [104, 105, 126], "setphi": 104, "getphi": 104, "setsourcefil": 104, "getsourcefil": 104, "setcompartmentlengthinlambda": 104, "getcompartmentlengthinlambda": 104, "getnumcompart": 104, "getnumspin": 104, "getnumbranch": 104, "getpathdistancefromsoma": 104, "getgeometricaldistancefromsoma": 104, "getelectrotonicdistancefromsoma": 104, "setchanneldistribut": 104, "getchanneldistribut": 104, "setpassivedistribut": 104, "getpassivedistribut": 104, "setspinedistribut": 104, "getspinedistribut": 104, "getcompartmentsfromexpress": 104, "getvaluesfromexpress": 104, "getspinesfromexpress": 104, "getspinesoncompart": 104, "getparentcompartmentofspin": 104, "buildsegmenttre": 104, "lose": 104, "setspineandpsdmesh": 104, "setspineandpsddsolv": 104, "setnumspin": 104, "longitud": 104, "phi": 104, "latitud": 104, "sourcefil": 104, "swc": 104, "dotp": [104, 143], "compartmentlengthinlambda": 104, "commpart": 104, "routin": 104, "NOT": [104, 105, 154], "rebuild": [104, 133], "numcompart": 104, "numspin": 104, "numbranch": 104, "pathdistancefromsoma": 104, "geometricaldistancefromsoma": 104, "electrotonicdistancefromsoma": 104, "channeldistribut": 104, "caconcen": 104, "extant": 104, "trig": 104, "transcendent": 104, "No": [104, 135], "shelldia": 104, "shellfrac": 104, "passivedistribut": 104, "presum": 104, "spinedistribut": 104, "expresss": 104, "systemwil": 104, "compartmentsfromexpress": 104, "valuesfromexpress": 104, "val": 104, "spinesfromexpress": 104, "spinesoncompart": 104, "shaft0": 104, "shaft1": 104, "head1": 104, "parentcompartmentofspin": 104, "providesaccess": 105, "housekeep": 105, "messagetravers": 105, "setnam": [105, 141, 142], "getnam": [105, 141, 142], "getm": 105, "getpar": 105, "getchildren": 105, "getclassnam": 105, "setnumdata": 105, "getnumdata": 105, "setnumfield": 105, "getnumfield": 105, "getidvalu": 105, "getindex": 105, "getfieldindex": 105, "settick": 105, "gettick": 105, "getvaluefield": 105, "getsourcefield": 105, "getdestfield": 105, "getmsgout": 105, "getmsgin": 105, "getmsgdest": 105, "getmsgdestfunct": 105, "getisa": 105, "childout": 105, "dataentri": [105, 123], "overrid": 105, "valuefield": 105, "fieldsthat": 105, "msgdestfunct": 105, "isa": [105, 154, 156, 157], "setvari": 106, "getvari": [106, 117], "varianc": [106, 117], "ahren": 106, "dieter": 106, "mueller": 106, "ziggurat": 106, "seti1": [107, 125], "geti1": [107, 125], "i1": [107, 125], "pid": [108, 146], "stand": 108, "held": 108, "setcommand": 108, "getcommand": [108, 146], "getsens": [108, 146], "settaui": 108, "gettaui": 108, "settaud": 108, "gettaud": 108, "geterror": 108, "getintegr": 108, "_previou": 108, "commandin": [108, 146], "setpoint": 108, "sp": 108, "theori": 108, "sensedin": [108, 146], "pv": 108, "gaindest": 108, "kp": 108, "instabl": 108, "commonli": [108, 154], "taui": 108, "ki": 108, "cost": 108, "overshoot": [108, 146], "taud": 108, "kd": 108, "tau_i": 108, "tau_d": 108, "previous_integr": 108, "e_previ": 108, "decrement": 110, "nin": 110, "setninit": 111, "getninit": 111, "setdiffconst": 111, "getdiffconst": 111, "setmotorconst": 111, "getmotorconst": 111, "setconc": 111, "getconc": [111, 156], "setconcinit": 111, "getconcinit": 111, "setspeciesid": 111, "getspeciesid": 111, "reacdest": 111, "handlemolwt": 111, "molwt": [111, 127], "consequ": 111, "sharedmsg": 111, "requestmolwt": 111, "zombiepool": [111, 153], "implicit": 111, "tavail": 111, "speciesid": 111, "eventu": [111, 157], "ontologi": 111, "getnumnod": 112, "getmynod": 112, "setbuffers": 112, "getbuffers": 112, "numnod": 112, "mynod": 112, "buffers": 112, "getneuronvoxel": [113, 131], "psdlist": 113, "voxelargu": [113, 131], "disk": 113, "param": 113, "thepsd": 113, "nanometr": 113, "nm": 113, "neuronvoxel": [113, 131], "asw": [113, 131], "setbaselevel": [113, 114], "getbaselevel": [113, 114], "setfirstlevel": [113, 114], "getfirstlevel": [113, 114], "setfirstwidth": [113, 114], "getfirstwidth": [113, 114], "setfirstdelai": [113, 114], "getfirstdelai": [113, 114], "setsecondlevel": [113, 114], "getsecondlevel": [113, 114], "setsecondwidth": [113, 114], "getsecondwidth": [113, 114], "setseconddelai": [113, 114], "getseconddelai": [113, 114], "setcount": [113, 114], "getcount": [113, 114], "settrigmod": [113, 114], "gettrigmod": [113, 114], "setlevel": [113, 114], "getlevel": [113, 114], "setwidth": [113, 114], "getwidth": [113, 114], "setdelai": [113, 114, 140], "getdelai": [113, 114, 140], "trigger": [113, 114, 115, 118, 128, 156], "onset": [113, 114], "although": [113, 114], "levelin": [113, 114], "widthin": [113, 114], "delayin": [113, 114], "baselevel": [113, 114], "firstlevel": [113, 114], "firstwidth": [113, 114], "firstdelai": [113, 114], "secondlevel": [113, 114], "secondwidth": [113, 114], "seconddelai": [113, 114], "trigmod": [113, 114], "setrunstr": 115, "getrunstr": 115, "setinitstr": 115, "getinitstr": 115, "setinputvar": 115, "getinputvar": 115, "setoutputvar": 115, "getoutputvar": 115, "runstr": 115, "input_": 115, "underscor": 115, "conflict": 115, "builtin": [115, 146, 152, 154], "initstr": 115, "inputvar": 115, "balu": 115, "outputvar": 115, "quadrat": 116, "gerstner": 116, "kistler": 116, "vcritic": 116, "setvcrit": 116, "getvcrit": 116, "critic": 116, "getsampl": 117, "pseudorandom": [117, 145], "setrat": 118, "setrefractt": [118, 128], "getrefractt": [118, 128], "setab": [118, 128], "_refract": [118, 128], "getab": [118, 128], "isprobabilist": 118, "approach": 118, "refractt": [118, 128], "refractori": [118, 128], "apifunct": 119, "ruthlessli": 119, "derivedclass": 119, "man": 119, "getnumkf": 119, "setnumkb": 119, "getnumkb": 119, "setkf": 119, "getkf": 119, "setkb": 119, "getkb": 119, "getnumproduct": 119, "numkf": 119, "numkb": 119, "stdp": [120, 121], "setaminus0": 120, "getaminus0": 120, "setaminu": 120, "getaminu": 120, "settauminu": 120, "gettauminu": 120, "setaplus0": 120, "getaplus0": 120, "settauplu": 120, "gettauplu": 120, "aminus0": 120, "aminu": 120, "t_pre": [120, 121], "t_post": [120, 121], "tauminu": 120, "aplus0": 120, "aplu": [120, 121], "tauplu": 120, "setaplu": 121, "getaplu": 121, "historytim": 122, "seqdt": 122, "characterist": 122, "kernel": 122, "kernelequ": 122, "responsescal": 122, "setkernelequ": 122, "getkernelequ": 122, "setkernelwidth": 122, "getkernelwidth": 122, "setseqdt": 122, "getseqdt": 122, "sethistorytim": 122, "gethistorytim": 122, "setresponsescal": 122, "getresponsescal": 122, "getseqactiv": 122, "getweightscalevec": 122, "getkernel": 122, "gethistori": 122, "recognit": 122, "kernelwidth": 122, "seq": 122, "seqactiv": 122, "weightscalevec": 122, "newelm": 123, "isglob": 123, "handlecopi": 123, "newnam": 123, "ncopi": 123, "toglob": [123, 154], "copyextmsg": [123, 154], "orig": 123, "newpar": 123, "expand": 123, "handlemov": 123, "addmsg": 123, "msgtype": [123, 154], "seti2": 125, "geti2": 125, "i2": 125, "getnumrow": 126, "getnumcolumn": 126, "getnumentri": 126, "setprob": 126, "getprob": 126, "setrandomconnect": 126, "setentri": 126, "column": [126, 135, 143, 144, 156], "unsetentri": 126, "transpos": 126, "spars": [126, 135, 154], "pairfil": 126, "itautomag": 126, "fieldindic": 126, "tripletfil": 126, "triplet": 126, "numrow": 126, "numcolumn": 126, "setmolwt": 127, "getmolwt": 127, "handlemolwtrequest": 127, "molwtout": 127, "detect": 128, "edg": 128, "setthreshold": [128, 129, 141, 142], "getthreshold": [128, 129, 141, 142], "setedgetrigg": 128, "getedgetrigg": 128, "edgetrigg": 128, "abs_refracttim": 128, "problemat": 128, "abs_refract": 128, "resolv": 128, "generatesan": 128, "idl": 128, "predigest": [128, 129], "addspik": [128, 129, 140], "regist": [128, 129, 156], "till": [128, 129, 134, 156], "wrapper": 130, "setshaftlength": 130, "getshaftlength": 130, "setshaftdiamet": 130, "getshaftdiamet": 130, "setheadlength": 130, "getheadlength": 130, "setheaddiamet": 130, "getheaddiamet": 130, "setpsdarea": 130, "getpsdarea": 130, "setheadvolum": 130, "getheadvolum": 130, "settotallength": 130, "gettotallength": 130, "treat": 130, "cube": 130, "peg": 130, "fo": 130, "spinelist": 131, "1u": 131, "getsdev": 132, "getsum": 132, "getnum": 132, "getwmean": 132, "getwsdev": 132, "getwsum": 132, "getwnum": 132, "setwindowlength": 132, "getwindowlength": 132, "sdev": 132, "wmean": 132, "wsdev": 132, "wsum": 132, "wnum": 132, "windowlength": 132, "multidimension": 133, "finder": [133, 159], "closest": 133, "eigenvalu": [133, 156], "classifi": 133, "unstabl": [133, 156], "randominit": [133, 156], "randomli": 133, "constraint": 133, "narrow": 133, "solutionstatu": [133, 156], "succe": [133, 156], "ask": [133, 157], "getbadstoichiometri": 133, "getnit": 133, "getstatu": [133, 135], "setmaxit": 133, "getmaxit": 133, "setconvergencecriterion": 133, "getconvergencecriterion": 133, "getnumvarpool": [133, 135], "getrank": 133, "getstatetyp": 133, "getnnegeigenvalu": 133, "getnposeigenvalu": 133, "getsolutionstatu": 133, "settot": 133, "gettot": 133, "geteigenvalu": 133, "setupmatrix": 133, "matric": 133, "resettl": 133, "showmatric": [133, 156], "nr": 133, "massconserv": 133, "scanstat": 133, "badstoichiometri": 133, "successfulli": [133, 135], "niter": [133, 156], "maxit": 133, "convergencecriterion": [133, 156], "numvarpool": [133, 135], "rank": 133, "statetyp": [133, 156], "saddl": [133, 156], "nnegeigenvalu": [133, 156], "nposeigenvalu": [133, 156], "conserv": [133, 156], "law": [133, 156], "ofthi": 133, "whenth": 133, "affectedmolecul": 133, "setstarttim": 134, "getstarttim": 134, "setstoptim": 134, "getstoptim": 134, "setlooptim": 134, "getlooptim": 134, "setsteps": 134, "getsteps": 134, "setstepposit": 134, "getstepposit": 134, "setdoloop": 134, "getdoloop": 134, "tabul": 134, "starttim": 134, "lookupvalu": [134, 148], "zeroth": 134, "stoptim": 134, "looptim": 134, "paus": 134, "stepsiz": 134, "isless": 134, "timea": 134, "stepposit": 134, "toth": 134, "doloop": 134, "reachedstoptim": 134, "setksolv": 135, "getksolv": 135, "setdsolv": 135, "getdsolv": 135, "getnumbufpool": 135, "getnumallpool": 135, "getnumproxypool": 135, "getpoolidmap": 135, "getnumr": 135, "getmatrixentri": 135, "getcolumnindex": 135, "getrowstart": 135, "getproxypool": 135, "unzombifi": 135, "nativ": 135, "buildxreac": 135, "scan": 135, "orchestr": 135, "filterxreac": 135, "filter": [135, 146], "stoichthi": 135, "absent": 135, "scalebufsandr": 135, "volratio": 135, "unset": 135, "numbufpool": 135, "numallpool": 135, "numproxypool": 135, "poolidmap": 135, "poolindex": 135, "pooloffset": 135, "numrat": 135, "matrixentri": 135, "theircolumn": 135, "rowinformatino": 135, "columnindex": 135, "rowstart": 135, "neither": 135, "nor": 135, "proxypool": 135, "stoichid": 135, "setoutfil": [136, 141, 142], "getoutfil": [136, 141, 142], "setformat": [136, 141, 142], "getformat": [136, 141, 142], "addtabl": 136, "removet": 136, "getnumt": 136, "outfil": [136, 141, 142], "__moose_tables__": 136, "dat": 136, "numtabl": 136, "symmetr": [137, 156], "font": 137, "courier": 137, "rendit": 137, "_": 137, "analysi": 137, "techniqu": 137, "star": 137, "sibl": 137, "clariti": 137, "evenli": 137, "contribut": 137, "proximalonli": 137, "protrud": 137, "neglig": 137, "offspr": 137, "raxialsym": 137, "sumraxi": 137, "raxialspher": 137, "raxialcylind": 137, "proximalout": 137, "sumraxialout": 137, "distalout": 137, "cylinderout": 137, "nearli": 137, "settau1": 138, "gettau1": 138, "settau2": 138, "gettau2": 138, "setnormalizeweight": 138, "getnormalizeweight": 138, "sometim": 138, "tau1": 138, "tau2": 138, "normalizeweight": 138, "overal": 138, "forhandl": 139, "stuff": 139, "activationout": 139, "numsynaps": 139, "duplic": 139, "num_synaps": 139, "ring": 140, "setweight": 140, "getweight": 140, "latter": [141, 142], "often": [141, 142, 156], "Their": [141, 142], "setusestream": [141, 142], "getusestream": [141, 142], "usestream": [141, 142], "setvector": 143, "getvector": 143, "lineartransform": 143, "xplot": 143, "plotnam": 143, "plainplot": 143, "ascii": 143, "notat": 143, "loadcsv": 143, "loadxplot": 143, "plotnamewhen": 143, "loadxplotrang": 143, "startindex": 143, "endindexus": 143, "endindex": 143, "comparexplot": 143, "comparison": [143, 154], "comparison_operationoper": 143, "rmsd": 143, "rmsdiffer": 143, "rmsr": 143, "rmsratio": 143, "comparevec": 143, "clearvec": 143, "1sinc": 143, "thesmallest": 143, "eventout": 144, "unform": 145, "currentout": 146, "set_sens": 146, "outputout": 146, "set_command": 146, "withintegr": 146, "getcurr": 146, "setti": 146, "getti": 146, "settd": 146, "gettd": 146, "negligibli": 146, "unus": 146, "lowpass": 146, "abrupt": 146, "interpol2d": [148, 153], "suppli": 148, "getlookupvalu": 148, "getlookupindex": 148, "lookupindex": 148, "split": 152, "loadmodel": [152, 156, 157], "getcw": 152, "setcw": 152, "getfielddict": 152, "getfield": 152, "hierarchi": 152, "__builtin__": 153, "melement": [153, 154], "annot": 153, "zombiecaconc": 153, "hhchannelbas": 153, "zombiehchannel": 153, "cinfo": 153, "difbufferbas": 153, "difshellbas": 153, "zombieenz": 153, "zombiemmenz": 153, "zombiefunct": 153, "hhgate2d": 153, "onetoonedataindexmsg": 153, "mstring": 153, "zombiebufpool": 153, "randgener": 153, "binomialrng": 153, "exponentialrng": 153, "normalrng": 153, "poissonrng": 153, "uniformrng": 153, "zombiereac": 153, "steadyst": [153, 156], "stdpsynaps": 153, "tablebas": 153, "inputvari": 153, "vectort": 153, "moose_builtin": 153, "superclass": 154, "finfotyp": 154, "tupl": 154, "fieldelementfinfo": 154, "obj": 154, "valueerror": 154, "fn": 154, "autoschedul": 154, "clocktick": 154, "matter": 154, "notabl": 154, "neighbour": 154, "commun": 154, "compartment_1": 154, "TO": 154, "THE": 154, "undefin": 154, "simult": 154, "modelpath": [154, 156], "solverclass": 154, "srcfield": 154, "destobj": 154, "src_field": 154, "mainli": 154, "acquir": 154, "onetoal": 154, "alltoon": 154, "onetoon": 154, "msgmanag": 154, "pwe": 154, "ce": 154, "dict": 154, "unspecifi": 154, "fieldtyp": 154, "seedvalu": 154, "rese": 154, "rng": 154, "initializecd": 154, "devic": 154, "mt19937": 154, "recurs": [154, 156], "descend": 154, "mymodel": 154, "unload": 154, "equilibrium": 156, "chemicalbist": [156, 159], "bold": [156, 157], "themselv": [156, 157], "aforment": [156, 157], "ee": [156, 157], "gssl": [156, 157], "disadvantag": [156, 157], "simplebi": 156, "complementari": 156, "perturb": [156, 157], "90": 156, "flip": [156, 157], "99": 156, "exactli": 156, "spontan": 156, "124": 156, "129": 156, "fewer": 156, "rerun": 156, "Will": 156, "copyright": [156, 157], "2013": 156, "ncb": [156, 157], "lesser": [156, 157], "licens": [156, 157], "lib": [156, 157], "doloadmodel": 156, "simmanag": 156, "autocatalyt": 156, "makemodel": [156, 157], "enz1": 156, "enz2": 156, "cplx1": 156, "cplx2": 156, "outputa": 156, "conca": [156, 157], "outputb": 156, "concb": 156, "displayplot": [156, 157], "arang": [156, 157], "standalon": [156, 157], "__name__": [156, 157], "__main__": [156, 157], "scalevolum": 156, "noisier": 156, "stocahst": 156, "algorithim": 156, "ever": 156, "11111": 156, "60221": 156, "415": 156, "6022": 156, "1415": 156, "602": 156, "21415": 156, "180": 156, "664245": 156, "60": [156, 157], "221415": 156, "0664245": 156, "0221415": 156, "strongbi": 156, "parametr": 156, "robust": 156, "topologi": 156, "inhibit": [156, 157], "210": 156, "moder": 156, "stabli": 156, "320": 156, "430": 156, "domin": 156, "mpimg": [156, 157], "mfile": [156, 157], "m1719": 156, "modelid": [156, 157], "equil": 156, "img": [156, 157], "imread": [156, 157], "png": [156, 157], "add_subplot": [156, 157], "211": [156, 157], "imgplot": [156, 157], "imshow": [156, 157], "ax": [156, 157], "212": [156, 157], "mapkfb": 156, "ram": 156, "iyengar": 156, "scienc": 156, "2002": 156, "cascad": [156, 157], "pla2": 156, "pkc": 156, "pdgf": 156, "induc": 156, "2900": 156, "unphysiolog": 156, "scriptdir": 156, "dirnam": 156, "realpath": 156, "__file__": 156, "join": 156, "acc35": 156, "2000": [156, 157], "pdgfr": 156, "0001": 156, "propagationbi": 156, "mix": 156, "dispers": 156, "pseudo": 156, "rapidli": 156, "battl": 156, "asymmetri": 156, "gradual": 156, "yield": 156, "dimentionsion": 156, "crossov": 156, "win": 156, "comptlength": 156, "diffdt": 156, "chemdt": 156, "cc": 156, "assert": [156, 157], "displayinterv": [156, 157], "propbi": 156, "set_ylim": [156, 157], "po": [156, 157], "line1": [156, 157], "line2": [156, 157], "line3": 156, "timelabel": [156, 157], "0009": 156, "canva": [156, 157], "draw": [156, 157], "set_ydata": [156, 157], "set_text": [156, 157], "swap": 156, "temp": 156, "newruntim": 156, "hit": [156, 157], "stdin": 156, "findsteadyst": 156, "printout": 156, "cap": 156, "od": 156, "manual": 156, "enforc": 156, "comment": 156, "__future__": 156, "print_funct": 156, "diagnost": 156, "unnecessari": 156, "hard": 156, "attractor": 156, "basin": 156, "attract": 156, "flat": 156, "singleton": 156, "111": 156, "outputc": 156, "concc": 156, "outputcplx1": 156, "conccplx1": 156, "outputcplx2": 156, "conccplx2": 156, "022e23": 156, "subject": 156, "2f": 156, "negeig": 156, "poseig": 156, "92": 156, "00": 156, "75": 156, "41": 156, "43": 156, "doserespons": 156, "against": 156, "regim": 156, "unfortun": 156, "sahil": 156, "moza": 156, "june": 156, "setupsteadyst": 156, "simdt": 156, "plotdt": 156, "parsemodelnam": 156, "pos1": 156, "rfind": 156, "pos2": 156, "systemat": 156, "repons": 156, "failedsteadyst": 156, "isnan": 156, "factorexpon": 156, "ten": 156, "factorbegin": 156, "factorend": 156, "factorsteps": 156, "factorscal": 156, "19085": 156, "modelnam": 156, "outputdir": 156, "dosepath": 156, "dabx": 156, "iterinit": 156, "solutionvector": 156, "factorarr": 156, "3f": 156, "tkcat": 156, "solstatu": 156, "joint": 156, "argsort": 156, "fig0": 156, "semilogx": 156, "marker": 156, "suptitl": 156, "loc": 156, "savefig": 156, "_doserespons": 156, "010": 156, "013": 156, "016": 156, "006": 156, "020": 156, "007": 156, "009": 156, "032": 156, "011": 156, "040": 156, "014": 156, "050": 156, "018": 156, "063": 156, "079": 156, "029": 156, "036": 156, "126": 156, "045": 156, "158": 156, "057": 156, "072": 156, "251": 156, "091": 156, "316": 156, "114": 156, "398": 156, "144": 156, "501": 156, "181": 156, "631": 156, "228": 156, "794": 156, "287": 156, "000": 156, "361": 156, "259": 156, "454": 156, "585": 156, "572": 156, "995": 156, "720": 156, "512": 156, "907": 156, "162": 156, "142": 156, "981": 156, "437": 156, "012": 156, "809": 156, "310": 156, "278": 156, "943": 156, "868": 156, "610": 156, "589": 156, "545": 156, "849": 156, "722": 156, "953": 156, "203": 156, "119": 156, "068": 156, "623": 156, "416": 156, "39": 156, "811": 156, "372": 156, "093": 156, "63": 156, "096": 156, "778": 156, "79": 156, "433": 156, "676": 156, "36": 156, "101": 156, "chemicaloscil": [157, 159], "slowfbosc": 157, "bori": 157, "kholodenko": 157, "eur": 157, "267": 157, "1583": 157, "mapk": [157, 159], "whem": 157, "trace": 157, "upstream": 157, "earli": 157, "mediat": 157, "4000": 157, "mapkkk": 157, "behold": 157, "ras_mapkkkk": 157, "ras_dash_mkkkk": 157, "kholodenko_tut": 157, "mkkk": 157, "mkk": 157, "turingonedim": 157, "motorr": 157, "dt4": 157, "dt5": 157, "e3": 157, "dsolver": 157, "turingpatterntut": 157, "raw_input": 157, "relaxationosc": 157, "tend": 157, "biophi": 157, "traffic": 157, "exo": 157, "osc_cspac": 157, "relaxosc_tut": 157, "elowitz": 157, "liebler": 157, "architectur": 157, "tetr": 157, "lac": 157, "lcl": 157, "gene": 157, "repress": 157, "eachoth": 157, "circl": 157, "symbol": 157, "inhibitor": 157, "inhib": 157, "tetr_gen": 157, "inhib_reac": 157, "tetr_degrad": 157, "lac_gen": 157, "hopelessli": 157, "unreli": 157, "6000": 157, "repressillatorosc": 157, "nelson": 158, "ran": 158, "water": 158, "jet": 158, "propuls": 158, "alan": 158, "andrew": 158, "john": 158, "eccl": 158, "nobel": 158, "prize": 158, "physiologi": 158, "medicin": 158, "pioneer": 158, "hodgin": 158, "qualit": 158, "affix": 158, "electrod": 158, "travel": 158, "pave": 158, "road": 158, "biologi": 158, "hodglin": 158, "squid_demo": 158, "inbuilt": 158, "highlight": 158, "phenomena": 159, "research": 159, "materi": 159, "topic": 159, "propog": 159, "dose": 159, "pattern": 159, "relax": 159, "repressil": 159}, "objects": {"": [[39, 0, 1, "", "AdExIF"], [40, 0, 1, "", "AdThreshIF"], [41, 0, 1, "", "Adaptor"], [42, 0, 1, "", "Annotator"], [43, 0, 1, "", "Arith"], [44, 0, 1, "", "BinomialRng"], [45, 0, 1, "", "CaConc"], [46, 0, 1, "", "CaConcBase"], [47, 0, 1, "", "ChanBase"], [48, 0, 1, "", "ChemCompt"], [49, 0, 1, "", "Cinfo"], [50, 0, 1, "", "Clock"], [51, 0, 1, "", "Compartment"], [52, 0, 1, "", "CompartmentBase"], [53, 0, 1, "", "CplxEnzBase"], [54, 0, 1, "", "CubeMesh"], [55, 0, 1, "", "CylMesh"], [56, 0, 1, "", "DiagonalMsg"], [57, 0, 1, "", "DifShell"], [58, 0, 1, "", "DiffAmp"], [59, 0, 1, "", "Dsolve"], [60, 0, 1, "", "Enz"], [61, 0, 1, "", "EnzBase"], [62, 0, 1, "", "ExIF"], [63, 0, 1, "", "ExponentialRng"], [64, 0, 1, "", "Finfo"], [65, 0, 1, "", "Func"], [66, 0, 1, "", "Function"], [67, 0, 1, "", "GammaRng"], [68, 0, 1, "", "GapJunction"], [69, 0, 1, "", "GraupnerBrunel2012CaPlasticitySynHandler"], [70, 0, 1, "", "Group"], [71, 0, 1, "", "Gsolve"], [72, 0, 1, "", "HDF5DataWriter"], [73, 0, 1, "", "HDF5WriterBase"], [74, 0, 1, "", "HHChannel"], [75, 0, 1, "", "HHChannel2D"], [76, 0, 1, "", "HHChannelBase"], [77, 0, 1, "", "HHGate"], [78, 0, 1, "", "HHGate2D"], [79, 0, 1, "", "HSolve"], [80, 0, 1, "", "InputVariable"], [81, 0, 1, "", "IntFire"], [82, 0, 1, "", "IntFireBase"], [83, 0, 1, "", "Interpol"], [84, 0, 1, "", "Interpol2D"], [85, 0, 1, "", "IzhIF"], [86, 0, 1, "", "IzhikevichNrn"], [87, 0, 1, "", "Ksolve"], [88, 0, 1, "", "LIF"], [89, 0, 1, "", "Leakage"], [90, 0, 1, "", "MarkovChannel"], [91, 0, 1, "", "MarkovGslSolver"], [92, 0, 1, "", "MarkovRateTable"], [93, 0, 1, "", "MarkovSolver"], [94, 0, 1, "", "MarkovSolverBase"], [96, 0, 1, "", "MeshEntry"], [97, 0, 1, "", "MgBlock"], [98, 0, 1, "", "Msg"], [99, 0, 1, "", "Mstring"], [100, 0, 1, "", "NMDAChan"], [101, 0, 1, "", "NSDFWriter"], [102, 0, 1, "", "Nernst"], [103, 0, 1, "", "NeuroMesh"], [104, 0, 1, "", "Neuron"], [105, 0, 1, "", "Neutral"], [106, 0, 1, "", "NormalRng"], [107, 0, 1, "", "OneToAllMsg"], [108, 0, 1, "", "PIDController"], [109, 0, 1, "", "PoissonRng"], [110, 0, 1, "", "Pool"], [111, 0, 1, "", "PoolBase"], [112, 0, 1, "", "PostMaster"], [113, 0, 1, "", "PsdMesh"], [114, 0, 1, "", "PulseGen"], [115, 0, 1, "", "PyRun"], [116, 0, 1, "", "QIF"], [117, 0, 1, "", "RandGenerator"], [118, 0, 1, "", "RandSpike"], [119, 0, 1, "", "ReacBase"], [120, 0, 1, "", "STDPSynHandler"], [121, 0, 1, "", "STDPSynapse"], [122, 0, 1, "", "SeqSynHandler"], [123, 0, 1, "", "Shell"], [124, 0, 1, "", "SimpleSynHandler"], [125, 0, 1, "", "SingleMsg"], [126, 0, 1, "", "SparseMsg"], [127, 0, 1, "", "Species"], [128, 0, 1, "", "SpikeGen"], [129, 0, 1, "", "SpikeStats"], [130, 0, 1, "", "Spine"], [131, 0, 1, "", "SpineMesh"], [132, 0, 1, "", "Stats"], [133, 0, 1, "", "SteadyState"], [134, 0, 1, "", "StimulusTable"], [135, 0, 1, "", "Stoich"], [136, 0, 1, "", "Streamer"], [137, 0, 1, "", "SymCompartment"], [138, 0, 1, "", "SynChan"], [139, 0, 1, "", "SynHandlerBase"], [140, 0, 1, "", "Synapse"], [141, 0, 1, "", "Table"], [142, 0, 1, "", "Table2"], [143, 0, 1, "", "TableBase"], [144, 0, 1, "", "TimeTable"], [145, 0, 1, "", "UniformRng"], [146, 0, 1, "", "VClamp"], [147, 0, 1, "", "Variable"], [148, 0, 1, "", "VectorTable"], [149, 0, 1, "", "ZombieCaConc"], [150, 0, 1, "", "ZombieCompartment"], [151, 0, 1, "", "ZombieFunction"], [155, 0, 1, "", "testSched"]], "AdExIF": [[39, 1, 1, "", "a0"], [39, 1, 1, "", "b0"], [39, 2, 1, "", "getA0"], [39, 2, 1, "", "getB0"], [39, 2, 1, "", "getTauW"], [39, 2, 1, "", "getW"], [39, 2, 1, "", "setA0"], [39, 2, 1, "", "setB0"], [39, 2, 1, "", "setTauW"], [39, 2, 1, "", "setW"], [39, 1, 1, "", "tauW"], [39, 1, 1, "", "w"]], "AdThreshIF": [[40, 1, 1, "", "a0"], [40, 2, 1, "", "getA0"], [40, 2, 1, "", "getTauThresh"], [40, 2, 1, "", "getThreshAdaptive"], [40, 2, 1, "", "getThreshJump"], [40, 2, 1, "", "setA0"], [40, 2, 1, "", "setTauThresh"], [40, 2, 1, "", "setThreshAdaptive"], [40, 2, 1, "", "setThreshJump"], [40, 1, 1, "", "tauThresh"], [40, 1, 1, "", "threshAdaptive"], [40, 1, 1, "", "threshJump"]], "Adaptor": [[41, 2, 1, "", "getInputOffset"], [41, 2, 1, "", "getOutputOffset"], [41, 2, 1, "", "getOutputValue"], [41, 2, 1, "", "getScale"], [41, 2, 1, "", "input"], [41, 1, 1, "", "inputOffset"], [41, 1, 1, "", "output"], [41, 1, 1, "", "outputOffset"], [41, 1, 1, "", "outputValue"], [41, 1, 1, "", "proc"], [41, 2, 1, "", "process"], [41, 2, 1, "", "reinit"], [41, 1, 1, "", "requestOut"], [41, 1, 1, "", "scale"], [41, 2, 1, "", "setInputOffset"], [41, 2, 1, "", "setOutputOffset"], [41, 2, 1, "", "setScale"]], "Annotator": [[42, 1, 1, "", "color"], [42, 1, 1, "", "dirpath"], [42, 2, 1, "", "getColor"], [42, 2, 1, "", "getDirpath"], [42, 2, 1, "", "getIcon"], [42, 2, 1, "", "getModeltype"], [42, 2, 1, "", "getNotes"], [42, 2, 1, "", "getRuntime"], [42, 2, 1, "", "getSolver"], [42, 2, 1, "", "getTextColor"], [42, 2, 1, "", "getX"], [42, 2, 1, "", "getY"], [42, 2, 1, "", "getZ"], [42, 1, 1, "", "icon"], [42, 1, 1, "", "modeltype"], [42, 1, 1, "", "notes"], [42, 1, 1, "", "runtime"], [42, 2, 1, "", "setColor"], [42, 2, 1, "", "setDirpath"], [42, 2, 1, "", "setIcon"], [42, 2, 1, "", "setModeltype"], [42, 2, 1, "", "setNotes"], [42, 2, 1, "", "setRuntime"], [42, 2, 1, "", "setSolver"], [42, 2, 1, "", "setTextColor"], [42, 2, 1, "", "setX"], [42, 2, 1, "", "setY"], [42, 2, 1, "", "setZ"], [42, 1, 1, "", "solver"], [42, 1, 1, "", "textColor"], [42, 1, 1, "", "x"], [42, 1, 1, "", "y"], [42, 1, 1, "", "z"]], "Arith": [[43, 1, 1, "", "anyValue"], [43, 2, 1, "", "arg1"], [43, 1, 1, "", "arg1Value"], [43, 2, 1, "", "arg1x2"], [43, 2, 1, "", "arg2"], [43, 2, 1, "", "arg3"], [43, 1, 1, "", "function"], [43, 2, 1, "", "getAnyValue"], [43, 2, 1, "", "getArg1Value"], [43, 2, 1, "", "getFunction"], [43, 2, 1, "", "getOutputValue"], [43, 1, 1, "", "output"], [43, 1, 1, "", "outputValue"], [43, 1, 1, "", "proc"], [43, 2, 1, "", "process"], [43, 2, 1, "", "reinit"], [43, 2, 1, "", "setAnyValue"], [43, 2, 1, "", "setFunction"], [43, 2, 1, "", "setOutputValue"]], "BinomialRng": [[44, 2, 1, "", "getN"], [44, 2, 1, "", "getP"], [44, 1, 1, "", "n"], [44, 1, 1, "", "p"], [44, 2, 1, "", "setN"], [44, 2, 1, "", "setP"]], "CaConcBase": [[46, 1, 1, "", "B"], [46, 1, 1, "", "Ca"], [46, 1, 1, "", "CaBasal"], [46, 2, 1, "", "basal"], [46, 1, 1, "", "ceiling"], [46, 1, 1, "", "concOut"], [46, 2, 1, "", "current"], [46, 2, 1, "", "currentFraction"], [46, 2, 1, "", "decrease"], [46, 1, 1, "", "diameter"], [46, 1, 1, "", "floor"], [46, 2, 1, "", "getB"], [46, 2, 1, "", "getCa"], [46, 2, 1, "", "getCaBasal"], [46, 2, 1, "", "getCeiling"], [46, 2, 1, "", "getDiameter"], [46, 2, 1, "", "getFloor"], [46, 2, 1, "", "getLength"], [46, 2, 1, "", "getTau"], [46, 2, 1, "", "getThick"], [46, 2, 1, "", "increase"], [46, 1, 1, "", "length"], [46, 1, 1, "", "proc"], [46, 2, 1, "", "process"], [46, 2, 1, "", "reinit"], [46, 2, 1, "", "setB"], [46, 2, 1, "", "setCa"], [46, 2, 1, "", "setCaBasal"], [46, 2, 1, "", "setCeiling"], [46, 2, 1, "", "setDiameter"], [46, 2, 1, "", "setFloor"], [46, 2, 1, "", "setLength"], [46, 2, 1, "", "setTau"], [46, 2, 1, "", "setThick"], [46, 1, 1, "", "tau"], [46, 1, 1, "", "thick"]], "ChanBase": [[47, 1, 1, "", "Ek"], [47, 1, 1, "", "Gbar"], [47, 1, 1, "", "Gk"], [47, 1, 1, "", "Ik"], [47, 1, 1, "", "IkOut"], [47, 2, 1, "id0", "Vm"], [47, 1, 1, "", "channel"], [47, 1, 1, "", "channelOut"], [47, 2, 1, "", "getEk"], [47, 2, 1, "", "getGbar"], [47, 2, 1, "", "getGk"], [47, 2, 1, "", "getIk"], [47, 2, 1, "", "getModulation"], [47, 1, 1, "", "ghk"], [47, 1, 1, "", "modulation"], [47, 1, 1, "", "permeabilityOut"], [47, 1, 1, "", "proc"], [47, 2, 1, "", "process"], [47, 2, 1, "", "reinit"], [47, 2, 1, "", "setEk"], [47, 2, 1, "", "setGbar"], [47, 2, 1, "", "setGk"], [47, 2, 1, "", "setModulation"]], "ChemCompt": [[48, 2, 1, "", "buildDefaultMesh"], [48, 2, 1, "", "getNumDimensions"], [48, 2, 1, "", "getNumMesh"], [48, 2, 1, "", "getOneVoxelVolume"], [48, 2, 1, "", "getStencilIndex"], [48, 2, 1, "", "getStencilRate"], [48, 2, 1, "", "getVolume"], [48, 2, 1, "", "getVoxelMidpoint"], [48, 2, 1, "", "getVoxelVolume"], [48, 1, 1, "", "numDimensions"], [48, 1, 1, "", "oneVoxelVolume"], [48, 2, 1, "", "resetStencil"], [48, 2, 1, "", "setNumMesh"], [48, 2, 1, "", "setOneVoxelVolume"], [48, 2, 1, "", "setVolume"], [48, 2, 1, "", "setVolumeNotRates"], [48, 1, 1, "", "stencilIndex"], [48, 1, 1, "", "stencilRate"], [48, 1, 1, "", "volume"], [48, 1, 1, "", "voxelMidpoint"], [48, 1, 1, "", "voxelVolOut"], [48, 1, 1, "", "voxelVolume"]], "Cinfo": [[49, 1, 1, "", "baseClass"], [49, 1, 1, "", "docs"], [49, 2, 1, "", "getBaseClass"], [49, 2, 1, "", "getDocs"]], "Clock": [[50, 1, 1, "", "baseDt"], [50, 1, 1, "", "clockControl"], [50, 1, 1, "", "currentStep"], [50, 1, 1, "", "currentTime"], [50, 1, 1, "", "defaultTick"], [50, 1, 1, "", "dts"], [50, 1, 1, "", "finished"], [50, 2, 1, "", "getBaseDt"], [50, 2, 1, "", "getCurrentStep"], [50, 2, 1, "", "getCurrentTime"], [50, 2, 1, "", "getDefaultTick"], [50, 2, 1, "", "getDts"], [50, 2, 1, "", "getIsRunning"], [50, 2, 1, "", "getNsteps"], [50, 2, 1, "", "getNumTicks"], [50, 2, 1, "", "getRunTime"], [50, 2, 1, "", "getStride"], [50, 2, 1, "", "getTickDt"], [50, 2, 1, "", "getTickStep"], [50, 1, 1, "", "isRunning"], [50, 1, 1, "", "nsteps"], [50, 1, 1, "", "numTicks"], [50, 1, 1, "", "proc0"], [50, 1, 1, "", "proc1"], [50, 1, 1, "", "proc10"], [50, 1, 1, "", "proc11"], [50, 1, 1, "", "proc12"], [50, 1, 1, "", "proc13"], [50, 1, 1, "", "proc14"], [50, 1, 1, "", "proc15"], [50, 1, 1, "", "proc16"], [50, 1, 1, "", "proc17"], [50, 1, 1, "", "proc18"], [50, 1, 1, "", "proc19"], [50, 1, 1, "", "proc2"], [50, 1, 1, "", "proc20"], [50, 1, 1, "", "proc21"], [50, 1, 1, "", "proc22"], [50, 1, 1, "", "proc23"], [50, 1, 1, "", "proc24"], [50, 1, 1, "", "proc25"], [50, 1, 1, "", "proc26"], [50, 1, 1, "", "proc27"], [50, 1, 1, "", "proc28"], [50, 1, 1, "", "proc29"], [50, 1, 1, "", "proc3"], [50, 1, 1, "", "proc30"], [50, 1, 1, "", "proc31"], [50, 1, 1, "", "proc4"], [50, 1, 1, "", "proc5"], [50, 1, 1, "", "proc6"], [50, 1, 1, "", "proc7"], [50, 1, 1, "", "proc8"], [50, 1, 1, "", "proc9"], [50, 1, 1, "", "process0"], [50, 1, 1, "", "process1"], [50, 1, 1, "", "process10"], [50, 1, 1, "", "process11"], [50, 1, 1, "", "process12"], [50, 1, 1, "", "process13"], [50, 1, 1, "", "process14"], [50, 1, 1, "", "process15"], [50, 1, 1, "", "process16"], [50, 1, 1, "", "process17"], [50, 1, 1, "", "process18"], [50, 1, 1, "", "process19"], [50, 1, 1, "", "process2"], [50, 1, 1, "", "process20"], [50, 1, 1, "", "process21"], [50, 1, 1, "", "process22"], [50, 1, 1, "", "process23"], [50, 1, 1, "", "process24"], [50, 1, 1, "", "process25"], [50, 1, 1, "", "process26"], [50, 1, 1, "", "process27"], [50, 1, 1, "", "process28"], [50, 1, 1, "", "process29"], [50, 1, 1, "", "process3"], [50, 1, 1, "", "process30"], [50, 1, 1, "", "process31"], [50, 1, 1, "", "process4"], [50, 1, 1, "", "process5"], [50, 1, 1, "", "process6"], [50, 1, 1, "", "process7"], [50, 1, 1, "", "process8"], [50, 1, 1, "", "process9"], [50, 2, 1, "", "reinit"], [50, 1, 1, "", "reinit0"], [50, 1, 1, "", "reinit1"], [50, 1, 1, "", "reinit10"], [50, 1, 1, "", "reinit11"], [50, 1, 1, "", "reinit12"], [50, 1, 1, "", "reinit13"], [50, 1, 1, "", "reinit14"], [50, 1, 1, "", "reinit15"], [50, 1, 1, "", "reinit16"], [50, 1, 1, "", "reinit17"], [50, 1, 1, "", "reinit18"], [50, 1, 1, "", "reinit19"], [50, 1, 1, "", "reinit2"], [50, 1, 1, "", "reinit20"], [50, 1, 1, "", "reinit21"], [50, 1, 1, "", "reinit22"], [50, 1, 1, "", "reinit23"], [50, 1, 1, "", "reinit24"], [50, 1, 1, "", "reinit25"], [50, 1, 1, "", "reinit26"], [50, 1, 1, "", "reinit27"], [50, 1, 1, "", "reinit28"], [50, 1, 1, "", "reinit29"], [50, 1, 1, "", "reinit3"], [50, 1, 1, "", "reinit30"], [50, 1, 1, "", "reinit31"], [50, 1, 1, "", "reinit4"], [50, 1, 1, "", "reinit5"], [50, 1, 1, "", "reinit6"], [50, 1, 1, "", "reinit7"], [50, 1, 1, "", "reinit8"], [50, 1, 1, "", "reinit9"], [50, 1, 1, "", "runTime"], [50, 2, 1, "", "setBaseDt"], [50, 2, 1, "", "setTickDt"], [50, 2, 1, "", "setTickStep"], [50, 2, 1, "", "start"], [50, 2, 1, "", "step"], [50, 2, 1, "", "stop"], [50, 1, 1, "", "stride"], [50, 1, 1, "", "tickDt"], [50, 1, 1, "", "tickStep"]], "CompartmentBase": [[52, 1, 1, "", "Cm"], [52, 1, 1, "", "Em"], [52, 1, 1, "", "Im"], [52, 1, 1, "", "Ra"], [52, 1, 1, "", "Rm"], [52, 1, 1, "", "Vm"], [52, 1, 1, "", "VmOut"], [52, 1, 1, "", "axial"], [52, 1, 1, "", "axialOut"], [52, 2, 1, "", "cable"], [52, 1, 1, "", "channel"], [52, 1, 1, "", "diameter"], [52, 2, 1, "", "displace"], [52, 2, 1, "", "getCm"], [52, 2, 1, "", "getDiameter"], [52, 2, 1, "", "getEm"], [52, 2, 1, "", "getIm"], [52, 2, 1, "", "getInitVm"], [52, 2, 1, "", "getInject"], [52, 2, 1, "", "getLength"], [52, 2, 1, "", "getRa"], [52, 2, 1, "", "getRm"], [52, 2, 1, "", "getVm"], [52, 2, 1, "", "getX"], [52, 2, 1, "", "getX0"], [52, 2, 1, "", "getY"], [52, 2, 1, "", "getY0"], [52, 2, 1, "", "getZ"], [52, 2, 1, "", "getZ0"], [52, 2, 1, "", "handleAxial"], [52, 2, 1, "", "handleChannel"], [52, 2, 1, "", "handleRaxial"], [52, 1, 1, "", "init"], [52, 2, 1, "", "initProc"], [52, 2, 1, "", "initReinit"], [52, 1, 1, "", "initVm"], [52, 1, 1, "", "inject"], [52, 2, 1, "id0", "injectMsg"], [52, 1, 1, "", "length"], [52, 1, 1, "", "proc"], [52, 2, 1, "", "process"], [52, 2, 1, "", "randInject"], [52, 1, 1, "", "raxial"], [52, 1, 1, "", "raxialOut"], [52, 2, 1, "", "reinit"], [52, 2, 1, "", "setCm"], [52, 2, 1, "", "setDiameter"], [52, 2, 1, "", "setEm"], [52, 2, 1, "", "setGeomAndElec"], [52, 2, 1, "", "setInitVm"], [52, 2, 1, "", "setInject"], [52, 2, 1, "", "setLength"], [52, 2, 1, "", "setRa"], [52, 2, 1, "", "setRm"], [52, 2, 1, "", "setVm"], [52, 2, 1, "", "setX"], [52, 2, 1, "", "setX0"], [52, 2, 1, "", "setY"], [52, 2, 1, "", "setY0"], [52, 2, 1, "", "setZ"], [52, 2, 1, "", "setZ0"], [52, 1, 1, "", "x"], [52, 1, 1, "", "x0"], [52, 1, 1, "", "y"], [52, 1, 1, "", "y0"], [52, 1, 1, "", "z"], [52, 1, 1, "", "z0"]], "CplxEnzBase": [[53, 1, 1, "", "concK1"], [53, 1, 1, "", "cplx"], [53, 2, 1, "", "cplxDest"], [53, 1, 1, "", "cplxOut"], [53, 1, 1, "", "enz"], [53, 2, 1, "", "enzDest"], [53, 1, 1, "", "enzOut"], [53, 2, 1, "", "getConcK1"], [53, 2, 1, "", "getK1"], [53, 2, 1, "", "getK2"], [53, 2, 1, "", "getK3"], [53, 2, 1, "", "getRatio"], [53, 1, 1, "", "k1"], [53, 1, 1, "", "k2"], [53, 1, 1, "", "k3"], [53, 1, 1, "", "ratio"], [53, 2, 1, "", "setConcK1"], [53, 2, 1, "", "setK1"], [53, 2, 1, "", "setK2"], [53, 2, 1, "", "setK3"], [53, 2, 1, "", "setRatio"]], "CubeMesh": [[54, 1, 1, "", "alwaysDiffuse"], [54, 1, 1, "", "coords"], [54, 1, 1, "", "dx"], [54, 1, 1, "", "dy"], [54, 1, 1, "", "dz"], [54, 2, 1, "", "getAlwaysDiffuse"], [54, 2, 1, "", "getCoords"], [54, 2, 1, "", "getDx"], [54, 2, 1, "", "getDy"], [54, 2, 1, "", "getDz"], [54, 2, 1, "", "getIsToroid"], [54, 2, 1, "", "getMeshToSpace"], [54, 2, 1, "", "getNx"], [54, 2, 1, "", "getNy"], [54, 2, 1, "", "getNz"], [54, 2, 1, "", "getPreserveNumEntries"], [54, 2, 1, "", "getSpaceToMesh"], [54, 2, 1, "", "getSurface"], [54, 2, 1, "", "getX0"], [54, 2, 1, "", "getX1"], [54, 2, 1, "", "getY0"], [54, 2, 1, "", "getY1"], [54, 2, 1, "", "getZ0"], [54, 2, 1, "", "getZ1"], [54, 1, 1, "", "isToroid"], [54, 1, 1, "", "meshToSpace"], [54, 1, 1, "", "nx"], [54, 1, 1, "", "ny"], [54, 1, 1, "", "nz"], [54, 1, 1, "", "preserveNumEntries"], [54, 2, 1, "", "setAlwaysDiffuse"], [54, 2, 1, "", "setCoords"], [54, 2, 1, "", "setDx"], [54, 2, 1, "", "setDy"], [54, 2, 1, "", "setDz"], [54, 2, 1, "", "setIsToroid"], [54, 2, 1, "", "setMeshToSpace"], [54, 2, 1, "", "setNx"], [54, 2, 1, "", "setNy"], [54, 2, 1, "", "setNz"], [54, 2, 1, "", "setPreserveNumEntries"], [54, 2, 1, "", "setSpaceToMesh"], [54, 2, 1, "", "setSurface"], [54, 2, 1, "", "setX0"], [54, 2, 1, "", "setX1"], [54, 2, 1, "", "setY0"], [54, 2, 1, "", "setY1"], [54, 2, 1, "", "setZ0"], [54, 2, 1, "", "setZ1"], [54, 1, 1, "", "spaceToMesh"], [54, 1, 1, "", "surface"], [54, 1, 1, "", "x0"], [54, 1, 1, "", "x1"], [54, 1, 1, "", "y0"], [54, 1, 1, "", "y1"], [54, 1, 1, "", "z0"], [54, 1, 1, "", "z1"]], "CylMesh": [[55, 1, 1, "", "coords"], [55, 1, 1, "", "diffLength"], [55, 2, 1, "", "getCoords"], [55, 2, 1, "", "getDiffLength"], [55, 2, 1, "", "getNumDiffCompts"], [55, 2, 1, "", "getR0"], [55, 2, 1, "", "getR1"], [55, 2, 1, "", "getTotLength"], [55, 2, 1, "", "getX0"], [55, 2, 1, "", "getX1"], [55, 2, 1, "", "getY0"], [55, 2, 1, "", "getY1"], [55, 2, 1, "", "getZ0"], [55, 2, 1, "", "getZ1"], [55, 1, 1, "", "numDiffCompts"], [55, 1, 1, "", "r0"], [55, 1, 1, "", "r1"], [55, 2, 1, "", "setCoords"], [55, 2, 1, "", "setDiffLength"], [55, 2, 1, "", "setR0"], [55, 2, 1, "", "setR1"], [55, 2, 1, "", "setX0"], [55, 2, 1, "", "setX1"], [55, 2, 1, "", "setY0"], [55, 2, 1, "", "setY1"], [55, 2, 1, "", "setZ0"], [55, 2, 1, "", "setZ1"], [55, 1, 1, "", "totLength"], [55, 1, 1, "", "x0"], [55, 1, 1, "", "x1"], [55, 1, 1, "", "y0"], [55, 1, 1, "", "y1"], [55, 1, 1, "", "z0"], [55, 1, 1, "", "z1"]], "DiagonalMsg": [[56, 2, 1, "", "getStride"], [56, 2, 1, "", "setStride"], [56, 1, 1, "", "stride"]], "DifShell": [[57, 1, 1, "", "C"], [57, 1, 1, "", "Ceq"], [57, 1, 1, "", "D"], [57, 1, 1, "", "buffer"], [57, 1, 1, "", "concentrationOut"], [57, 1, 1, "", "diameter"], [57, 2, 1, "", "eqTauPump"], [57, 2, 1, "", "fInflux"], [57, 2, 1, "", "fOutflux"], [57, 2, 1, "", "fluxFromIn"], [57, 2, 1, "", "fluxFromOut"], [57, 2, 1, "", "getC"], [57, 2, 1, "", "getCeq"], [57, 2, 1, "", "getD"], [57, 2, 1, "", "getDiameter"], [57, 2, 1, "", "getInnerArea"], [57, 2, 1, "", "getLeak"], [57, 2, 1, "", "getLength"], [57, 2, 1, "", "getOuterArea"], [57, 2, 1, "", "getShapeMode"], [57, 2, 1, "", "getThickness"], [57, 2, 1, "", "getValence"], [57, 2, 1, "", "getVolume"], [57, 2, 1, "", "hillPump"], [57, 2, 1, "", "influx"], [57, 1, 1, "", "innerArea"], [57, 1, 1, "", "innerDif"], [57, 1, 1, "", "innerDifSourceOut"], [57, 1, 1, "", "leak"], [57, 1, 1, "", "length"], [57, 2, 1, "", "mmPump"], [57, 1, 1, "", "outerArea"], [57, 1, 1, "", "outerDif"], [57, 1, 1, "", "outerDifSourceOut"], [57, 2, 1, "", "outflux"], [57, 2, 1, "id0", "process"], [57, 2, 1, "", "reaction"], [57, 2, 1, "id1", "reinit"], [57, 2, 1, "", "setCeq"], [57, 2, 1, "", "setD"], [57, 2, 1, "", "setDiameter"], [57, 2, 1, "", "setInnerArea"], [57, 2, 1, "", "setLeak"], [57, 2, 1, "", "setLength"], [57, 2, 1, "", "setOuterArea"], [57, 2, 1, "", "setShapeMode"], [57, 2, 1, "", "setThickness"], [57, 2, 1, "", "setValence"], [57, 2, 1, "", "setVolume"], [57, 1, 1, "", "shapeMode"], [57, 2, 1, "", "storeInflux"], [57, 2, 1, "", "storeOutflux"], [57, 2, 1, "", "tauPump"], [57, 1, 1, "", "thickness"], [57, 1, 1, "", "valence"], [57, 1, 1, "", "volume"]], "DiffAmp": [[58, 1, 1, "", "gain"], [58, 2, 1, "", "gainIn"], [58, 2, 1, "", "getGain"], [58, 2, 1, "", "getOutputValue"], [58, 2, 1, "", "getSaturation"], [58, 2, 1, "", "minusIn"], [58, 1, 1, "", "output"], [58, 1, 1, "", "outputValue"], [58, 2, 1, "", "plusIn"], [58, 1, 1, "", "proc"], [58, 2, 1, "", "process"], [58, 2, 1, "", "reinit"], [58, 1, 1, "", "saturation"], [58, 2, 1, "", "setGain"], [58, 2, 1, "", "setSaturation"]], "Dsolve": [[59, 2, 1, "", "buildMeshJunctions"], [59, 2, 1, "", "buildNeuroMeshJunctions"], [59, 1, 1, "", "compartment"], [59, 1, 1, "", "diffScale"], [59, 1, 1, "", "diffVol1"], [59, 1, 1, "", "diffVol2"], [59, 2, 1, "", "getCompartment"], [59, 2, 1, "", "getDiffScale"], [59, 2, 1, "", "getDiffVol1"], [59, 2, 1, "", "getDiffVol2"], [59, 2, 1, "", "getNVec"], [59, 2, 1, "", "getNumAllVoxels"], [59, 2, 1, "", "getNumPools"], [59, 2, 1, "", "getNumVoxels"], [59, 2, 1, "", "getPath"], [59, 2, 1, "", "getStoich"], [59, 1, 1, "", "nVec"], [59, 1, 1, "", "numAllVoxels"], [59, 1, 1, "", "numPools"], [59, 1, 1, "", "numVoxels"], [59, 1, 1, "", "path"], [59, 1, 1, "", "proc"], [59, 2, 1, "", "process"], [59, 2, 1, "", "reinit"], [59, 2, 1, "", "setCompartment"], [59, 2, 1, "", "setDiffScale"], [59, 2, 1, "", "setDiffVol1"], [59, 2, 1, "", "setDiffVol2"], [59, 2, 1, "", "setNVec"], [59, 2, 1, "", "setNumPools"], [59, 2, 1, "", "setPath"], [59, 2, 1, "", "setStoich"], [59, 1, 1, "", "stoich"]], "Enz": [[60, 2, 1, "", "setKmK1"]], "EnzBase": [[61, 1, 1, "", "Km"], [61, 2, 1, "", "enzDest"], [61, 2, 1, "", "getKcat"], [61, 2, 1, "", "getKm"], [61, 2, 1, "", "getNumKm"], [61, 2, 1, "", "getNumSubstrates"], [61, 1, 1, "", "kcat"], [61, 1, 1, "", "numKm"], [61, 1, 1, "", "numSubstrates"], [61, 1, 1, "", "prd"], [61, 2, 1, "", "prdDest"], [61, 1, 1, "", "prdOut"], [61, 1, 1, "", "proc"], [61, 2, 1, "", "process"], [61, 2, 1, "", "reinit"], [61, 2, 1, "", "remesh"], [61, 2, 1, "", "setKcat"], [61, 2, 1, "", "setKm"], [61, 2, 1, "", "setNumKm"], [61, 1, 1, "", "sub"], [61, 2, 1, "", "subDest"], [61, 1, 1, "", "subOut"]], "ExIF": [[62, 1, 1, "", "deltaThresh"], [62, 2, 1, "", "getDeltaThresh"], [62, 2, 1, "", "getVPeak"], [62, 2, 1, "", "setDeltaThresh"], [62, 2, 1, "", "setVPeak"], [62, 1, 1, "", "vPeak"]], "ExponentialRng": [[63, 2, 1, "", "getMean"], [63, 2, 1, "", "getMethod"], [63, 1, 1, "", "mean"], [63, 1, 1, "", "method"], [63, 2, 1, "", "setMean"], [63, 2, 1, "", "setMethod"]], "Finfo": [[64, 1, 1, "", "dest"], [64, 1, 1, "", "docs"], [64, 1, 1, "", "fieldName"], [64, 2, 1, "", "getDest"], [64, 2, 1, "", "getDocs"], [64, 2, 1, "", "getFieldName"], [64, 2, 1, "", "getSrc"], [64, 2, 1, "", "getType"], [64, 1, 1, "", "src"], [64, 1, 1, "", "type"]], "Func": [[65, 1, 1, "", "derivative"], [65, 1, 1, "", "derivativeOut"], [65, 1, 1, "", "expr"], [65, 2, 1, "", "getDerivative"], [65, 2, 1, "", "getExpr"], [65, 2, 1, "", "getMode"], [65, 2, 1, "", "getValue"], [65, 2, 1, "", "getVar"], [65, 2, 1, "", "getVars"], [65, 2, 1, "", "getX"], [65, 2, 1, "", "getY"], [65, 2, 1, "", "getZ"], [65, 1, 1, "", "mode"], [65, 1, 1, "", "proc"], [65, 2, 1, "", "process"], [65, 2, 1, "", "reinit"], [65, 2, 1, "", "setExpr"], [65, 2, 1, "", "setMode"], [65, 2, 1, "", "setVar"], [65, 2, 1, "", "setX"], [65, 2, 1, "", "setY"], [65, 2, 1, "", "setZ"], [65, 1, 1, "", "value"], [65, 1, 1, "", "valueOut"], [65, 1, 1, "", "var"], [65, 2, 1, "", "varIn"], [65, 1, 1, "", "vars"], [65, 1, 1, "", "x"], [65, 2, 1, "", "xIn"], [65, 2, 1, "", "xyIn"], [65, 2, 1, "", "xyzIn"], [65, 1, 1, "", "y"], [65, 2, 1, "", "yIn"], [65, 1, 1, "", "z"], [65, 2, 1, "", "zIn"]], "Function": [[66, 1, 1, "", "c"], [66, 1, 1, "", "derivative"], [66, 1, 1, "", "derivativeOut"], [66, 1, 1, "", "expr"], [66, 2, 1, "", "getC"], [66, 2, 1, "", "getDerivative"], [66, 2, 1, "", "getExpr"], [66, 2, 1, "", "getIndependent"], [66, 2, 1, "", "getMode"], [66, 2, 1, "", "getNumVars"], [66, 2, 1, "", "getNumX"], [66, 2, 1, "", "getRate"], [66, 2, 1, "", "getValue"], [66, 1, 1, "", "independent"], [66, 1, 1, "", "mode"], [66, 1, 1, "", "numVars"], [66, 1, 1, "", "proc"], [66, 2, 1, "", "process"], [66, 1, 1, "", "rate"], [66, 1, 1, "", "rateOut"], [66, 2, 1, "", "reinit"], [66, 1, 1, "", "requestOut"], [66, 2, 1, "", "setC"], [66, 2, 1, "", "setExpr"], [66, 2, 1, "", "setIndependent"], [66, 2, 1, "", "setMode"], [66, 2, 1, "", "setNumVars"], [66, 2, 1, "", "setNumX"], [66, 1, 1, "", "value"], [66, 1, 1, "", "valueOut"]], "GammaRng": [[67, 1, 1, "", "alpha"], [67, 2, 1, "", "getAlpha"], [67, 2, 1, "", "getTheta"], [67, 2, 1, "", "setAlpha"], [67, 2, 1, "", "setTheta"], [67, 1, 1, "", "theta"]], "GapJunction": [[68, 1, 1, "", "Gk"], [68, 2, 1, "", "Vm1"], [68, 2, 1, "", "Vm2"], [68, 1, 1, "", "channel1"], [68, 1, 1, "", "channel1Out"], [68, 1, 1, "", "channel2"], [68, 1, 1, "", "channel2Out"], [68, 2, 1, "", "getGk"], [68, 1, 1, "", "proc"], [68, 2, 1, "", "process"], [68, 2, 1, "", "reinit"], [68, 2, 1, "", "setGk"]], "GraupnerBrunel2012CaPlasticitySynHandler": [[69, 1, 1, "", "Ca"], [69, 1, 1, "", "CaInit"], [69, 1, 1, "", "CaPost"], [69, 1, 1, "", "CaPre"], [69, 2, 1, "", "addPostSpike"], [69, 1, 1, "", "bistable"], [69, 1, 1, "", "delayD"], [69, 1, 1, "", "gammaD"], [69, 1, 1, "", "gammaP"], [69, 2, 1, "", "getBistable"], [69, 2, 1, "", "getCa"], [69, 2, 1, "", "getCaInit"], [69, 2, 1, "", "getCaPost"], [69, 2, 1, "", "getCaPre"], [69, 2, 1, "", "getDelayD"], [69, 2, 1, "", "getGammaD"], [69, 2, 1, "", "getGammaP"], [69, 2, 1, "", "getNoiseSD"], [69, 2, 1, "", "getNoisy"], [69, 2, 1, "", "getNumSynapse"], [69, 2, 1, "", "getTauCa"], [69, 2, 1, "", "getTauSyn"], [69, 2, 1, "", "getThetaD"], [69, 2, 1, "", "getThetaP"], [69, 2, 1, "", "getWeightMax"], [69, 2, 1, "", "getWeightMin"], [69, 2, 1, "", "getWeightScale"], [69, 1, 1, "", "noiseSD"], [69, 1, 1, "", "noisy"], [69, 2, 1, "", "setBistable"], [69, 2, 1, "", "setCa"], [69, 2, 1, "", "setCaInit"], [69, 2, 1, "", "setCaPost"], [69, 2, 1, "", "setCaPre"], [69, 2, 1, "", "setDelayD"], [69, 2, 1, "", "setGammaD"], [69, 2, 1, "", "setGammaP"], [69, 2, 1, "", "setNoiseSD"], [69, 2, 1, "", "setNoisy"], [69, 2, 1, "", "setNumSynapse"], [69, 2, 1, "", "setTauCa"], [69, 2, 1, "", "setTauSyn"], [69, 2, 1, "", "setThetaD"], [69, 2, 1, "", "setThetaP"], [69, 2, 1, "", "setWeightMax"], [69, 2, 1, "", "setWeightMin"], [69, 2, 1, "", "setWeightScale"], [69, 1, 1, "", "tauCa"], [69, 1, 1, "", "tauSyn"], [69, 1, 1, "", "thetaD"], [69, 1, 1, "", "thetaP"], [69, 1, 1, "", "weightMax"], [69, 1, 1, "", "weightMin"], [69, 1, 1, "", "weightScale"]], "Group": [[70, 1, 1, "", "group"]], "Gsolve": [[71, 2, 1, "", "getNVec"], [71, 2, 1, "", "getNumAllVoxels"], [71, 2, 1, "", "getNumFire"], [71, 2, 1, "", "getNumLocalVoxels"], [71, 2, 1, "", "getNumPools"], [71, 2, 1, "", "getStoich"], [71, 2, 1, "", "getUseClockedUpdate"], [71, 2, 1, "", "getUseRandInit"], [71, 1, 1, "", "init"], [71, 2, 1, "", "initProc"], [71, 2, 1, "", "initReinit"], [71, 1, 1, "", "nVec"], [71, 1, 1, "", "numAllVoxels"], [71, 1, 1, "", "numFire"], [71, 1, 1, "", "numLocalVoxels"], [71, 1, 1, "", "numPools"], [71, 1, 1, "", "proc"], [71, 2, 1, "", "process"], [71, 2, 1, "", "reinit"], [71, 2, 1, "", "setNVec"], [71, 2, 1, "", "setNumAllVoxels"], [71, 2, 1, "", "setNumPools"], [71, 2, 1, "", "setStoich"], [71, 2, 1, "", "setUseClockedUpdate"], [71, 2, 1, "", "setUseRandInit"], [71, 1, 1, "", "stoich"], [71, 1, 1, "", "useClockedUpdate"], [71, 1, 1, "", "useRandInit"], [71, 2, 1, "", "voxelVol"], [71, 1, 1, "", "xCompt"], [71, 2, 1, "", "xComptIn"], [71, 1, 1, "", "xComptOut"]], "HDF5DataWriter": [[72, 1, 1, "", "flushLimit"], [72, 2, 1, "", "getFlushLimit"], [72, 1, 1, "", "proc"], [72, 2, 1, "", "process"], [72, 2, 1, "", "reinit"], [72, 1, 1, "", "requestOut"], [72, 2, 1, "", "setFlushLimit"]], "HDF5WriterBase": [[73, 1, 1, "", "chunkSize"], [73, 2, 1, "", "close"], [73, 1, 1, "", "compression"], [73, 1, 1, "", "compressor"], [73, 1, 1, "", "doubleAttr"], [73, 1, 1, "", "doubleVecAttr"], [73, 1, 1, "", "filename"], [73, 2, 1, "", "flush"], [73, 2, 1, "", "getChunkSize"], [73, 2, 1, "", "getCompression"], [73, 2, 1, "", "getCompressor"], [73, 2, 1, "", "getDoubleAttr"], [73, 2, 1, "", "getDoubleVecAttr"], [73, 2, 1, "", "getFilename"], [73, 2, 1, "", "getIsOpen"], [73, 2, 1, "", "getLongAttr"], [73, 2, 1, "", "getLongVecAttr"], [73, 2, 1, "", "getMode"], [73, 2, 1, "", "getStringAttr"], [73, 2, 1, "", "getStringVecAttr"], [73, 1, 1, "", "isOpen"], [73, 1, 1, "", "longAttr"], [73, 1, 1, "", "longVecAttr"], [73, 1, 1, "", "mode"], [73, 2, 1, "", "setChunkSize"], [73, 2, 1, "", "setCompression"], [73, 2, 1, "", "setCompressor"], [73, 2, 1, "", "setDoubleAttr"], [73, 2, 1, "", "setDoubleVecAttr"], [73, 2, 1, "", "setFilename"], [73, 2, 1, "", "setLongAttr"], [73, 2, 1, "", "setLongVecAttr"], [73, 2, 1, "", "setMode"], [73, 2, 1, "", "setStringAttr"], [73, 2, 1, "", "setStringVecAttr"], [73, 1, 1, "", "stringAttr"], [73, 1, 1, "", "stringVecAttr"]], "HHChannel2D": [[75, 1, 1, "", "X"], [75, 1, 1, "", "Xindex"], [75, 1, 1, "", "Xpower"], [75, 1, 1, "", "Y"], [75, 1, 1, "", "Yindex"], [75, 1, 1, "", "Ypower"], [75, 1, 1, "", "Z"], [75, 1, 1, "", "Zindex"], [75, 1, 1, "", "Zpower"], [75, 2, 1, "", "concen"], [75, 2, 1, "", "concen2"], [75, 2, 1, "", "getInstant"], [75, 2, 1, "", "getNumGateX"], [75, 2, 1, "", "getNumGateY"], [75, 2, 1, "", "getNumGateZ"], [75, 2, 1, "", "getX"], [75, 2, 1, "", "getXindex"], [75, 2, 1, "", "getXpower"], [75, 2, 1, "", "getY"], [75, 2, 1, "", "getYindex"], [75, 2, 1, "", "getYpower"], [75, 2, 1, "", "getZ"], [75, 2, 1, "", "getZindex"], [75, 2, 1, "", "getZpower"], [75, 1, 1, "", "instant"], [75, 2, 1, "", "setInstant"], [75, 2, 1, "", "setNumGateX"], [75, 2, 1, "", "setNumGateY"], [75, 2, 1, "", "setNumGateZ"], [75, 2, 1, "", "setX"], [75, 2, 1, "", "setXindex"], [75, 2, 1, "", "setXpower"], [75, 2, 1, "", "setY"], [75, 2, 1, "", "setYindex"], [75, 2, 1, "", "setYpower"], [75, 2, 1, "", "setZ"], [75, 2, 1, "", "setZindex"], [75, 2, 1, "", "setZpower"]], "HHChannelBase": [[76, 1, 1, "", "X"], [76, 1, 1, "", "Xpower"], [76, 1, 1, "", "Y"], [76, 1, 1, "", "Ypower"], [76, 1, 1, "", "Z"], [76, 1, 1, "", "Zpower"], [76, 2, 1, "", "concen"], [76, 2, 1, "", "createGate"], [76, 2, 1, "", "getInstant"], [76, 2, 1, "", "getNumGateX"], [76, 2, 1, "", "getNumGateY"], [76, 2, 1, "", "getNumGateZ"], [76, 2, 1, "", "getUseConcentration"], [76, 2, 1, "", "getX"], [76, 2, 1, "", "getXpower"], [76, 2, 1, "", "getY"], [76, 2, 1, "", "getYpower"], [76, 2, 1, "", "getZ"], [76, 2, 1, "", "getZpower"], [76, 1, 1, "", "instant"], [76, 2, 1, "", "setInstant"], [76, 2, 1, "", "setNumGateX"], [76, 2, 1, "", "setNumGateY"], [76, 2, 1, "", "setNumGateZ"], [76, 2, 1, "", "setUseConcentration"], [76, 2, 1, "", "setX"], [76, 2, 1, "", "setXpower"], [76, 2, 1, "", "setY"], [76, 2, 1, "", "setYpower"], [76, 2, 1, "", "setZ"], [76, 2, 1, "", "setZpower"], [76, 1, 1, "", "useConcentration"]], "HHGate": [[77, 1, 1, "", "A"], [77, 1, 1, "", "B"], [77, 1, 1, "", "alpha"], [77, 1, 1, "", "alphaParms"], [77, 1, 1, "", "beta"], [77, 1, 1, "", "divs"], [77, 2, 1, "", "getA"], [77, 2, 1, "", "getAlpha"], [77, 2, 1, "", "getAlphaParms"], [77, 2, 1, "", "getB"], [77, 2, 1, "", "getBeta"], [77, 2, 1, "", "getDivs"], [77, 2, 1, "", "getMInfinity"], [77, 2, 1, "", "getMax"], [77, 2, 1, "", "getMin"], [77, 2, 1, "", "getTableA"], [77, 2, 1, "", "getTableB"], [77, 2, 1, "", "getTau"], [77, 2, 1, "", "getUseInterpolation"], [77, 1, 1, "", "mInfinity"], [77, 1, 1, "", "max"], [77, 1, 1, "", "min"], [77, 2, 1, "", "setAlpha"], [77, 2, 1, "", "setAlphaParms"], [77, 2, 1, "", "setBeta"], [77, 2, 1, "", "setDivs"], [77, 2, 1, "", "setMInfinity"], [77, 2, 1, "", "setMax"], [77, 2, 1, "", "setMin"], [77, 2, 1, "", "setTableA"], [77, 2, 1, "", "setTableB"], [77, 2, 1, "", "setTau"], [77, 2, 1, "", "setUseInterpolation"], [77, 2, 1, "", "setupAlpha"], [77, 2, 1, "", "setupGate"], [77, 2, 1, "", "setupTau"], [77, 1, 1, "", "tableA"], [77, 1, 1, "", "tableB"], [77, 1, 1, "", "tau"], [77, 2, 1, "", "tweakAlpha"], [77, 2, 1, "", "tweakTau"], [77, 1, 1, "", "useInterpolation"]], "HHGate2D": [[78, 1, 1, "", "A"], [78, 1, 1, "", "B"], [78, 2, 1, "", "getA"], [78, 2, 1, "", "getB"], [78, 2, 1, "", "getTableA"], [78, 2, 1, "", "getTableB"], [78, 2, 1, "", "getXdivsA"], [78, 2, 1, "", "getXdivsB"], [78, 2, 1, "", "getXmaxA"], [78, 2, 1, "", "getXmaxB"], [78, 2, 1, "", "getXminA"], [78, 2, 1, "", "getXminB"], [78, 2, 1, "", "getYdivsA"], [78, 2, 1, "", "getYdivsB"], [78, 2, 1, "", "getYmaxA"], [78, 2, 1, "", "getYmaxB"], [78, 2, 1, "", "getYminA"], [78, 2, 1, "", "getYminB"], [78, 2, 1, "", "setTableA"], [78, 2, 1, "", "setTableB"], [78, 2, 1, "", "setXdivsA"], [78, 2, 1, "", "setXdivsB"], [78, 2, 1, "", "setXmaxA"], [78, 2, 1, "", "setXmaxB"], [78, 2, 1, "", "setXminA"], [78, 2, 1, "", "setXminB"], [78, 2, 1, "", "setYdivsA"], [78, 2, 1, "", "setYdivsB"], [78, 2, 1, "", "setYmaxA"], [78, 2, 1, "", "setYmaxB"], [78, 2, 1, "", "setYminA"], [78, 2, 1, "", "setYminB"], [78, 1, 1, "", "tableA"], [78, 1, 1, "", "tableB"], [78, 1, 1, "", "xdivsA"], [78, 1, 1, "", "xdivsB"], [78, 1, 1, "", "xmaxA"], [78, 1, 1, "", "xmaxB"], [78, 1, 1, "", "xminA"], [78, 1, 1, "", "xminB"], [78, 1, 1, "", "ydivsA"], [78, 1, 1, "", "ydivsB"], [78, 1, 1, "", "ymaxA"], [78, 1, 1, "", "ymaxB"], [78, 1, 1, "", "yminA"], [78, 1, 1, "", "yminB"]], "HSolve": [[79, 1, 1, "", "caAdvance"], [79, 1, 1, "", "caDiv"], [79, 1, 1, "", "caMax"], [79, 1, 1, "", "caMin"], [79, 1, 1, "", "dt"], [79, 2, 1, "", "getCaAdvance"], [79, 2, 1, "", "getCaDiv"], [79, 2, 1, "", "getCaMax"], [79, 2, 1, "", "getCaMin"], [79, 2, 1, "", "getDt"], [79, 2, 1, "", "getSeed"], [79, 2, 1, "", "getTarget"], [79, 2, 1, "", "getVDiv"], [79, 2, 1, "", "getVMax"], [79, 2, 1, "", "getVMin"], [79, 1, 1, "", "proc"], [79, 2, 1, "", "process"], [79, 2, 1, "", "reinit"], [79, 1, 1, "", "seed"], [79, 2, 1, "", "setCaAdvance"], [79, 2, 1, "", "setCaDiv"], [79, 2, 1, "", "setCaMax"], [79, 2, 1, "", "setCaMin"], [79, 2, 1, "", "setDt"], [79, 2, 1, "", "setSeed"], [79, 2, 1, "", "setTarget"], [79, 2, 1, "", "setVDiv"], [79, 2, 1, "", "setVMax"], [79, 2, 1, "", "setVMin"], [79, 1, 1, "", "target"], [79, 1, 1, "", "vDiv"], [79, 1, 1, "", "vMax"], [79, 1, 1, "", "vMin"]], "InputVariable": [[80, 2, 1, "", "input"]], "IntFire": [[81, 1, 1, "", "Vm"], [81, 2, 1, "", "activation"], [81, 2, 1, "", "getRefractoryPeriod"], [81, 2, 1, "", "getTau"], [81, 2, 1, "", "getThresh"], [81, 2, 1, "", "getVm"], [81, 1, 1, "", "proc"], [81, 2, 1, "", "process"], [81, 1, 1, "", "refractoryPeriod"], [81, 2, 1, "", "reinit"], [81, 2, 1, "", "setRefractoryPeriod"], [81, 2, 1, "", "setTau"], [81, 2, 1, "", "setThresh"], [81, 2, 1, "", "setVm"], [81, 1, 1, "", "spikeOut"], [81, 1, 1, "", "tau"], [81, 1, 1, "", "thresh"]], "IntFireBase": [[82, 2, 1, "", "activation"], [82, 2, 1, "", "getHasFired"], [82, 2, 1, "", "getLastEventTime"], [82, 2, 1, "", "getRefractoryPeriod"], [82, 2, 1, "", "getThresh"], [82, 2, 1, "", "getVReset"], [82, 1, 1, "", "hasFired"], [82, 1, 1, "", "lastEventTime"], [82, 1, 1, "", "refractoryPeriod"], [82, 2, 1, "", "setRefractoryPeriod"], [82, 2, 1, "", "setThresh"], [82, 2, 1, "", "setVReset"], [82, 1, 1, "", "spikeOut"], [82, 1, 1, "", "thresh"], [82, 1, 1, "", "vReset"]], "Interpol": [[83, 2, 1, "", "getXmax"], [83, 2, 1, "", "getXmin"], [83, 2, 1, "", "getY"], [83, 2, 1, "", "input"], [83, 1, 1, "", "lookupOut"], [83, 1, 1, "", "proc"], [83, 2, 1, "", "process"], [83, 2, 1, "", "reinit"], [83, 2, 1, "", "setXmax"], [83, 2, 1, "", "setXmin"], [83, 1, 1, "", "xmax"], [83, 1, 1, "", "xmin"], [83, 1, 1, "", "y"]], "Interpol2D": [[84, 1, 1, "", "dx"], [84, 1, 1, "", "dy"], [84, 2, 1, "", "getDx"], [84, 2, 1, "", "getDy"], [84, 2, 1, "", "getTable"], [84, 2, 1, "", "getTableVector2D"], [84, 2, 1, "", "getXdivs"], [84, 2, 1, "", "getXmax"], [84, 2, 1, "", "getXmin"], [84, 2, 1, "", "getYdivs"], [84, 2, 1, "", "getYmax"], [84, 2, 1, "", "getYmin"], [84, 2, 1, "", "getZ"], [84, 2, 1, "", "lookup"], [84, 1, 1, "", "lookupOut"], [84, 1, 1, "", "lookupReturn2D"], [84, 2, 1, "", "setDx"], [84, 2, 1, "", "setDy"], [84, 2, 1, "", "setTable"], [84, 2, 1, "", "setTableVector2D"], [84, 2, 1, "", "setXdivs"], [84, 2, 1, "", "setXmax"], [84, 2, 1, "", "setXmin"], [84, 2, 1, "", "setYdivs"], [84, 2, 1, "", "setYmax"], [84, 2, 1, "", "setYmin"], [84, 1, 1, "", "table"], [84, 1, 1, "", "tableVector2D"], [84, 1, 1, "", "xdivs"], [84, 1, 1, "", "xmax"], [84, 1, 1, "", "xmin"], [84, 1, 1, "", "ydivs"], [84, 1, 1, "", "ymax"], [84, 1, 1, "", "ymin"], [84, 1, 1, "", "z"]], "IzhIF": [[85, 1, 1, "", "a"], [85, 1, 1, "", "a0"], [85, 1, 1, "", "b"], [85, 1, 1, "", "b0"], [85, 1, 1, "", "c0"], [85, 1, 1, "", "d"], [85, 2, 1, "", "getA"], [85, 2, 1, "", "getA0"], [85, 2, 1, "", "getB"], [85, 2, 1, "", "getB0"], [85, 2, 1, "", "getC0"], [85, 2, 1, "", "getD"], [85, 2, 1, "", "getU"], [85, 2, 1, "", "getUInit"], [85, 2, 1, "", "getVPeak"], [85, 2, 1, "", "setA"], [85, 2, 1, "", "setA0"], [85, 2, 1, "", "setB"], [85, 2, 1, "", "setB0"], [85, 2, 1, "", "setC0"], [85, 2, 1, "", "setD"], [85, 2, 1, "", "setU"], [85, 2, 1, "", "setUInit"], [85, 2, 1, "", "setVPeak"], [85, 1, 1, "", "u"], [85, 1, 1, "", "uInit"], [85, 1, 1, "", "vPeak"]], "IzhikevichNrn": [[86, 1, 1, "", "Im"], [86, 1, 1, "", "RmByTau"], [86, 1, 1, "", "Vm"], [86, 1, 1, "id0", "VmOut"], [86, 1, 1, "", "Vmax"], [86, 1, 1, "", "a"], [86, 2, 1, "", "aDest"], [86, 1, 1, "", "accommodating"], [86, 1, 1, "", "alpha"], [86, 1, 1, "", "b"], [86, 2, 1, "", "bDest"], [86, 1, 1, "", "beta"], [86, 1, 1, "", "c"], [86, 2, 1, "", "cDest"], [86, 1, 1, "", "channel"], [86, 1, 1, "", "d"], [86, 2, 1, "", "dDest"], [86, 1, 1, "", "gamma"], [86, 2, 1, "", "getA"], [86, 2, 1, "", "getAccommodating"], [86, 2, 1, "", "getAlpha"], [86, 2, 1, "", "getB"], [86, 2, 1, "", "getBeta"], [86, 2, 1, "", "getC"], [86, 2, 1, "", "getD"], [86, 2, 1, "", "getGamma"], [86, 2, 1, "", "getIm"], [86, 2, 1, "", "getInitU"], [86, 2, 1, "", "getInitVm"], [86, 2, 1, "", "getInject"], [86, 2, 1, "", "getRmByTau"], [86, 2, 1, "", "getU"], [86, 2, 1, "", "getU0"], [86, 2, 1, "", "getVm"], [86, 2, 1, "", "getVmax"], [86, 2, 1, "", "handleChannel"], [86, 1, 1, "", "initU"], [86, 1, 1, "", "initVm"], [86, 1, 1, "", "inject"], [86, 2, 1, "", "injectMsg"], [86, 1, 1, "", "proc"], [86, 2, 1, "", "process"], [86, 2, 1, "", "reinit"], [86, 2, 1, "", "setA"], [86, 2, 1, "", "setAccommodating"], [86, 2, 1, "", "setAlpha"], [86, 2, 1, "", "setB"], [86, 2, 1, "", "setBeta"], [86, 2, 1, "", "setC"], [86, 2, 1, "", "setD"], [86, 2, 1, "", "setGamma"], [86, 2, 1, "", "setInitU"], [86, 2, 1, "", "setInitVm"], [86, 2, 1, "", "setInject"], [86, 2, 1, "", "setRmByTau"], [86, 2, 1, "", "setU0"], [86, 2, 1, "", "setVm"], [86, 2, 1, "", "setVmax"], [86, 1, 1, "", "spikeOut"], [86, 1, 1, "", "u"], [86, 1, 1, "", "u0"]], "Ksolve": [[87, 1, 1, "", "compartment"], [87, 1, 1, "", "epsAbs"], [87, 1, 1, "", "epsRel"], [87, 1, 1, "", "estimatedDt"], [87, 2, 1, "", "getCompartment"], [87, 2, 1, "", "getEpsAbs"], [87, 2, 1, "", "getEpsRel"], [87, 2, 1, "", "getEstimatedDt"], [87, 2, 1, "", "getMethod"], [87, 2, 1, "", "getNVec"], [87, 2, 1, "", "getNumAllVoxels"], [87, 2, 1, "", "getNumLocalVoxels"], [87, 2, 1, "", "getNumPools"], [87, 2, 1, "", "getStoich"], [87, 1, 1, "", "init"], [87, 2, 1, "", "initProc"], [87, 2, 1, "", "initReinit"], [87, 1, 1, "", "method"], [87, 1, 1, "", "nVec"], [87, 1, 1, "", "numAllVoxels"], [87, 1, 1, "", "numLocalVoxels"], [87, 1, 1, "", "numPools"], [87, 1, 1, "", "proc"], [87, 2, 1, "", "process"], [87, 2, 1, "", "reinit"], [87, 2, 1, "", "setCompartment"], [87, 2, 1, "", "setEpsAbs"], [87, 2, 1, "", "setEpsRel"], [87, 2, 1, "", "setMethod"], [87, 2, 1, "", "setNVec"], [87, 2, 1, "", "setNumAllVoxels"], [87, 2, 1, "", "setNumPools"], [87, 1, 1, "", "stoich"], [87, 2, 1, "", "voxelVol"], [87, 1, 1, "", "xCompt"], [87, 2, 1, "", "xComptIn"], [87, 1, 1, "", "xComptOut"]], "MarkovChannel": [[90, 1, 1, "", "Vm"], [90, 1, 1, "", "gbar"], [90, 2, 1, "", "getGbar"], [90, 2, 1, "", "getInitialState"], [90, 2, 1, "", "getLabels"], [90, 2, 1, "", "getLigandConc"], [90, 2, 1, "", "getNumOpenStates"], [90, 2, 1, "", "getNumStates"], [90, 2, 1, "", "getState"], [90, 2, 1, "", "getVm"], [90, 2, 1, "", "handleLigandConc"], [90, 2, 1, "", "handleState"], [90, 1, 1, "", "initialState"], [90, 1, 1, "", "labels"], [90, 1, 1, "", "ligandConc"], [90, 1, 1, "", "numOpenStates"], [90, 1, 1, "", "numStates"], [90, 2, 1, "", "setGbar"], [90, 2, 1, "", "setInitialState"], [90, 2, 1, "", "setLabels"], [90, 2, 1, "", "setLigandConc"], [90, 2, 1, "", "setNumOpenStates"], [90, 2, 1, "", "setNumStates"], [90, 2, 1, "", "setVm"], [90, 1, 1, "", "state"]], "MarkovGslSolver": [[91, 1, 1, "", "absoluteAccuracy"], [91, 2, 1, "", "getAbsoluteAccuracy"], [91, 2, 1, "", "getInternalDt"], [91, 2, 1, "", "getIsInitialized"], [91, 2, 1, "", "getMethod"], [91, 2, 1, "", "getRelativeAccuracy"], [91, 2, 1, "", "handleQ"], [91, 2, 1, "", "init"], [91, 1, 1, "", "internalDt"], [91, 1, 1, "", "isInitialized"], [91, 1, 1, "", "method"], [91, 1, 1, "", "proc"], [91, 2, 1, "", "process"], [91, 2, 1, "", "reinit"], [91, 1, 1, "", "relativeAccuracy"], [91, 2, 1, "", "setAbsoluteAccuracy"], [91, 2, 1, "", "setInternalDt"], [91, 2, 1, "", "setMethod"], [91, 2, 1, "", "setRelativeAccuracy"], [91, 1, 1, "", "stateOut"]], "MarkovRateTable": [[92, 1, 1, "", "Q"], [92, 1, 1, "", "Vm"], [92, 1, 1, "", "channel"], [92, 2, 1, "", "getLigandConc"], [92, 2, 1, "", "getQ"], [92, 2, 1, "", "getSize"], [92, 2, 1, "", "getVm"], [92, 2, 1, "", "handleLigandConc"], [92, 2, 1, "", "handleVm"], [92, 2, 1, "", "init"], [92, 1, 1, "", "instratesOut"], [92, 1, 1, "", "ligandConc"], [92, 1, 1, "", "proc"], [92, 2, 1, "", "process"], [92, 2, 1, "", "reinit"], [92, 2, 1, "", "set1d"], [92, 2, 1, "", "set2d"], [92, 2, 1, "", "setLigandConc"], [92, 2, 1, "", "setVm"], [92, 2, 1, "", "setconst"], [92, 1, 1, "", "size"]], "MarkovSolver": [[93, 1, 1, "", "proc"], [93, 2, 1, "", "process"], [93, 2, 1, "", "reinit"]], "MarkovSolverBase": [[94, 1, 1, "", "Q"], [94, 1, 1, "", "channel"], [94, 2, 1, "", "getInitialState"], [94, 2, 1, "", "getInvdx"], [94, 2, 1, "", "getInvdy"], [94, 2, 1, "", "getQ"], [94, 2, 1, "", "getState"], [94, 2, 1, "", "getXdivs"], [94, 2, 1, "", "getXmax"], [94, 2, 1, "", "getXmin"], [94, 2, 1, "", "getYdivs"], [94, 2, 1, "", "getYmax"], [94, 2, 1, "", "getYmin"], [94, 2, 1, "", "handleVm"], [94, 2, 1, "", "init"], [94, 1, 1, "", "initialState"], [94, 1, 1, "", "invdx"], [94, 1, 1, "", "invdy"], [94, 2, 1, "", "ligandConc"], [94, 1, 1, "", "proc"], [94, 2, 1, "", "process"], [94, 2, 1, "", "reinit"], [94, 2, 1, "", "setInitialState"], [94, 2, 1, "", "setXdivs"], [94, 2, 1, "", "setXmax"], [94, 2, 1, "", "setXmin"], [94, 2, 1, "", "setYdivs"], [94, 2, 1, "", "setYmax"], [94, 2, 1, "", "setYmin"], [94, 1, 1, "", "state"], [94, 1, 1, "", "stateOut"], [94, 1, 1, "", "xdivs"], [94, 1, 1, "", "xmax"], [94, 1, 1, "", "xmin"], [94, 1, 1, "", "ydivs"], [94, 1, 1, "", "ymax"], [94, 1, 1, "", "ymin"]], "MeshEntry": [[96, 1, 1, "", "Coordinates"], [96, 1, 1, "", "DiffusionArea"], [96, 1, 1, "", "DiffusionScaling"], [96, 1, 1, "", "dimensions"], [96, 2, 1, "", "getCoordinates"], [96, 2, 1, "", "getDiffusionArea"], [96, 2, 1, "", "getDiffusionScaling"], [96, 2, 1, "", "getDimensions"], [96, 2, 1, "", "getMeshType"], [96, 2, 1, "", "getNeighbors"], [96, 2, 1, "id0", "getVolume"], [96, 1, 1, "", "mesh"], [96, 1, 1, "", "meshType"], [96, 1, 1, "", "neighbors"], [96, 1, 1, "", "proc"], [96, 2, 1, "", "process"], [96, 2, 1, "", "reinit"], [96, 1, 1, "", "remeshOut"], [96, 1, 1, "", "remeshReacsOut"], [96, 1, 1, "", "volume"]], "MgBlock": [[97, 1, 1, "", "CMg"], [97, 1, 1, "", "Zk"], [97, 2, 1, "", "getCMg"], [97, 2, 1, "", "getZk"], [97, 2, 1, "", "origChannel"], [97, 2, 1, "", "setCMg"], [97, 2, 1, "", "setZk"]], "Msg": [[98, 1, 1, "", "adjacent"], [98, 1, 1, "", "destFieldsOnE1"], [98, 1, 1, "", "destFieldsOnE2"], [98, 1, 1, "", "e1"], [98, 1, 1, "", "e2"], [98, 2, 1, "", "getAdjacent"], [98, 2, 1, "", "getDestFieldsOnE1"], [98, 2, 1, "", "getDestFieldsOnE2"], [98, 2, 1, "", "getE1"], [98, 2, 1, "", "getE2"], [98, 2, 1, "", "getSrcFieldsOnE1"], [98, 2, 1, "", "getSrcFieldsOnE2"], [98, 1, 1, "", "srcFieldsOnE1"], [98, 1, 1, "", "srcFieldsOnE2"]], "Mstring": [[99, 2, 1, "", "getThis"], [99, 2, 1, "", "getValue"], [99, 2, 1, "", "setThis"], [99, 2, 1, "", "setValue"], [99, 1, 1, "", "this"], [99, 1, 1, "", "value"]], "NMDAChan": [[100, 1, 1, "", "CMg"], [100, 1, 1, "", "ICa"], [100, 1, 1, "", "ICaOut"], [100, 2, 1, "", "assignIntCa"], [100, 1, 1, "", "condFraction"], [100, 1, 1, "", "extCa"], [100, 2, 1, "", "getCMg"], [100, 2, 1, "", "getCondFraction"], [100, 2, 1, "", "getExtCa"], [100, 2, 1, "", "getICa"], [100, 2, 1, "", "getIntCa"], [100, 2, 1, "", "getIntCaOffset"], [100, 2, 1, "", "getIntCaScale"], [100, 2, 1, "", "getPermeability"], [100, 2, 1, "", "getTemperature"], [100, 1, 1, "", "intCa"], [100, 1, 1, "", "intCaOffset"], [100, 1, 1, "", "intCaScale"], [100, 1, 1, "", "permeability"], [100, 2, 1, "", "setCMg"], [100, 2, 1, "", "setCondFraction"], [100, 2, 1, "", "setExtCa"], [100, 2, 1, "", "setIntCa"], [100, 2, 1, "", "setIntCaOffset"], [100, 2, 1, "", "setIntCaScale"], [100, 2, 1, "", "setPermeability"], [100, 2, 1, "", "setTemperature"], [100, 1, 1, "", "temperature"]], "NSDFWriter": [[101, 2, 1, "", "getNumEventInput"], [101, 1, 1, "", "proc"], [101, 2, 1, "", "process"], [101, 2, 1, "", "reinit"], [101, 2, 1, "", "setNumEventInput"]], "Nernst": [[102, 1, 1, "", "Cin"], [102, 1, 1, "", "Cout"], [102, 1, 1, "", "E"], [102, 1, 1, "", "Eout"], [102, 1, 1, "", "Temperature"], [102, 2, 1, "", "ci"], [102, 2, 1, "", "co"], [102, 2, 1, "", "getCin"], [102, 2, 1, "", "getCout"], [102, 2, 1, "", "getE"], [102, 2, 1, "", "getScale"], [102, 2, 1, "", "getTemperature"], [102, 2, 1, "", "getValence"], [102, 1, 1, "", "scale"], [102, 2, 1, "", "setCin"], [102, 2, 1, "", "setCout"], [102, 2, 1, "", "setScale"], [102, 2, 1, "", "setTemperature"], [102, 2, 1, "", "setValence"], [102, 1, 1, "", "valence"]], "NeuroMesh": [[103, 1, 1, "", "dendVoxelsOnCompartment"], [103, 1, 1, "", "diffLength"], [103, 1, 1, "", "elecComptList"], [103, 1, 1, "", "elecComptMap"], [103, 1, 1, "", "endVoxelInCompt"], [103, 1, 1, "", "geometryPolicy"], [103, 2, 1, "", "getDendVoxelsOnCompartment"], [103, 2, 1, "", "getDiffLength"], [103, 2, 1, "", "getElecComptList"], [103, 2, 1, "", "getElecComptMap"], [103, 2, 1, "", "getEndVoxelInCompt"], [103, 2, 1, "", "getGeometryPolicy"], [103, 2, 1, "", "getNumDiffCompts"], [103, 2, 1, "", "getNumSegments"], [103, 2, 1, "", "getParentVoxel"], [103, 2, 1, "", "getSeparateSpines"], [103, 2, 1, "", "getSpineVoxelOnDendVoxel"], [103, 2, 1, "", "getSpineVoxelsOnCompartment"], [103, 2, 1, "", "getStartVoxelInCompt"], [103, 2, 1, "", "getSubTree"], [103, 2, 1, "", "getSubTreePath"], [103, 1, 1, "", "numDiffCompts"], [103, 1, 1, "", "numSegments"], [103, 1, 1, "", "parentVoxel"], [103, 1, 1, "", "psdListOut"], [103, 1, 1, "", "separateSpines"], [103, 2, 1, "", "setDiffLength"], [103, 2, 1, "", "setGeometryPolicy"], [103, 2, 1, "", "setSeparateSpines"], [103, 2, 1, "", "setSubTree"], [103, 2, 1, "", "setSubTreePath"], [103, 1, 1, "", "spineListOut"], [103, 1, 1, "", "spineVoxelOnDendVoxel"], [103, 1, 1, "", "spineVoxelsOnCompartment"], [103, 1, 1, "", "startVoxelInCompt"], [103, 1, 1, "", "subTree"], [103, 1, 1, "", "subTreePath"]], "Neuron": [[104, 1, 1, "", "CM"], [104, 1, 1, "", "Em"], [104, 1, 1, "", "RA"], [104, 1, 1, "", "RM"], [104, 2, 1, "", "buildSegmentTree"], [104, 1, 1, "", "channelDistribution"], [104, 1, 1, "", "compartmentLengthInLambdas"], [104, 1, 1, "", "compartments"], [104, 1, 1, "", "compartmentsFromExpression"], [104, 1, 1, "", "electrotonicDistanceFromSoma"], [104, 1, 1, "", "geometricalDistanceFromSoma"], [104, 2, 1, "", "getCM"], [104, 2, 1, "", "getChannelDistribution"], [104, 2, 1, "", "getCompartmentLengthInLambdas"], [104, 2, 1, "", "getCompartments"], [104, 2, 1, "", "getCompartmentsFromExpression"], [104, 2, 1, "", "getElectrotonicDistanceFromSoma"], [104, 2, 1, "", "getEm"], [104, 2, 1, "", "getGeometricalDistanceFromSoma"], [104, 2, 1, "", "getNumBranches"], [104, 2, 1, "", "getNumCompartments"], [104, 2, 1, "", "getNumSpine"], [104, 2, 1, "", "getNumSpines"], [104, 2, 1, "", "getParentCompartmentOfSpine"], [104, 2, 1, "", "getPassiveDistribution"], [104, 2, 1, "", "getPathDistanceFromSoma"], [104, 2, 1, "", "getPhi"], [104, 2, 1, "", "getRA"], [104, 2, 1, "", "getRM"], [104, 2, 1, "", "getSourceFile"], [104, 2, 1, "", "getSpineDistribution"], [104, 2, 1, "", "getSpinesFromExpression"], [104, 2, 1, "", "getSpinesOnCompartment"], [104, 2, 1, "", "getTheta"], [104, 2, 1, "", "getValuesFromExpression"], [104, 1, 1, "", "numBranches"], [104, 1, 1, "", "numCompartments"], [104, 1, 1, "", "numSpines"], [104, 1, 1, "", "parentCompartmentOfSpine"], [104, 1, 1, "", "passiveDistribution"], [104, 1, 1, "", "pathDistanceFromSoma"], [104, 1, 1, "", "phi"], [104, 2, 1, "", "setCM"], [104, 2, 1, "", "setChannelDistribution"], [104, 2, 1, "", "setCompartmentLengthInLambdas"], [104, 2, 1, "", "setEm"], [104, 2, 1, "", "setNumSpine"], [104, 2, 1, "", "setPassiveDistribution"], [104, 2, 1, "", "setPhi"], [104, 2, 1, "", "setRA"], [104, 2, 1, "", "setRM"], [104, 2, 1, "", "setSourceFile"], [104, 2, 1, "", "setSpineAndPsdDsolve"], [104, 2, 1, "", "setSpineAndPsdMesh"], [104, 2, 1, "", "setSpineDistribution"], [104, 2, 1, "", "setTheta"], [104, 1, 1, "", "sourceFile"], [104, 1, 1, "", "spineDistribution"], [104, 1, 1, "", "spinesFromExpression"], [104, 1, 1, "", "spinesOnCompartment"], [104, 1, 1, "", "theta"], [104, 1, 1, "", "valuesFromExpression"]], "Neutral": [[105, 1, 1, "", "childOut"], [105, 1, 1, "", "children"], [105, 1, 1, "", "className"], [105, 1, 1, "", "destFields"], [105, 1, 1, "", "dt"], [105, 1, 1, "", "fieldIndex"], [105, 2, 1, "", "getChildren"], [105, 2, 1, "", "getClassName"], [105, 2, 1, "", "getDestFields"], [105, 2, 1, "", "getDt"], [105, 2, 1, "", "getFieldIndex"], [105, 2, 1, "", "getIdValue"], [105, 2, 1, "", "getIndex"], [105, 2, 1, "", "getIsA"], [105, 2, 1, "", "getMe"], [105, 2, 1, "", "getMsgDestFunctions"], [105, 2, 1, "", "getMsgDests"], [105, 2, 1, "", "getMsgIn"], [105, 2, 1, "", "getMsgOut"], [105, 2, 1, "", "getName"], [105, 2, 1, "", "getNeighbors"], [105, 2, 1, "", "getNumData"], [105, 2, 1, "", "getNumField"], [105, 2, 1, "", "getParent"], [105, 2, 1, "", "getPath"], [105, 2, 1, "", "getSourceFields"], [105, 2, 1, "", "getThis"], [105, 2, 1, "", "getTick"], [105, 2, 1, "", "getValueFields"], [105, 1, 1, "", "idValue"], [105, 1, 1, "", "index"], [105, 1, 1, "", "isA"], [105, 1, 1, "", "me"], [105, 1, 1, "", "msgDestFunctions"], [105, 1, 1, "", "msgDests"], [105, 1, 1, "", "msgIn"], [105, 1, 1, "", "msgOut"], [105, 1, 1, "", "name"], [105, 1, 1, "", "neighbors"], [105, 1, 1, "", "numData"], [105, 1, 1, "", "numField"], [105, 1, 1, "", "parent"], [105, 2, 1, "", "parentMsg"], [105, 1, 1, "", "path"], [105, 2, 1, "", "setName"], [105, 2, 1, "", "setNumData"], [105, 2, 1, "", "setNumField"], [105, 2, 1, "", "setThis"], [105, 2, 1, "", "setTick"], [105, 1, 1, "", "sourceFields"], [105, 1, 1, "", "this"], [105, 1, 1, "", "tick"], [105, 1, 1, "", "valueFields"]], "NormalRng": [[106, 2, 1, "", "getMean"], [106, 2, 1, "", "getMethod"], [106, 2, 1, "", "getVariance"], [106, 1, 1, "", "mean"], [106, 1, 1, "", "method"], [106, 2, 1, "", "setMean"], [106, 2, 1, "", "setMethod"], [106, 2, 1, "", "setVariance"], [106, 1, 1, "", "variance"]], "OneToAllMsg": [[107, 2, 1, "", "getI1"], [107, 1, 1, "", "i1"], [107, 2, 1, "", "setI1"]], "PIDController": [[108, 1, 1, "", "command"], [108, 2, 1, "", "commandIn"], [108, 1, 1, "", "derivative"], [108, 1, 1, "", "error"], [108, 1, 1, "", "gain"], [108, 2, 1, "", "gainDest"], [108, 2, 1, "", "getCommand"], [108, 2, 1, "", "getDerivative"], [108, 2, 1, "", "getError"], [108, 2, 1, "", "getGain"], [108, 2, 1, "", "getIntegral"], [108, 2, 1, "", "getOutputValue"], [108, 2, 1, "", "getSaturation"], [108, 2, 1, "", "getSensed"], [108, 2, 1, "", "getTauD"], [108, 2, 1, "", "getTauI"], [108, 1, 1, "", "integral"], [108, 1, 1, "", "output"], [108, 1, 1, "", "outputValue"], [108, 1, 1, "", "proc"], [108, 2, 1, "", "process"], [108, 2, 1, "", "reinit"], [108, 1, 1, "", "saturation"], [108, 1, 1, "", "sensed"], [108, 2, 1, "", "sensedIn"], [108, 2, 1, "", "setCommand"], [108, 2, 1, "", "setGain"], [108, 2, 1, "", "setSaturation"], [108, 2, 1, "", "setTauD"], [108, 2, 1, "", "setTauI"], [108, 1, 1, "", "tauD"], [108, 1, 1, "", "tauI"]], "PoissonRng": [[109, 2, 1, "", "getMean"], [109, 1, 1, "", "mean"], [109, 2, 1, "", "setMean"]], "Pool": [[110, 2, 1, "", "decrement"], [110, 2, 1, "", "increment"], [110, 2, 1, "", "nIn"]], "PoolBase": [[111, 1, 1, "", "conc"], [111, 1, 1, "", "concInit"], [111, 1, 1, "", "diffConst"], [111, 2, 1, "", "getConc"], [111, 2, 1, "", "getConcInit"], [111, 2, 1, "", "getDiffConst"], [111, 2, 1, "", "getMotorConst"], [111, 2, 1, "", "getN"], [111, 2, 1, "", "getNInit"], [111, 2, 1, "", "getSpeciesId"], [111, 2, 1, "", "getVolume"], [111, 2, 1, "", "handleMolWt"], [111, 1, 1, "", "motorConst"], [111, 1, 1, "", "n"], [111, 1, 1, "", "nInit"], [111, 1, 1, "", "nOut"], [111, 1, 1, "", "proc"], [111, 2, 1, "", "process"], [111, 1, 1, "", "reac"], [111, 2, 1, "", "reacDest"], [111, 2, 1, "", "reinit"], [111, 1, 1, "", "requestMolWt"], [111, 2, 1, "", "setConc"], [111, 2, 1, "", "setConcInit"], [111, 2, 1, "", "setDiffConst"], [111, 2, 1, "", "setMotorConst"], [111, 2, 1, "", "setN"], [111, 2, 1, "", "setNInit"], [111, 2, 1, "", "setSpeciesId"], [111, 2, 1, "", "setVolume"], [111, 1, 1, "", "species"], [111, 1, 1, "", "speciesId"], [111, 1, 1, "", "volume"]], "PostMaster": [[112, 1, 1, "", "bufferSize"], [112, 2, 1, "", "getBufferSize"], [112, 2, 1, "", "getMyNode"], [112, 2, 1, "", "getNumNodes"], [112, 1, 1, "", "myNode"], [112, 1, 1, "", "numNodes"], [112, 1, 1, "", "proc"], [112, 2, 1, "", "process"], [112, 2, 1, "", "reinit"], [112, 2, 1, "", "setBufferSize"]], "PsdMesh": [[113, 1, 1, "", "elecComptList"], [113, 1, 1, "", "elecComptMap"], [113, 1, 1, "", "endVoxelInCompt"], [113, 2, 1, "", "getElecComptList"], [113, 2, 1, "", "getElecComptMap"], [113, 2, 1, "", "getEndVoxelInCompt"], [113, 2, 1, "", "getNeuronVoxel"], [113, 2, 1, "", "getStartVoxelInCompt"], [113, 2, 1, "", "getThickness"], [113, 1, 1, "", "neuronVoxel"], [113, 2, 1, "", "psdList"], [113, 2, 1, "", "setThickness"], [113, 1, 1, "", "startVoxelInCompt"], [113, 1, 1, "", "thickness"]], "PulseGen": [[114, 1, 1, "", "baseLevel"], [114, 1, 1, "", "count"], [114, 1, 1, "", "delay"], [114, 2, 1, "", "delayIn"], [114, 1, 1, "", "firstDelay"], [114, 1, 1, "", "firstLevel"], [114, 1, 1, "", "firstWidth"], [114, 2, 1, "", "getBaseLevel"], [114, 2, 1, "", "getCount"], [114, 2, 1, "", "getDelay"], [114, 2, 1, "", "getFirstDelay"], [114, 2, 1, "", "getFirstLevel"], [114, 2, 1, "", "getFirstWidth"], [114, 2, 1, "", "getLevel"], [114, 2, 1, "", "getOutputValue"], [114, 2, 1, "", "getSecondDelay"], [114, 2, 1, "", "getSecondLevel"], [114, 2, 1, "", "getSecondWidth"], [114, 2, 1, "", "getTrigMode"], [114, 2, 1, "", "getWidth"], [114, 2, 1, "", "input"], [114, 1, 1, "", "level"], [114, 2, 1, "", "levelIn"], [114, 1, 1, "", "output"], [114, 1, 1, "", "outputValue"], [114, 1, 1, "", "proc"], [114, 2, 1, "", "process"], [114, 2, 1, "", "reinit"], [114, 1, 1, "", "secondDelay"], [114, 1, 1, "", "secondLevel"], [114, 1, 1, "", "secondWidth"], [114, 2, 1, "", "setBaseLevel"], [114, 2, 1, "", "setCount"], [114, 2, 1, "", "setDelay"], [114, 2, 1, "", "setFirstDelay"], [114, 2, 1, "", "setFirstLevel"], [114, 2, 1, "", "setFirstWidth"], [114, 2, 1, "", "setLevel"], [114, 2, 1, "", "setSecondDelay"], [114, 2, 1, "", "setSecondLevel"], [114, 2, 1, "", "setSecondWidth"], [114, 2, 1, "", "setTrigMode"], [114, 2, 1, "", "setWidth"], [114, 1, 1, "", "trigMode"], [114, 1, 1, "", "width"], [114, 2, 1, "", "widthIn"]], "PyRun": [[115, 2, 1, "", "getInitString"], [115, 2, 1, "", "getInputVar"], [115, 2, 1, "", "getMode"], [115, 2, 1, "", "getOutputVar"], [115, 2, 1, "", "getRunString"], [115, 1, 1, "", "initString"], [115, 1, 1, "", "inputVar"], [115, 1, 1, "", "mode"], [115, 1, 1, "", "output"], [115, 1, 1, "", "outputVar"], [115, 1, 1, "", "proc"], [115, 2, 1, "", "process"], [115, 2, 1, "", "reinit"], [115, 2, 1, "", "run"], [115, 1, 1, "", "runString"], [115, 2, 1, "", "setInitString"], [115, 2, 1, "", "setInputVar"], [115, 2, 1, "", "setMode"], [115, 2, 1, "", "setOutputVar"], [115, 2, 1, "", "setRunString"], [115, 2, 1, "", "trigger"]], "QIF": [[116, 1, 1, "", "a0"], [116, 2, 1, "", "getA0"], [116, 2, 1, "", "getVCritical"], [116, 2, 1, "", "setA0"], [116, 2, 1, "", "setVCritical"], [116, 1, 1, "", "vCritical"]], "RandGenerator": [[117, 2, 1, "", "getMean"], [117, 2, 1, "", "getSample"], [117, 2, 1, "", "getVariance"], [117, 1, 1, "", "mean"], [117, 1, 1, "", "output"], [117, 1, 1, "", "proc"], [117, 2, 1, "", "process"], [117, 2, 1, "", "reinit"], [117, 1, 1, "", "sample"], [117, 1, 1, "", "variance"]], "RandSpike": [[118, 2, 1, "", "getHasFired"], [118, 2, 1, "", "getRate"], [118, 2, 1, "", "getRefractT"], [118, 1, 1, "", "hasFired"], [118, 1, 1, "", "proc"], [118, 2, 1, "", "process"], [118, 1, 1, "", "rate"], [118, 1, 1, "", "refractT"], [118, 2, 1, "", "reinit"], [118, 2, 1, "", "setRate"], [118, 2, 1, "", "setRefractT"], [118, 1, 1, "", "spikeOut"]], "ReacBase": [[119, 1, 1, "", "Kb"], [119, 1, 1, "", "Kf"], [119, 2, 1, "", "getKb"], [119, 2, 1, "", "getKf"], [119, 2, 1, "", "getNumKb"], [119, 2, 1, "", "getNumKf"], [119, 2, 1, "", "getNumProducts"], [119, 2, 1, "", "getNumSubstrates"], [119, 1, 1, "", "numKb"], [119, 1, 1, "", "numKf"], [119, 1, 1, "", "numProducts"], [119, 1, 1, "", "numSubstrates"], [119, 1, 1, "", "prd"], [119, 2, 1, "", "prdDest"], [119, 1, 1, "", "prdOut"], [119, 1, 1, "", "proc"], [119, 2, 1, "", "process"], [119, 2, 1, "", "reinit"], [119, 2, 1, "", "setKb"], [119, 2, 1, "", "setKf"], [119, 2, 1, "", "setNumKb"], [119, 2, 1, "", "setNumKf"], [119, 1, 1, "", "sub"], [119, 2, 1, "", "subDest"], [119, 1, 1, "", "subOut"]], "STDPSynHandler": [[120, 1, 1, "", "aMinus"], [120, 1, 1, "", "aMinus0"], [120, 1, 1, "", "aPlus0"], [120, 2, 1, "", "addPostSpike"], [120, 2, 1, "", "getAMinus"], [120, 2, 1, "", "getAMinus0"], [120, 2, 1, "", "getAPlus0"], [120, 2, 1, "", "getNumSynapse"], [120, 2, 1, "", "getTauMinus"], [120, 2, 1, "", "getTauPlus"], [120, 2, 1, "", "getWeightMax"], [120, 2, 1, "", "getWeightMin"], [120, 2, 1, "", "setAMinus"], [120, 2, 1, "", "setAMinus0"], [120, 2, 1, "", "setAPlus0"], [120, 2, 1, "", "setNumSynapse"], [120, 2, 1, "", "setTauMinus"], [120, 2, 1, "", "setTauPlus"], [120, 2, 1, "", "setWeightMax"], [120, 2, 1, "", "setWeightMin"], [120, 1, 1, "", "tauMinus"], [120, 1, 1, "", "tauPlus"], [120, 1, 1, "", "weightMax"], [120, 1, 1, "", "weightMin"]], "STDPSynapse": [[121, 1, 1, "", "aPlus"], [121, 2, 1, "", "getAPlus"], [121, 2, 1, "", "setAPlus"]], "SeqSynHandler": [[122, 2, 1, "", "getHistory"], [122, 2, 1, "", "getHistoryTime"], [122, 2, 1, "", "getKernel"], [122, 2, 1, "", "getKernelEquation"], [122, 2, 1, "", "getKernelWidth"], [122, 2, 1, "", "getNumSynapse"], [122, 2, 1, "", "getResponseScale"], [122, 2, 1, "", "getSeqActivation"], [122, 2, 1, "", "getSeqDt"], [122, 2, 1, "", "getWeightScale"], [122, 2, 1, "", "getWeightScaleVec"], [122, 1, 1, "", "history"], [122, 1, 1, "", "historyTime"], [122, 1, 1, "", "kernel"], [122, 1, 1, "", "kernelEquation"], [122, 1, 1, "", "kernelWidth"], [122, 1, 1, "", "responseScale"], [122, 1, 1, "", "seqActivation"], [122, 1, 1, "", "seqDt"], [122, 2, 1, "", "setHistoryTime"], [122, 2, 1, "", "setKernelEquation"], [122, 2, 1, "", "setKernelWidth"], [122, 2, 1, "", "setNumSynapse"], [122, 2, 1, "", "setResponseScale"], [122, 2, 1, "", "setSeqDt"], [122, 2, 1, "", "setWeightScale"], [122, 1, 1, "", "weightScale"], [122, 1, 1, "", "weightScaleVec"]], "Shell": [[123, 2, 1, "", "addMsg"], [123, 2, 1, "", "copy"], [123, 2, 1, "", "create"], [123, 2, 1, "", "delete"], [123, 2, 1, "", "move"], [123, 2, 1, "", "quit"], [123, 2, 1, "", "setclock"], [123, 2, 1, "", "useClock"]], "SimpleSynHandler": [[124, 2, 1, "", "getNumSynapse"], [124, 2, 1, "", "setNumSynapse"]], "SingleMsg": [[125, 2, 1, "", "getI1"], [125, 2, 1, "", "getI2"], [125, 1, 1, "", "i1"], [125, 1, 1, "", "i2"], [125, 2, 1, "", "setI1"], [125, 2, 1, "", "setI2"]], "SparseMsg": [[126, 2, 1, "", "clear"], [126, 2, 1, "", "getNumColumns"], [126, 2, 1, "", "getNumEntries"], [126, 2, 1, "", "getNumRows"], [126, 2, 1, "", "getProbability"], [126, 2, 1, "", "getSeed"], [126, 1, 1, "", "numColumns"], [126, 1, 1, "", "numEntries"], [126, 1, 1, "", "numRows"], [126, 2, 1, "", "pairFill"], [126, 1, 1, "", "probability"], [126, 1, 1, "", "seed"], [126, 2, 1, "", "setEntry"], [126, 2, 1, "", "setProbability"], [126, 2, 1, "", "setRandomConnectivity"], [126, 2, 1, "", "setSeed"], [126, 2, 1, "", "transpose"], [126, 2, 1, "", "tripletFill"], [126, 2, 1, "", "unsetEntry"]], "Species": [[127, 2, 1, "", "getMolWt"], [127, 2, 1, "", "handleMolWtRequest"], [127, 1, 1, "", "molWt"], [127, 1, 1, "", "molWtOut"], [127, 1, 1, "", "pool"], [127, 2, 1, "", "setMolWt"]], "SpikeGen": [[128, 2, 1, "", "Vm"], [128, 1, 1, "", "edgeTriggered"], [128, 2, 1, "", "getEdgeTriggered"], [128, 2, 1, "", "getHasFired"], [128, 2, 1, "", "getRefractT"], [128, 2, 1, "", "getThreshold"], [128, 1, 1, "", "hasFired"], [128, 1, 1, "", "proc"], [128, 2, 1, "", "process"], [128, 1, 1, "", "refractT"], [128, 2, 1, "", "reinit"], [128, 2, 1, "", "setEdgeTriggered"], [128, 2, 1, "", "setRefractT"], [128, 2, 1, "", "setThreshold"], [128, 1, 1, "", "spikeOut"], [128, 1, 1, "", "threshold"]], "SpikeStats": [[129, 2, 1, "", "Vm"], [129, 2, 1, "", "addSpike"], [129, 2, 1, "", "getThreshold"], [129, 2, 1, "", "setThreshold"], [129, 1, 1, "", "threshold"]], "Spine": [[130, 2, 1, "", "getHeadDiameter"], [130, 2, 1, "", "getHeadLength"], [130, 2, 1, "", "getHeadVolume"], [130, 2, 1, "", "getPsdArea"], [130, 2, 1, "", "getShaftDiameter"], [130, 2, 1, "", "getShaftLength"], [130, 2, 1, "", "getTotalLength"], [130, 1, 1, "", "headDiameter"], [130, 1, 1, "", "headLength"], [130, 1, 1, "", "headVolume"], [130, 1, 1, "", "psdArea"], [130, 2, 1, "", "setHeadDiameter"], [130, 2, 1, "", "setHeadLength"], [130, 2, 1, "", "setHeadVolume"], [130, 2, 1, "", "setPsdArea"], [130, 2, 1, "", "setShaftDiameter"], [130, 2, 1, "", "setShaftLength"], [130, 2, 1, "", "setTotalLength"], [130, 1, 1, "", "shaftDiameter"], [130, 1, 1, "", "shaftLength"], [130, 1, 1, "", "totalLength"]], "SpineMesh": [[131, 1, 1, "", "elecComptList"], [131, 1, 1, "", "elecComptMap"], [131, 1, 1, "", "endVoxelInCompt"], [131, 2, 1, "", "getElecComptList"], [131, 2, 1, "", "getElecComptMap"], [131, 2, 1, "", "getEndVoxelInCompt"], [131, 2, 1, "", "getNeuronVoxel"], [131, 2, 1, "", "getParentVoxel"], [131, 2, 1, "", "getStartVoxelInCompt"], [131, 1, 1, "", "neuronVoxel"], [131, 1, 1, "", "parentVoxel"], [131, 2, 1, "", "spineList"], [131, 1, 1, "", "startVoxelInCompt"]], "Stats": [[132, 2, 1, "", "getMean"], [132, 2, 1, "", "getNum"], [132, 2, 1, "", "getSdev"], [132, 2, 1, "", "getSum"], [132, 2, 1, "", "getWindowLength"], [132, 2, 1, "", "getWmean"], [132, 2, 1, "", "getWnum"], [132, 2, 1, "", "getWsdev"], [132, 2, 1, "", "getWsum"], [132, 2, 1, "", "input"], [132, 1, 1, "", "mean"], [132, 1, 1, "", "num"], [132, 1, 1, "", "proc"], [132, 2, 1, "", "process"], [132, 2, 1, "", "reinit"], [132, 1, 1, "", "requestOut"], [132, 1, 1, "", "sdev"], [132, 2, 1, "", "setWindowLength"], [132, 1, 1, "", "sum"], [132, 1, 1, "", "windowLength"], [132, 1, 1, "", "wmean"], [132, 1, 1, "", "wnum"], [132, 1, 1, "", "wsdev"], [132, 1, 1, "", "wsum"]], "SteadyState": [[133, 1, 1, "", "badStoichiometry"], [133, 1, 1, "", "convergenceCriterion"], [133, 1, 1, "", "eigenvalues"], [133, 2, 1, "", "getBadStoichiometry"], [133, 2, 1, "", "getConvergenceCriterion"], [133, 2, 1, "", "getEigenvalues"], [133, 2, 1, "", "getIsInitialized"], [133, 2, 1, "", "getMaxIter"], [133, 2, 1, "", "getNIter"], [133, 2, 1, "", "getNNegEigenvalues"], [133, 2, 1, "", "getNPosEigenvalues"], [133, 2, 1, "", "getNumVarPools"], [133, 2, 1, "", "getRank"], [133, 2, 1, "", "getSolutionStatus"], [133, 2, 1, "", "getStateType"], [133, 2, 1, "", "getStatus"], [133, 2, 1, "", "getStoich"], [133, 2, 1, "", "getTotal"], [133, 1, 1, "", "isInitialized"], [133, 1, 1, "", "maxIter"], [133, 1, 1, "", "nIter"], [133, 1, 1, "", "nNegEigenvalues"], [133, 1, 1, "", "nPosEigenvalues"], [133, 1, 1, "", "numVarPools"], [133, 2, 1, "", "randomInit"], [133, 1, 1, "", "rank"], [133, 2, 1, "", "resettle"], [133, 2, 1, "", "setConvergenceCriterion"], [133, 2, 1, "", "setMaxIter"], [133, 2, 1, "", "setStoich"], [133, 2, 1, "", "setTotal"], [133, 2, 1, "", "settle"], [133, 2, 1, "", "setupMatrix"], [133, 2, 1, "", "showMatrices"], [133, 1, 1, "", "solutionStatus"], [133, 1, 1, "", "stateType"], [133, 1, 1, "", "status"], [133, 1, 1, "", "stoich"], [133, 1, 1, "", "total"]], "StimulusTable": [[134, 1, 1, "", "doLoop"], [134, 2, 1, "", "getDoLoop"], [134, 2, 1, "", "getLoopTime"], [134, 2, 1, "", "getStartTime"], [134, 2, 1, "", "getStepPosition"], [134, 2, 1, "", "getStepSize"], [134, 2, 1, "", "getStopTime"], [134, 1, 1, "", "loopTime"], [134, 1, 1, "", "output"], [134, 1, 1, "", "proc"], [134, 2, 1, "", "process"], [134, 2, 1, "", "reinit"], [134, 2, 1, "", "setDoLoop"], [134, 2, 1, "", "setLoopTime"], [134, 2, 1, "", "setStartTime"], [134, 2, 1, "", "setStepPosition"], [134, 2, 1, "", "setStepSize"], [134, 2, 1, "", "setStopTime"], [134, 1, 1, "", "startTime"], [134, 1, 1, "", "stepPosition"], [134, 1, 1, "", "stepSize"], [134, 1, 1, "", "stopTime"]], "Stoich": [[135, 2, 1, "", "buildXreacs"], [135, 1, 1, "", "columnIndex"], [135, 1, 1, "", "compartment"], [135, 1, 1, "", "dsolve"], [135, 2, 1, "", "filterXreacs"], [135, 2, 1, "", "getColumnIndex"], [135, 2, 1, "", "getCompartment"], [135, 2, 1, "", "getDsolve"], [135, 2, 1, "", "getKsolve"], [135, 2, 1, "", "getMatrixEntry"], [135, 2, 1, "", "getNumAllPools"], [135, 2, 1, "", "getNumBufPools"], [135, 2, 1, "", "getNumProxyPools"], [135, 2, 1, "", "getNumRates"], [135, 2, 1, "", "getNumVarPools"], [135, 2, 1, "", "getPath"], [135, 2, 1, "", "getPoolIdMap"], [135, 2, 1, "", "getProxyPools"], [135, 2, 1, "", "getRowStart"], [135, 2, 1, "", "getStatus"], [135, 1, 1, "", "ksolve"], [135, 1, 1, "", "matrixEntry"], [135, 1, 1, "", "numAllPools"], [135, 1, 1, "", "numBufPools"], [135, 1, 1, "", "numProxyPools"], [135, 1, 1, "", "numRates"], [135, 1, 1, "", "numVarPools"], [135, 1, 1, "", "path"], [135, 1, 1, "", "poolIdMap"], [135, 1, 1, "", "proxyPools"], [135, 1, 1, "", "rowStart"], [135, 2, 1, "", "scaleBufsAndRates"], [135, 2, 1, "", "setCompartment"], [135, 2, 1, "", "setDsolve"], [135, 2, 1, "", "setKsolve"], [135, 2, 1, "", "setPath"], [135, 1, 1, "", "status"], [135, 2, 1, "", "unzombify"]], "Streamer": [[136, 2, 1, "", "addTable"], [136, 2, 1, "", "addTables"], [136, 1, 1, "", "format"], [136, 2, 1, "", "getFormat"], [136, 2, 1, "", "getNumTables"], [136, 2, 1, "", "getOutfile"], [136, 1, 1, "", "numTables"], [136, 1, 1, "", "outfile"], [136, 1, 1, "", "proc"], [136, 2, 1, "", "process"], [136, 2, 1, "", "reinit"], [136, 2, 1, "", "removeTable"], [136, 2, 1, "", "removeTables"], [136, 2, 1, "", "setFormat"], [136, 2, 1, "", "setOutfile"]], "SymCompartment": [[137, 1, 1, "", "cylinder"], [137, 1, 1, "", "cylinderOut"], [137, 1, 1, "", "distal"], [137, 1, 1, "id8", "distalOut"], [137, 1, 1, "", "proximal"], [137, 1, 1, "", "proximalOnly"], [137, 1, 1, "id9", "proximalOut"], [137, 2, 1, "", "raxialCylinder"], [137, 2, 1, "id4", "raxialSphere"], [137, 2, 1, "id2", "raxialSym"], [137, 1, 1, "", "sibling"], [137, 1, 1, "", "sphere"], [137, 2, 1, "id3", "sumRaxial"], [137, 1, 1, "id7", "sumRaxialOut"]], "SynChan": [[138, 2, 1, "", "activation"], [138, 2, 1, "", "getNormalizeWeights"], [138, 2, 1, "", "getTau1"], [138, 2, 1, "", "getTau2"], [138, 1, 1, "", "normalizeWeights"], [138, 2, 1, "", "setNormalizeWeights"], [138, 2, 1, "", "setTau1"], [138, 2, 1, "", "setTau2"], [138, 1, 1, "", "tau1"], [138, 1, 1, "", "tau2"]], "SynHandlerBase": [[139, 1, 1, "", "activationOut"], [139, 2, 1, "", "getNumSynapses"], [139, 1, 1, "", "numSynapses"], [139, 1, 1, "", "proc"], [139, 2, 1, "", "process"], [139, 2, 1, "", "reinit"], [139, 2, 1, "", "setNumSynapses"]], "Synapse": [[140, 2, 1, "", "addSpike"], [140, 1, 1, "", "delay"], [140, 2, 1, "", "getDelay"], [140, 2, 1, "", "getWeight"], [140, 2, 1, "", "setDelay"], [140, 2, 1, "", "setWeight"], [140, 1, 1, "", "weight"]], "Table": [[141, 1, 1, "", "format"], [141, 2, 1, "", "getFormat"], [141, 2, 1, "", "getName"], [141, 2, 1, "", "getOutfile"], [141, 2, 1, "", "getThreshold"], [141, 2, 1, "", "getUseStreamer"], [141, 2, 1, "", "input"], [141, 1, 1, "", "name"], [141, 1, 1, "", "outfile"], [141, 1, 1, "", "proc"], [141, 2, 1, "", "process"], [141, 2, 1, "", "reinit"], [141, 1, 1, "", "requestOut"], [141, 2, 1, "", "setFormat"], [141, 2, 1, "", "setName"], [141, 2, 1, "", "setOutfile"], [141, 2, 1, "", "setThreshold"], [141, 2, 1, "", "setUseStreamer"], [141, 2, 1, "", "spike"], [141, 1, 1, "", "threshold"], [141, 1, 1, "", "useStreamer"]], "Table2": [[142, 1, 1, "", "format"], [142, 2, 1, "", "getFormat"], [142, 2, 1, "", "getName"], [142, 2, 1, "", "getOutfile"], [142, 2, 1, "", "getThreshold"], [142, 2, 1, "", "getUseStreamer"], [142, 2, 1, "", "input"], [142, 1, 1, "", "name"], [142, 1, 1, "", "outfile"], [142, 1, 1, "", "proc"], [142, 2, 1, "", "process"], [142, 2, 1, "", "reinit"], [142, 1, 1, "", "requestOut"], [142, 2, 1, "", "setFormat"], [142, 2, 1, "", "setName"], [142, 2, 1, "", "setOutfile"], [142, 2, 1, "", "setThreshold"], [142, 2, 1, "", "setUseStreamer"], [142, 2, 1, "", "spike"], [142, 1, 1, "", "threshold"], [142, 1, 1, "", "useStreamer"]], "TableBase": [[143, 2, 1, "", "clearVec"], [143, 2, 1, "", "compareVec"], [143, 2, 1, "", "compareXplot"], [143, 2, 1, "", "getOutputValue"], [143, 2, 1, "", "getSize"], [143, 2, 1, "", "getVector"], [143, 2, 1, "", "getY"], [143, 2, 1, "", "linearTransform"], [143, 2, 1, "", "loadCSV"], [143, 2, 1, "", "loadXplot"], [143, 2, 1, "", "loadXplotRange"], [143, 1, 1, "", "outputValue"], [143, 2, 1, "", "plainPlot"], [143, 2, 1, "", "setVector"], [143, 1, 1, "", "size"], [143, 1, 1, "", "vector"], [143, 2, 1, "", "xplot"], [143, 1, 1, "", "y"]], "TimeTable": [[144, 1, 1, "", "eventOut"], [144, 1, 1, "", "filename"], [144, 2, 1, "", "getFilename"], [144, 2, 1, "", "getMethod"], [144, 2, 1, "", "getState"], [144, 1, 1, "", "method"], [144, 1, 1, "", "proc"], [144, 2, 1, "", "process"], [144, 2, 1, "", "reinit"], [144, 2, 1, "", "setFilename"], [144, 2, 1, "", "setMethod"], [144, 1, 1, "", "state"]], "UniformRng": [[145, 2, 1, "", "getMax"], [145, 2, 1, "", "getMin"], [145, 1, 1, "", "max"], [145, 1, 1, "", "min"], [145, 2, 1, "", "setMax"], [145, 2, 1, "", "setMin"]], "VClamp": [[146, 1, 1, "", "command"], [146, 2, 1, "", "commandIn"], [146, 1, 1, "", "current"], [146, 1, 1, "", "currentOut"], [146, 1, 1, "", "gain"], [146, 2, 1, "", "getCommand"], [146, 2, 1, "", "getCurrent"], [146, 2, 1, "", "getGain"], [146, 2, 1, "", "getMode"], [146, 2, 1, "", "getSensed"], [146, 2, 1, "", "getTau"], [146, 2, 1, "", "getTd"], [146, 2, 1, "", "getTi"], [146, 1, 1, "", "mode"], [146, 1, 1, "", "proc"], [146, 2, 1, "", "process"], [146, 2, 1, "", "reinit"], [146, 1, 1, "", "sensed"], [146, 2, 1, "", "sensedIn"], [146, 2, 1, "", "setGain"], [146, 2, 1, "", "setMode"], [146, 2, 1, "", "setTau"], [146, 2, 1, "", "setTd"], [146, 2, 1, "", "setTi"], [146, 1, 1, "", "tau"], [146, 1, 1, "", "td"], [146, 1, 1, "", "ti"]], "Variable": [[147, 2, 1, "", "getValue"], [147, 2, 1, "", "input"], [147, 2, 1, "", "setValue"], [147, 1, 1, "", "value"]], "VectorTable": [[148, 2, 1, "", "getInvdx"], [148, 2, 1, "", "getLookupindex"], [148, 2, 1, "", "getLookupvalue"], [148, 2, 1, "", "getTable"], [148, 2, 1, "", "getXdivs"], [148, 2, 1, "", "getXmax"], [148, 2, 1, "", "getXmin"], [148, 1, 1, "", "invdx"], [148, 1, 1, "", "lookupindex"], [148, 1, 1, "", "lookupvalue"], [148, 2, 1, "", "setTable"], [148, 2, 1, "", "setXdivs"], [148, 2, 1, "", "setXmax"], [148, 2, 1, "", "setXmin"], [148, 1, 1, "", "table"], [148, 1, 1, "", "xdivs"], [148, 1, 1, "", "xmax"], [148, 1, 1, "", "xmin"]], "ZombieFunction": [[151, 1, 1, "", "proc"], [151, 2, 1, "", "process"], [151, 2, 1, "", "reinit"]], "testSched": [[155, 2, 1, "", "process"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"]}, "titleterms": {"advanc": 0, "guid": [0, 1, 7], "beginn": 1, "seri": [2, 28], "chennapoda": 2, "version": 2, "3": [2, 38], "2": [2, 30], "0": 2, "chamcham": 2, "1": [2, 30], "doxygen": 3, "moos": [4, 6, 9, 18, 30, 31, 33, 34, 154], "doc": 4, "instal": [5, 6], "us": [6, 13, 16, 28, 33, 38, 152], "pre": 6, "built": 6, "packag": 6, "pip": 6, "linux": 6, "todo": [6, 11, 13], "mac": 6, "osx": 6, "docker": 6, "imag": 6, "build": [6, 13, 15, 25, 37, 38], "depend": 6, "core": 6, "python": [6, 31, 33], "interfac": [6, 13, 34], "api": 6, "pymoos": [6, 30], "graphic": [6, 29, 34], "user": 6, "gui": [6, 34], "moogli": [6, 28, 38], "intermedi": 7, "introduct": [8, 13, 34, 38], "what": [9, 13], "i": 9, "good": 9, "known": 10, "issu": 10, "releas": [11, 38], "note": 11, "chemic": [12, 13, 15, 23, 37, 156, 157], "aspect": [12, 17], "kinet": [13, 14, 15, 16], "model": [13, 14, 15, 16, 19, 20, 23, 24, 25, 30, 31, 37, 38, 156], "moosegui": [13, 18], "ar": 13, "level": 13, "numer": [13, 15], "method": [13, 15], "kinetikit": 13, "12": 13, "overview": 13, "layout": 13, "icon": 13, "compart": [13, 15, 21, 23, 37, 38, 51], "pool": [13, 110], "buffer": 13, "reaction": [13, 15, 23, 38], "mass": 13, "action": [13, 38], "enzym": 13, "micha": 13, "menten": 13, "summat": 13, "oper": 13, "load": [14, 19, 31, 38], "run": [14, 15, 19, 31, 33, 34], "save": 14, "an": [14, 30, 38], "sbml": 14, "cspace": [14, 16], "format": 14, "simpl": [15, 19, 21, 23, 25, 156], "exampl": [15, 18, 21, 23, 25, 37, 38], "set": [15, 31, 33], "up": [15, 33], "solver": 15, "script": [15, 16, 33], "With": 15, "someth": 15, "els": 15, "from": [15, 19, 31, 38], "part": 15, "cross": [15, 30], "system": [15, 38, 156], "tweak": 15, "paramet": 15, "demonstr": [15, 25, 31], "oscil": [15, 38, 157], "bistabl": [15, 156], "mapk": [15, 156], "feedback": [15, 156, 157], "loop": 15, "minim": 15, "strongli": 15, "bidirect": [15, 38], "synapt": [15, 38], "plastic": [15, 25, 26], "diffus": [15, 38], "neuron": [15, 17, 18, 19, 20, 21, 23, 25, 38, 104], "A": 15, "ture": [15, 157], "manipul": 15, "differ": 15, "chang": [15, 38], "volum": [15, 156], "feed": 15, "tabul": 15, "input": [15, 25, 38], "find": [15, 16], "steadi": [15, 16, 156], "state": [15, 16, 156], "make": 15, "dose": [15, 156], "respons": [15, 156], "curv": 15, "transport": [15, 38], "branch": 15, "dendrit": [15, 38], "tree": 15, "tutori": [16, 26, 35, 159], "defin": [16, 38], "singl": [17, 19, 23, 30, 38], "electr": [17, 37], "biophys": 17, "simul": [18, 33, 34, 38], "cubicl": 19, "compartment": [19, 25], "genesi": 19, "integr": [19, 25], "fire": [19, 25], "detail": [20, 33], "creat": [21, 33], "leaki": [21, 25], "voltag": [21, 38], "clamp": [21, 38], "gener": [21, 30], "puls": [21, 38], "synaps": [21, 25, 140], "messag": [21, 30], "transmiss": 21, "via": [21, 25], "gap": 21, "junction": 21, "insert": [21, 37], "spine": [21, 37, 38, 130], "head": [21, 38], "cook": 22, "book": 22, "multiscal": [23, 24, 38], "multi": [23, 25], "connect": [25, 33, 154], "two": 25, "cell": 25, "provid": 25, "random": [25, 38], "handler": 25, "spike": 25, "recurr": 25, "network": [25, 26, 27], "ca": 26, "base": 26, "plot": [28, 34], "matplotlib": 28, "displai": [28, 38], "time": [28, 30], "anim": 28, "valu": 28, "along": [28, 38], "axi": 28, "class": [30, 153], "One": [30, 157], "one": 30, "show": 30, "clock": [30, 31, 50], "data": 30, "tabl": [30, 141], "vector": 30, "entri": 30, "interpol": [30, 83], "diment": 30, "function": [30, 31, 38, 66, 154], "symcompart": [30, 137], "type": 30, "hdf": 30, "datatyp": 30, "nsdf": 30, "thread": 30, "mathemat": 30, "comput": 30, "arbitrari": 30, "differenti": 30, "equat": 30, "solv": 30, "harmon": 30, "oscillatori": 30, "lotka": 30, "voltera": 30, "vari": 30, "concentr": 30, "basic": [31, 33], "start": [31, 32, 33, 154], "stop": [31, 154], "quick": 32, "get": 33, "code": 33, "how": [33, 152], "thi": 33, "document": [33, 152], "import": 33, "access": 33, "object": 33, "travers": 33, "hierarchi": [33, 153], "properti": 33, "element": [33, 154], "field": 33, "put": [33, 38], "them": 33, "togeth": 33, "schedul": 33, "some": 33, "more": 33, "vec": 33, "melement": 33, "finfo": [33, 64], "move": [33, 154], "content": [34, 38], "menu": 34, "bar": 34, "file": [34, 38], "view": [34, 37, 38], "help": 34, "editor": 34, "control": [34, 38], "widget": 34, "toolbar": 34, "context": 34, "interact": 35, "rdesignu": 36, "rdesigneur": [37, 38], "signal": [37, 38], "proceed": 37, "bare": 38, "passiv": 38, "current": 38, "soma": 38, "stimulu": 38, "hh": 38, "squid": [38, 158], "axon": [38, 158], "potenti": 38, "collis": 38, "myelin": 38, "altern": 38, "non": 38, "wai": 38, "ball": 38, "stick": 38, "benchmark": 38, "speed": 38, "possion": 38, "period": 38, "primer": 38, "d": 38, "molecul": 38, "calcium": 38, "induc": 38, "intracellular": 38, "travel": 38, "cicr": 38, "trigger": 38, "span": 38, "psd": 38, "which": 38, "geometri": 38, "due": 38, "morphologi": 38, "swc": 38, "activ": 38, "channel": 38, "spini": 38, "place": 38, "spiral": 38, "command": 38, "refer": [38, 152], "turnoffelec": 38, "usegssa": 38, "combineseg": 38, "stealcellfromlibrari": 38, "verbos": 38, "addsomachemcompt": 38, "addendochemcompt": 38, "diffusionlength": 38, "temperatur": 38, "chemdt": 38, "diffdt": 38, "elecdt": 38, "chemplotdt": 38, "elecplotdt": 38, "funcdt": 38, "cellproto": 38, "spineproto": 38, "chanproto": 38, "chemproto": 38, "passivedistrib": 38, "spinedistrib": 38, "chandistrib": 38, "chemdistrib": 38, "adaptorlist": 38, "stimlist": 38, "plotlist": 38, "mooglist": 38, "adexif": 39, "adthreshif": 40, "adaptor": 41, "annot": 42, "arith": 43, "binomialrng": 44, "caconc": 45, "caconcbas": 46, "chanbas": 47, "chemcompt": 48, "cinfo": 49, "compartmentbas": 52, "cplxenzbas": 53, "cubemesh": 54, "cylmesh": 55, "diagonalmsg": 56, "difshel": 57, "diffamp": 58, "dsolv": 59, "enz": 60, "enzbas": 61, "exif": 62, "exponentialrng": 63, "func": 65, "gammarng": 67, "gapjunct": 68, "graupnerbrunel2012caplasticitysynhandl": 69, "group": 70, "gsolv": 71, "hdf5datawrit": 72, "hdf5writerbas": 73, "hhchannel": 74, "hhchannel2d": 75, "hhchannelbas": 76, "hhgate": 77, "hhgate2d": 78, "hsolv": 79, "inputvari": 80, "intfir": 81, "intfirebas": 82, "interpol2d": 84, "izhif": 85, "izhikevichnrn": 86, "ksolv": 87, "lif": 88, "leakag": 89, "markovchannel": 90, "markovgslsolv": 91, "markovratet": 92, "markovsolv": 93, "markovsolverbas": 94, "meshentri": 96, "mgblock": 97, "msg": 98, "mstring": 99, "nmdachan": 100, "nsdfwriter": 101, "nernst": 102, "neuromesh": 103, "neutral": 105, "normalrng": 106, "onetoallmsg": 107, "pidcontrol": 108, "poissonrng": 109, "poolbas": 111, "postmast": 112, "psdmesh": 113, "pulsegen": 114, "pyrun": 115, "qif": 116, "randgener": 117, "randspik": 118, "reacbas": 119, "stdpsynhandl": 120, "stdpsynaps": 121, "seqsynhandl": 122, "shell": 123, "simplesynhandl": 124, "singlemsg": 125, "sparsemsg": 126, "speci": 127, "spikegen": 128, "spikestat": 129, "spinemesh": 131, "stat": 132, "steadyst": 133, "stimulust": 134, "stoich": 135, "streamer": 136, "synchan": 138, "synhandlerbas": 139, "table2": 142, "tablebas": 143, "timet": 144, "uniformrng": 145, "vclamp": 146, "variabl": 147, "vectort": 148, "zombiecaconc": 149, "zombiecompart": 150, "zombiefunct": 151, "getfieldnam": 154, "copi": 154, "delet": 154, "useclock": 154, "setclock": 154, "reinit": 154, "isrun": 154, "exist": 154, "loadmodel": 154, "getcw": 154, "setcw": 154, "getfielddict": 154, "getfield": 154, "seed": 154, "rand": 154, "wildcardfind": 154, "quit": 154, "testsch": 155, "scale": 156, "strong": 156, "propog": 156, "finder": 156, "under": 156, "construct": 156, "slow": 157, "pattern": 157, "dimens": 157, "relax": 157, "repressil": 157, "giant": 158, "teach": 159}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Advanced Guide": [[0, "advanced-guide"]], "Beginner Guide": [[1, "beginner-guide"]], "Series chennapoda": [[2, "series-chennapoda"]], "Version 3.2.0": [[2, "version-3-2-0"]], "Series chamcham": [[2, "series-chamcham"]], "Version 3.1.3": [[2, "version-3-1-3"]], "Doxygen": [[3, "doxygen"]], "MOOSE Docs": [[4, "moose-docs"]], "Installation": [[5, "installation"]], "Use pre-built packages": [[6, "use-pre-built-packages"]], "pip": [[6, "pip"]], "Linux": [[6, "linux"]], "Todo": [[6, "id1"], [11, "id1"]], "Mac OSX": [[6, "mac-osx"]], "Docker Images": [[6, "docker-images"]], "Building MOOSE": [[6, "building-moose"]], "Install dependencies": [[6, "install-dependencies"]], "Core MOOSE": [[6, "core-moose"]], "Python interface for core MOOSE API (pymoose)": [[6, "python-interface-for-core-moose-api-pymoose"]], "Build moose": [[6, "build-moose"]], "Graphical User Interface (GUI)": [[6, "graphical-user-interface-gui"]], "Building moogli": [[6, "building-moogli"]], "Intermediate Guide": [[7, "intermediate-guide"]], "Introduction": [[8, "introduction"], [13, "introduction"], [34, "introduction"], [38, "introduction"]], "What is MOOSE and what is it good for?": [[9, "what-is-moose-and-what-is-it-good-for"]], "Known issues": [[10, "known-issues"]], "Release Notes": [[11, "release-notes"]], "Chemical Aspects": [[12, "chemical-aspects"]], "Interface for chemical kinetic models in MOOSEGUI": [[13, "interface-for-chemical-kinetic-models-in-moosegui"]], "**TODO** What are chemical kinetic models?": [[13, "todo-what-are-chemical-kinetic-models"]], "Levels of model": [[13, "levels-of-model"]], "Numerical methods": [[13, "numerical-methods"]], "Using Kinetikit 12": [[13, "using-kinetikit-12"]], "Overview": [[13, "overview"]], "Model layout and icons": [[13, "model-layout-and-icons"]], "Compartment": [[13, "compartment"], [51, "compartment"]], "Pool": [[13, "pool"], [110, "pool"]], "Buffered pools": [[13, "buffered-pools"]], "Reaction": [[13, "reaction"]], "Mass-action enzymes": [[13, "mass-action-enzymes"]], "Michaelis-Menten Enzymes": [[13, "michaelis-menten-enzymes"]], "Summation": [[13, "summation"]], "Model operations": [[13, "model-operations"]], "Model building": [[13, "model-building"]], "Load - Run - Save models": [[14, "load-run-save-models"]], "Load a Kinetic Model": [[14, "load-a-kinetic-model"]], "Load an SBML Model": [[14, "load-an-sbml-model"]], "Load a CSpace Model": [[14, "load-a-cspace-model"]], "Save a model into SBML format": [[14, "save-a-model-into-sbml-format"]], "Save a model": [[14, "save-a-model"]], "Simple Examples": [[15, "simple-examples"], [21, "simple-examples"], [23, "simple-examples"], [25, "simple-examples"]], "Set-up a kinetic solver and model": [[15, "set-up-a-kinetic-solver-and-model"]], "with Scripting": [[15, "with-scripting"]], "With something else": [[15, "with-something-else"]], "Building a chemical Model from Parts": [[15, "building-a-chemical-model-from-parts"]], "Cross-Compartment Reaction Systems": [[15, "cross-compartment-reaction-systems"]], "Tweaking Parameters": [[15, "tweaking-parameters"]], "Models' Demonstration": [[15, "models-demonstration"]], "Oscillation Model": [[15, "oscillation-model"]], "Bistability Models": [[15, "bistability-models"]], "MAPK feedback loop model": [[15, "mapk-feedback-loop-model"]], "Simple minimal bistable model": [[15, "simple-minimal-bistable-model"]], "Strongly bistable Model": [[15, "strongly-bistable-model"]], "Model of bidirectional synaptic plasticity": [[15, "model-of-bidirectional-synaptic-plasticity"]], "Reaction Diffusion Models": [[15, "reaction-diffusion-models"]], "Neuronal Diffusion Reaction": [[15, "neuronal-diffusion-reaction"]], "A Turing Model": [[15, "a-turing-model"]], "Reaction Diffusion in Neurons": [[15, "reaction-diffusion-in-neurons"]], "Manipulating Chemical Models": [[15, "manipulating-chemical-models"]], "Running with different numerical methods": [[15, "running-with-different-numerical-methods"]], "Changing volumes": [[15, "changing-volumes"]], "Feeding tabulated input to a model": [[15, "feeding-tabulated-input-to-a-model"]], "Finding steady states": [[15, "finding-steady-states"]], "Making a dose-response curve": [[15, "making-a-dose-response-curve"]], "Transport in branching dendritic tree": [[15, "transport-in-branching-dendritic-tree"]], "Tutorials": [[16, "tutorials"], [26, "tutorials"]], "Finding Steady State (CSpace)": [[16, "finding-steady-state-cspace"]], "Define a kinetic model using the scripting": [[16, "define-a-kinetic-model-using-the-scripting"]], "Single Neuron Electrical Aspects (BioPhysics)": [[17, "single-neuron-electrical-aspects-biophysics"]], "Neuronal simulations in MOOSEGUI": [[18, "neuronal-simulations-in-moosegui"]], "moose-examples": [[18, "moose-examples"]], "Load and Run simple models": [[19, "load-and-run-simple-models"]], "Single Cubicle Compartmental Neuron": [[19, "single-cubicle-compartmental-neuron"]], "Single Neuron Model": [[19, "single-neuron-model"]], "Load neuron model from GENESIS": [[19, "load-neuron-model-from-genesis"]], "Integrate-and-fire models": [[19, "integrate-and-fire-models"]], "Neuron Modeling": [[20, "neuron-modeling"]], "Modeling details": [[20, "modeling-details"]], "Create a Leaky Neuron": [[21, "create-a-leaky-neuron"]], "Create a Leaky Compartment": [[21, "create-a-leaky-compartment"]], "Voltage Clamping": [[21, "voltage-clamping"]], "Generate Pulse": [[21, "generate-pulse"]], "Synapse": [[21, "synapse"], [140, "synapse"]], "Message transmission via synapse": [[21, "message-transmission-via-synapse"]], "Gap Junction": [[21, "gap-junction"]], "Insert Spine heads": [[21, "insert-spine-heads"]], "Cook Book": [[22, "cook-book"]], "Single-compartment multiscale model": [[23, "single-compartment-multiscale-model"]], "Multi compartment Single Neuron Model": [[23, "multi-compartment-single-neuron-model"]], "Modeling chemical reactions in neurons": [[23, "modeling-chemical-reactions-in-neurons"]], "MultiScale Modeling": [[24, "multiscale-modeling"]], "Connecting two cells via a synapse": [[25, "connecting-two-cells-via-a-synapse"]], "Multi Compartmental Leaky Neurons": [[25, "multi-compartmental-leaky-neurons"]], "Providing random input to a cell": [[25, "providing-random-input-to-a-cell"]], "Plastic synapse": [[25, "plastic-synapse"]], "Synapse Handler for Spikes": [[25, "synapse-handler-for-spikes"]], "Recurrent integrate-and-fire network": [[25, "recurrent-integrate-and-fire-network"]], "Recurrent integrate-and-fire network with plasticity": [[25, "recurrent-integrate-and-fire-network-with-plasticity"]], "Demonstration Models": [[25, "demonstration-models"]], "Building Models": [[25, "building-models"]], "Network with Ca-based plasticity": [[26, "network-with-ca-based-plasticity"]], "Networking": [[27, "networking"]], "MOOGLI": [[28, "moogli"]], "Use Moogli for plotting": [[28, "use-moogli-for-plotting"]], "MatPlotLib": [[28, "matplotlib"]], "Displaying time-series plots": [[28, "displaying-time-series-plots"]], "Animation of values along axis": [[28, "animation-of-values-along-axis"]], "Graphics": [[29, "graphics"]], "MOOSE Classes": [[30, "moose-classes"]], "Messages": [[30, "messages"]], "One-to-one message": [[30, "one-to-one-message"]], "Show the message": [[30, "show-the-message"]], "Single Message Cross": [[30, "single-message-cross"]], "Time": [[30, "time"]], "Clocks": [[30, "clocks"]], "Generating Time Data Table": [[30, "generating-time-data-table"]], "Vectors": [[30, "vectors"]], "Data Entries": [[30, "data-entries"]], "Interpolation": [[30, "interpolation"]], "1-dimentional Interpolation": [[30, "dimentional-interpolation"]], "2-dimentional interpolation": [[30, "id1"]], "Function": [[30, "function"], [66, "function"]], "SymCompartment": [[30, "symcompartment"], [137, "symcompartment"]], "Tables": [[30, "tables"]], "Data Types": [[30, "data-types"]], "HDF DataType": [[30, "hdf-datatype"]], "NSDF DataType": [[30, "nsdf-datatype"]], "Threading": [[30, "threading"]], "PyMoose": [[30, "pymoose"]], "Mathematics with MOOSE": [[30, "mathematics-with-moose"]], "Computing an arbitrary function": [[30, "computing-an-arbitrary-function"]], "Differential Equation Solving": [[30, "differential-equation-solving"]], "Harmonic Oscillatory Function": [[30, "harmonic-oscillatory-function"]], "Lotka-Voltera Model": [[30, "lotka-voltera-model"]], "Vary Concentration with mathematical function": [[30, "vary-concentration-with-mathematical-function"]], "Demonstration of basic functionalities": [[31, "demonstration-of-basic-functionalities"]], "Load and Run a Model": [[31, "load-and-run-a-model"]], "Start, Stop, and setting clocks": [[31, "start-stop-and-setting-clocks"]], "Run Python from MOOSE": [[31, "run-python-from-moose"]], "Quick Start": [[32, "quick-start"]], "Getting started with python scripting for MOOSE": [[33, "getting-started-with-python-scripting-for-moose"]], "Coding basics and how to use this document": [[33, "coding-basics-and-how-to-use-this-document"]], "Importing moose and accessing documentation": [[33, "importing-moose-and-accessing-documentation"]], "Creating objects and traversing the object hierarchy": [[33, "creating-objects-and-traversing-the-object-hierarchy"]], "Setting the properties of elements: accessing fields": [[33, "setting-the-properties-of-elements-accessing-fields"]], "Putting them together: setting up connections": [[33, "putting-them-together-setting-up-connections"]], "Scheduling": [[33, "scheduling"]], "Running the simulation": [[33, "running-the-simulation"]], "Some more details": [[33, "some-more-details"]], "vec, melement and element": [[33, "vec-melement-and-element"]], "Finfos": [[33, "finfos"]], "Moving on": [[33, "moving-on"]], "MOOSE GUI: Graphical interface for MOOSE": [[34, "moose-gui-graphical-interface-for-moose"]], "Contents": [[34, "contents"], [38, "contents"], [38, "id1"]], "Interface": [[34, "interface"]], "Menu Bar": [[34, "id1"]], "File": [[34, "file"]], "View": [[34, "view"]], "Help": [[34, "help"]], "Editor View": [[34, "id4"]], "Run View": [[34, "id5"]], "Simulation Controls": [[34, "simulation-controls"]], "Plot Widget": [[34, "plot-widget"]], "Toolbar": [[34, "toolbar"]], "Context Menu": [[34, "context-menu"]], "Interactive Tutorials": [[35, "interactive-tutorials"]], "Rdesignuer": [[36, "rdesignuer"]], "Rdesigneur Examples": [[37, "rdesigneur-examples"]], "Building Chemical-Electrical Signalling Models": [[37, "building-chemical-electrical-signalling-models"]], "Building a compartment": [[37, "building-a-compartment"]], "Inserting Spines and viewing": [[37, "inserting-spines-and-viewing"]], "Proceeding with Spines": [[37, "proceeding-with-spines"]], "Rdesigneur: Building multiscale models": [[38, "rdesigneur-building-multiscale-models"]], "Rdesigneur examples": [[38, "rdesigneur-examples"]], "Bare Rdesigneur: single passive compartment": [[38, "bare-rdesigneur-single-passive-compartment"]], "Simulate and display current pulse to soma": [[38, "simulate-and-display-current-pulse-to-soma"]], "Simulate and display voltage clamp stimulus to soma": [[38, "simulate-and-display-voltage-clamp-stimulus-to-soma"]], "HH Squid model in a single compartment": [[38, "hh-squid-model-in-a-single-compartment"]], "HH Squid model with voltage clamp": [[38, "hh-squid-model-with-voltage-clamp"]], "HH Squid model in an axon": [[38, "hh-squid-model-in-an-axon"]], "Action potential collision in HH Squid axon model": [[38, "action-potential-collision-in-hh-squid-axon-model"]], "HH Squid model in a myelinated axon": [[38, "hh-squid-model-in-a-myelinated-axon"]], "Alternate (non-squid) way to define soma": [[38, "alternate-non-squid-way-to-define-soma"]], "Ball-and-stick model of a neuron": [[38, "ball-and-stick-model-of-a-neuron"]], "Benchmarking simulation speed": [[38, "benchmarking-simulation-speed"]], "Synaptic stimulus: random (Possion)": [[38, "synaptic-stimulus-random-possion"]], "Synaptic stimulus: periodic": [[38, "synaptic-stimulus-periodic"]], "Reaction system in a single compartment": [[38, "reaction-system-in-a-single-compartment"]], "Reaction-diffusion system": [[38, "reaction-diffusion-system"]], "Primer on using the 3-D MOOGLI display": [[38, "primer-on-using-the-3-d-moogli-display"]], "Diffusion of a single molecule": [[38, "diffusion-of-a-single-molecule"]], "Calcium-induced calcium release": [[38, "calcium-induced-calcium-release"]], "Intracellular transport": [[38, "intracellular-transport"]], "Travelling oscillator": [[38, "travelling-oscillator"]], "Bidirectional transport": [[38, "bidirectional-transport"]], "Controlling a reaction by a function": [[38, "controlling-a-reaction-by-a-function"]], "Multiscale models: single compartment": [[38, "multiscale-models-single-compartment"]], "Multiscale model of CICR in dendrite triggered by synaptic input": [[38, "multiscale-model-of-cicr-in-dendrite-triggered-by-synaptic-input"]], "Multiscale model spanning PSD, spine head and dendrite": [[38, "multiscale-model-spanning-psd-spine-head-and-dendrite"]], "Multiscale model in which spine geometry changes due to signaling": [[38, "multiscale-model-in-which-spine-geometry-changes-due-to-signaling"]], "Morphology: Load .swc morphology file and view it": [[38, "morphology-load-swc-morphology-file-and-view-it"]], "Build an active neuron model by putting channels into a morphology file": [[38, "build-an-active-neuron-model-by-putting-channels-into-a-morphology-file"]], "Build a spiny neuron from a morphology file and put active channels in it.": [[38, "build-a-spiny-neuron-from-a-morphology-file-and-put-active-channels-in-it"]], "Place spines in a spiral along a dendrite": [[38, "place-spines-in-a-spiral-along-a-dendrite"]], "Rdesigneur command reference": [[38, "rdesigneur-command-reference"]], "turnOffElec": [[38, "turnoffelec"]], "useGssa": [[38, "usegssa"]], "combineSegments": [[38, "combinesegments"]], "stealCellFromLibrary": [[38, "stealcellfromlibrary"]], "verbose": [[38, "verbose"]], "addSomaChemCompt": [[38, "addsomachemcompt"]], "addEndoChemCompt": [[38, "addendochemcompt"]], "diffusionLength": [[38, "diffusionlength"]], "temperature": [[38, "temperature"]], "chemDt": [[38, "chemdt"]], "diffDt": [[38, "diffdt"]], "elecDt": [[38, "elecdt"]], "chemPlotDt": [[38, "chemplotdt"]], "elecPlotDt": [[38, "elecplotdt"]], "funcDt": [[38, "funcdt"]], "cellProto": [[38, "cellproto"]], "spineProto": [[38, "spineproto"]], "chanProto": [[38, "chanproto"]], "chemProto": [[38, "chemproto"]], "passiveDistrib": [[38, "passivedistrib"]], "spineDistrib": [[38, "spinedistrib"]], "chanDistrib": [[38, "chandistrib"]], "chemDistrib": [[38, "chemdistrib"]], "adaptorList": [[38, "adaptorlist"]], "stimList": [[38, "stimlist"]], "plotList": [[38, "plotlist"]], "moogList": [[38, "mooglist"]], "AdExIF": [[39, "adexif"]], "AdThreshIF": [[40, "adthreshif"]], "Adaptor": [[41, "adaptor"]], "Annotator": [[42, "annotator"]], "Arith": [[43, "arith"]], "BinomialRng": [[44, "binomialrng"]], "CaConc": [[45, "caconc"]], "CaConcBase": [[46, "caconcbase"]], "ChanBase": [[47, "chanbase"]], "ChemCompt": [[48, "chemcompt"]], "Cinfo": [[49, "cinfo"]], "Clock": [[50, "clock"]], "CompartmentBase": [[52, "compartmentbase"]], "CplxEnzBase": [[53, "cplxenzbase"]], "CubeMesh": [[54, "cubemesh"]], "CylMesh": [[55, "cylmesh"]], "DiagonalMsg": [[56, "diagonalmsg"]], "DifShell": [[57, "difshell"]], "DiffAmp": [[58, "diffamp"]], "Dsolve": [[59, "dsolve"]], "Enz": [[60, "enz"]], "EnzBase": [[61, "enzbase"]], "ExIF": [[62, "exif"]], "ExponentialRng": [[63, "exponentialrng"]], "Finfo": [[64, "finfo"]], "Func": [[65, "func"]], "GammaRng": [[67, "gammarng"]], "GapJunction": [[68, "gapjunction"]], "GraupnerBrunel2012CaPlasticitySynHandler": [[69, "graupnerbrunel2012caplasticitysynhandler"]], "Group": [[70, "group"]], "Gsolve": [[71, "gsolve"]], "HDF5DataWriter": [[72, "hdf5datawriter"]], "HDF5WriterBase": [[73, "hdf5writerbase"]], "HHChannel": [[74, "hhchannel"]], "HHChannel2D": [[75, "hhchannel2d"]], "HHChannelBase": [[76, "hhchannelbase"]], "HHGate": [[77, "hhgate"]], "HHGate2D": [[78, "hhgate2d"]], "HSolve": [[79, "hsolve"]], "InputVariable": [[80, "inputvariable"]], "IntFire": [[81, "intfire"]], "IntFireBase": [[82, "intfirebase"]], "Interpol": [[83, "interpol"]], "Interpol2D": [[84, "interpol2d"]], "IzhIF": [[85, "izhif"]], "IzhikevichNrn": [[86, "izhikevichnrn"]], "Ksolve": [[87, "ksolve"]], "LIF": [[88, "lif"]], "Leakage": [[89, "leakage"]], "MarkovChannel": [[90, "markovchannel"]], "MarkovGslSolver": [[91, "markovgslsolver"]], "MarkovRateTable": [[92, "markovratetable"]], "MarkovSolver": [[93, "markovsolver"]], "MarkovSolverBase": [[94, "markovsolverbase"]], "MeshEntry": [[96, "meshentry"]], "MgBlock": [[97, "mgblock"]], "Msg": [[98, "msg"]], "Mstring": [[99, "mstring"]], "NMDAChan": [[100, "nmdachan"]], "NSDFWriter": [[101, "nsdfwriter"]], "Nernst": [[102, "nernst"]], "NeuroMesh": [[103, "neuromesh"]], "Neuron": [[104, "neuron"]], "Neutral": [[105, "neutral"]], "NormalRng": [[106, "normalrng"]], "OneToAllMsg": [[107, "onetoallmsg"]], "PIDController": [[108, "pidcontroller"]], "PoissonRng": [[109, "poissonrng"]], "PoolBase": [[111, "poolbase"]], "PostMaster": [[112, "postmaster"]], "PsdMesh": [[113, "psdmesh"]], "PulseGen": [[114, "pulsegen"]], "PyRun": [[115, "pyrun"]], "QIF": [[116, "qif"]], "RandGenerator": [[117, "randgenerator"]], "RandSpike": [[118, "randspike"]], "ReacBase": [[119, "reacbase"]], "STDPSynHandler": [[120, "stdpsynhandler"]], "STDPSynapse": [[121, "stdpsynapse"]], "SeqSynHandler": [[122, "seqsynhandler"]], "Shell": [[123, "shell"]], "SimpleSynHandler": [[124, "simplesynhandler"]], "SingleMsg": [[125, "singlemsg"]], "SparseMsg": [[126, "sparsemsg"]], "Species": [[127, "species"]], "SpikeGen": [[128, "spikegen"]], "SpikeStats": [[129, "spikestats"]], "Spine": [[130, "spine"]], "SpineMesh": [[131, "spinemesh"]], "Stats": [[132, "stats"]], "SteadyState": [[133, "steadystate"]], "StimulusTable": [[134, "stimulustable"]], "Stoich": [[135, "stoich"]], "Streamer": [[136, "streamer"]], "SynChan": [[138, "synchan"]], "SynHandlerBase": [[139, "synhandlerbase"]], "Table": [[141, "table"]], "Table2": [[142, "table2"]], "TableBase": [[143, "tablebase"]], "TimeTable": [[144, "timetable"]], "UniformRng": [[145, "uniformrng"]], "VClamp": [[146, "vclamp"]], "Variable": [[147, "variable"]], "VectorTable": [[148, "vectortable"]], "ZombieCaConc": [[149, "zombiecaconc"]], "ZombieCompartment": [[150, "zombiecompartment"]], "ZombieFunction": [[151, "zombiefunction"]], "References": [[152, "references"]], "How to use the documentation": [[152, "how-to-use-the-documentation"]], "Class Hierarchy": [[153, "class-hierarchy"]], "MOOSE Functions": [[154, "moose-functions"]], "element": [[154, "element"]], "getFieldNames": [[154, "getfieldnames"]], "copy": [[154, "copy"]], "move": [[154, "move"]], "delete": [[154, "delete"]], "useClock": [[154, "useclock"]], "setClock": [[154, "setclock"]], "start": [[154, "start"]], "reinit": [[154, "reinit"]], "stop": [[154, "stop"]], "isRunning": [[154, "isrunning"]], "exists": [[154, "exists"]], "loadModel": [[154, "loadmodel"]], "connect": [[154, "connect"]], "getCwe": [[154, "getcwe"]], "setCwe": [[154, "setcwe"]], "getFieldDict": [[154, "getfielddict"]], "getField": [[154, "getfield"]], "seed": [[154, "seed"]], "rand": [[154, "rand"]], "wildcardFind": [[154, "wildcardfind"]], "quit": [[154, "quit"]], "testSched": [[155, "testsched"]], "Chemical Bistables": [[156, "chemical-bistables"]], "Simple Bistables": [[156, "simple-bistables"]], "Scale Volumes": [[156, "scale-volumes"]], "Strong Bistable System": [[156, "strong-bistable-system"]], "MAPK Feedback Model": [[156, "mapk-feedback-model"]], "Propogation of a Bistable System": [[156, "propogation-of-a-bistable-system"]], "Steady-state Finder": [[156, "steady-state-finder"]], "Dose Response (Under construction)": [[156, "dose-response-under-construction"]], "Chemical Oscillators": [[157, "chemical-oscillators"]], "Slow Feedback Oscillator": [[157, "slow-feedback-oscillator"]], "Turing Pattern Oscillator in One Dimension": [[157, "turing-pattern-oscillator-in-one-dimension"]], "Relaxation Oscillator": [[157, "relaxation-oscillator"]], "Repressilator": [[157, "repressilator"]], "Squid giant axon": [[158, "squid-giant-axon"]], "Teaching Tutorials": [[159, "teaching-tutorials"]]}, "indexentries": {"adexif (built-in class)": [[39, "AdExIF"]], "a0 (adexif attribute)": [[39, "AdExIF.a0"]], "b0 (adexif attribute)": [[39, "AdExIF.b0"]], "geta0() (adexif method)": [[39, "AdExIF.getA0"]], "getb0() (adexif method)": [[39, "AdExIF.getB0"]], "gettauw() (adexif method)": [[39, "AdExIF.getTauW"]], "getw() (adexif method)": [[39, "AdExIF.getW"]], "seta0() (adexif method)": [[39, "AdExIF.setA0"]], "setb0() (adexif method)": [[39, "AdExIF.setB0"]], "settauw() (adexif method)": [[39, "AdExIF.setTauW"]], "setw() (adexif method)": [[39, "AdExIF.setW"]], "tauw (adexif attribute)": [[39, "AdExIF.tauW"]], "w (adexif attribute)": [[39, "AdExIF.w"]], "adthreshif (built-in class)": [[40, "AdThreshIF"]], "a0 (adthreshif attribute)": [[40, "AdThreshIF.a0"]], "geta0() (adthreshif method)": [[40, "AdThreshIF.getA0"]], "gettauthresh() (adthreshif method)": [[40, "AdThreshIF.getTauThresh"]], "getthreshadaptive() (adthreshif method)": [[40, "AdThreshIF.getThreshAdaptive"]], "getthreshjump() (adthreshif method)": [[40, "AdThreshIF.getThreshJump"]], "seta0() (adthreshif method)": [[40, "AdThreshIF.setA0"]], "settauthresh() (adthreshif method)": [[40, "AdThreshIF.setTauThresh"]], "setthreshadaptive() (adthreshif method)": [[40, "AdThreshIF.setThreshAdaptive"]], "setthreshjump() (adthreshif method)": [[40, "AdThreshIF.setThreshJump"]], "tauthresh (adthreshif attribute)": [[40, "AdThreshIF.tauThresh"]], "threshadaptive (adthreshif attribute)": [[40, "AdThreshIF.threshAdaptive"]], "threshjump (adthreshif attribute)": [[40, "AdThreshIF.threshJump"]], "adaptor (built-in class)": [[41, "Adaptor"]], "getinputoffset() (adaptor method)": [[41, "Adaptor.getInputOffset"]], "getoutputoffset() (adaptor method)": [[41, "Adaptor.getOutputOffset"]], "getoutputvalue() (adaptor method)": [[41, "Adaptor.getOutputValue"]], "getscale() (adaptor method)": [[41, "Adaptor.getScale"]], "input() (adaptor method)": [[41, "Adaptor.input"]], "inputoffset (adaptor attribute)": [[41, "Adaptor.inputOffset"]], "output (adaptor attribute)": [[41, "Adaptor.output"]], "outputoffset (adaptor attribute)": [[41, "Adaptor.outputOffset"]], "outputvalue (adaptor attribute)": [[41, "Adaptor.outputValue"]], "proc (adaptor attribute)": [[41, "Adaptor.proc"]], "process() (adaptor method)": [[41, "Adaptor.process"]], "reinit() (adaptor method)": [[41, "Adaptor.reinit"]], "requestout (adaptor attribute)": [[41, "Adaptor.requestOut"]], "scale (adaptor attribute)": [[41, "Adaptor.scale"]], "setinputoffset() (adaptor method)": [[41, "Adaptor.setInputOffset"]], "setoutputoffset() (adaptor method)": [[41, "Adaptor.setOutputOffset"]], "setscale() (adaptor method)": [[41, "Adaptor.setScale"]], "annotator (built-in class)": [[42, "Annotator"]], "color (annotator attribute)": [[42, "Annotator.color"]], "dirpath (annotator attribute)": [[42, "Annotator.dirpath"]], "getcolor() (annotator method)": [[42, "Annotator.getColor"]], "getdirpath() (annotator method)": [[42, "Annotator.getDirpath"]], "geticon() (annotator method)": [[42, "Annotator.getIcon"]], "getmodeltype() (annotator method)": [[42, "Annotator.getModeltype"]], "getnotes() (annotator method)": [[42, "Annotator.getNotes"]], "getruntime() (annotator method)": [[42, "Annotator.getRuntime"]], "getsolver() (annotator method)": [[42, "Annotator.getSolver"]], "gettextcolor() (annotator method)": [[42, "Annotator.getTextColor"]], "getx() (annotator method)": [[42, "Annotator.getX"]], "gety() (annotator method)": [[42, "Annotator.getY"]], "getz() (annotator method)": [[42, "Annotator.getZ"]], "icon (annotator attribute)": [[42, "Annotator.icon"]], "modeltype (annotator attribute)": [[42, "Annotator.modeltype"]], "notes (annotator attribute)": [[42, "Annotator.notes"]], "runtime (annotator attribute)": [[42, "Annotator.runtime"]], "setcolor() (annotator method)": [[42, "Annotator.setColor"]], "setdirpath() (annotator method)": [[42, "Annotator.setDirpath"]], "seticon() (annotator method)": [[42, "Annotator.setIcon"]], "setmodeltype() (annotator method)": [[42, "Annotator.setModeltype"]], "setnotes() (annotator method)": [[42, "Annotator.setNotes"]], "setruntime() (annotator method)": [[42, "Annotator.setRuntime"]], "setsolver() (annotator method)": [[42, "Annotator.setSolver"]], "settextcolor() (annotator method)": [[42, "Annotator.setTextColor"]], "setx() (annotator method)": [[42, "Annotator.setX"]], "sety() (annotator method)": [[42, "Annotator.setY"]], "setz() (annotator method)": [[42, "Annotator.setZ"]], "solver (annotator attribute)": [[42, "Annotator.solver"]], "textcolor (annotator attribute)": [[42, "Annotator.textColor"]], "x (annotator attribute)": [[42, "Annotator.x"]], "y (annotator attribute)": [[42, "Annotator.y"]], "z (annotator attribute)": [[42, "Annotator.z"]], "arith (built-in class)": [[43, "Arith"]], "anyvalue (arith attribute)": [[43, "Arith.anyValue"]], "arg1() (arith method)": [[43, "Arith.arg1"]], "arg1value (arith attribute)": [[43, "Arith.arg1Value"]], "arg1x2() (arith method)": [[43, "Arith.arg1x2"]], "arg2() (arith method)": [[43, "Arith.arg2"]], "arg3() (arith method)": [[43, "Arith.arg3"]], "function (arith attribute)": [[43, "Arith.function"]], "getanyvalue() (arith method)": [[43, "Arith.getAnyValue"]], "getarg1value() (arith method)": [[43, "Arith.getArg1Value"]], "getfunction() (arith method)": [[43, "Arith.getFunction"]], "getoutputvalue() (arith method)": [[43, "Arith.getOutputValue"]], "output (arith attribute)": [[43, "Arith.output"]], "outputvalue (arith attribute)": [[43, "Arith.outputValue"]], "proc (arith attribute)": [[43, "Arith.proc"]], "process() (arith method)": [[43, "Arith.process"]], "reinit() (arith method)": [[43, "Arith.reinit"]], "setanyvalue() (arith method)": [[43, "Arith.setAnyValue"]], "setfunction() (arith method)": [[43, "Arith.setFunction"]], "setoutputvalue() (arith method)": [[43, "Arith.setOutputValue"]], "binomialrng (built-in class)": [[44, "BinomialRng"]], "getn() (binomialrng method)": [[44, "BinomialRng.getN"]], "getp() (binomialrng method)": [[44, "BinomialRng.getP"]], "n (binomialrng attribute)": [[44, "BinomialRng.n"]], "p (binomialrng attribute)": [[44, "BinomialRng.p"]], "setn() (binomialrng method)": [[44, "BinomialRng.setN"]], "setp() (binomialrng method)": [[44, "BinomialRng.setP"]], "caconc (built-in class)": [[45, "CaConc"]], "b (caconcbase attribute)": [[46, "CaConcBase.B"]], "ca (caconcbase attribute)": [[46, "CaConcBase.Ca"]], "cabasal (caconcbase attribute)": [[46, "CaConcBase.CaBasal"]], "caconcbase (built-in class)": [[46, "CaConcBase"]], "basal() (caconcbase method)": [[46, "CaConcBase.basal"]], "ceiling (caconcbase attribute)": [[46, "CaConcBase.ceiling"]], "concout (caconcbase attribute)": [[46, "CaConcBase.concOut"]], "current() (caconcbase method)": [[46, "CaConcBase.current"]], "currentfraction() (caconcbase method)": [[46, "CaConcBase.currentFraction"]], "decrease() (caconcbase method)": [[46, "CaConcBase.decrease"]], "diameter (caconcbase attribute)": [[46, "CaConcBase.diameter"]], "floor (caconcbase attribute)": [[46, "CaConcBase.floor"]], "getb() (caconcbase method)": [[46, "CaConcBase.getB"]], "getca() (caconcbase method)": [[46, "CaConcBase.getCa"]], "getcabasal() (caconcbase method)": [[46, "CaConcBase.getCaBasal"]], "getceiling() (caconcbase method)": [[46, "CaConcBase.getCeiling"]], "getdiameter() (caconcbase method)": [[46, "CaConcBase.getDiameter"]], "getfloor() (caconcbase method)": [[46, "CaConcBase.getFloor"]], "getlength() (caconcbase method)": [[46, "CaConcBase.getLength"]], "gettau() (caconcbase method)": [[46, "CaConcBase.getTau"]], "getthick() (caconcbase method)": [[46, "CaConcBase.getThick"]], "increase() (caconcbase method)": [[46, "CaConcBase.increase"]], "length (caconcbase attribute)": [[46, "CaConcBase.length"]], "proc (caconcbase attribute)": [[46, "CaConcBase.proc"]], "process() (caconcbase method)": [[46, "CaConcBase.process"]], "reinit() (caconcbase method)": [[46, "CaConcBase.reinit"]], "setb() (caconcbase method)": [[46, "CaConcBase.setB"]], "setca() (caconcbase method)": [[46, "CaConcBase.setCa"]], "setcabasal() (caconcbase method)": [[46, "CaConcBase.setCaBasal"]], "setceiling() (caconcbase method)": [[46, "CaConcBase.setCeiling"]], "setdiameter() (caconcbase method)": [[46, "CaConcBase.setDiameter"]], "setfloor() (caconcbase method)": [[46, "CaConcBase.setFloor"]], "setlength() (caconcbase method)": [[46, "CaConcBase.setLength"]], "settau() (caconcbase method)": [[46, "CaConcBase.setTau"]], "setthick() (caconcbase method)": [[46, "CaConcBase.setThick"]], "tau (caconcbase attribute)": [[46, "CaConcBase.tau"]], "thick (caconcbase attribute)": [[46, "CaConcBase.thick"]], "chanbase (built-in class)": [[47, "ChanBase"]], "ek (chanbase attribute)": [[47, "ChanBase.Ek"]], "gbar (chanbase attribute)": [[47, "ChanBase.Gbar"]], "gk (chanbase attribute)": [[47, "ChanBase.Gk"]], "ik (chanbase attribute)": [[47, "ChanBase.Ik"]], "ikout (chanbase attribute)": [[47, "ChanBase.IkOut"]], "vm() (chanbase method)": [[47, "ChanBase.Vm"], [47, "id0"]], "channel (chanbase attribute)": [[47, "ChanBase.channel"]], "channelout (chanbase attribute)": [[47, "ChanBase.channelOut"]], "getek() (chanbase method)": [[47, "ChanBase.getEk"]], "getgbar() (chanbase method)": [[47, "ChanBase.getGbar"]], "getgk() (chanbase method)": [[47, "ChanBase.getGk"]], "getik() (chanbase method)": [[47, "ChanBase.getIk"]], "getmodulation() (chanbase method)": [[47, "ChanBase.getModulation"]], "ghk (chanbase attribute)": [[47, "ChanBase.ghk"]], "modulation (chanbase attribute)": [[47, "ChanBase.modulation"]], "permeabilityout (chanbase attribute)": [[47, "ChanBase.permeabilityOut"]], "proc (chanbase attribute)": [[47, "ChanBase.proc"]], "process() (chanbase method)": [[47, "ChanBase.process"]], "reinit() (chanbase method)": [[47, "ChanBase.reinit"]], "setek() (chanbase method)": [[47, "ChanBase.setEk"]], "setgbar() (chanbase method)": [[47, "ChanBase.setGbar"]], "setgk() (chanbase method)": [[47, "ChanBase.setGk"]], "setmodulation() (chanbase method)": [[47, "ChanBase.setModulation"]], "chemcompt (built-in class)": [[48, "ChemCompt"]], "builddefaultmesh() (chemcompt method)": [[48, "ChemCompt.buildDefaultMesh"]], "getnumdimensions() (chemcompt method)": [[48, "ChemCompt.getNumDimensions"]], "getnummesh() (chemcompt method)": [[48, "ChemCompt.getNumMesh"]], "getonevoxelvolume() (chemcompt method)": [[48, "ChemCompt.getOneVoxelVolume"]], "getstencilindex() (chemcompt method)": [[48, "ChemCompt.getStencilIndex"]], "getstencilrate() (chemcompt method)": [[48, "ChemCompt.getStencilRate"]], "getvolume() (chemcompt method)": [[48, "ChemCompt.getVolume"]], "getvoxelmidpoint() (chemcompt method)": [[48, "ChemCompt.getVoxelMidpoint"]], "getvoxelvolume() (chemcompt method)": [[48, "ChemCompt.getVoxelVolume"]], "numdimensions (chemcompt attribute)": [[48, "ChemCompt.numDimensions"]], "onevoxelvolume (chemcompt attribute)": [[48, "ChemCompt.oneVoxelVolume"]], "resetstencil() (chemcompt method)": [[48, "ChemCompt.resetStencil"]], "setnummesh() (chemcompt method)": [[48, "ChemCompt.setNumMesh"]], "setonevoxelvolume() (chemcompt method)": [[48, "ChemCompt.setOneVoxelVolume"]], "setvolume() (chemcompt method)": [[48, "ChemCompt.setVolume"]], "setvolumenotrates() (chemcompt method)": [[48, "ChemCompt.setVolumeNotRates"]], "stencilindex (chemcompt attribute)": [[48, "ChemCompt.stencilIndex"]], "stencilrate (chemcompt attribute)": [[48, "ChemCompt.stencilRate"]], "volume (chemcompt attribute)": [[48, "ChemCompt.volume"]], "voxelmidpoint (chemcompt attribute)": [[48, "ChemCompt.voxelMidpoint"]], "voxelvolout (chemcompt attribute)": [[48, "ChemCompt.voxelVolOut"]], "voxelvolume (chemcompt attribute)": [[48, "ChemCompt.voxelVolume"]], "cinfo (built-in class)": [[49, "Cinfo"]], "baseclass (cinfo attribute)": [[49, "Cinfo.baseClass"]], "docs (cinfo attribute)": [[49, "Cinfo.docs"]], "getbaseclass() (cinfo method)": [[49, "Cinfo.getBaseClass"]], "getdocs() (cinfo method)": [[49, "Cinfo.getDocs"]], "clock (built-in class)": [[50, "Clock"]], "basedt (clock attribute)": [[50, "Clock.baseDt"]], "clockcontrol (clock attribute)": [[50, "Clock.clockControl"]], "currentstep (clock attribute)": [[50, "Clock.currentStep"]], "currenttime (clock attribute)": [[50, "Clock.currentTime"]], "defaulttick (clock attribute)": [[50, "Clock.defaultTick"]], "dts (clock attribute)": [[50, "Clock.dts"]], "finished (clock attribute)": [[50, "Clock.finished"]], "getbasedt() (clock method)": [[50, "Clock.getBaseDt"]], "getcurrentstep() (clock method)": [[50, "Clock.getCurrentStep"]], "getcurrenttime() (clock method)": [[50, "Clock.getCurrentTime"]], "getdefaulttick() (clock method)": [[50, "Clock.getDefaultTick"]], "getdts() (clock method)": [[50, "Clock.getDts"]], "getisrunning() (clock method)": [[50, "Clock.getIsRunning"]], "getnsteps() (clock method)": [[50, "Clock.getNsteps"]], "getnumticks() (clock method)": [[50, "Clock.getNumTicks"]], "getruntime() (clock method)": [[50, "Clock.getRunTime"]], "getstride() (clock method)": [[50, "Clock.getStride"]], "gettickdt() (clock method)": [[50, "Clock.getTickDt"]], "gettickstep() (clock method)": [[50, "Clock.getTickStep"]], "isrunning (clock attribute)": [[50, "Clock.isRunning"]], "nsteps (clock attribute)": [[50, "Clock.nsteps"]], "numticks (clock attribute)": [[50, "Clock.numTicks"]], "proc0 (clock attribute)": [[50, "Clock.proc0"]], "proc1 (clock attribute)": [[50, "Clock.proc1"]], "proc10 (clock attribute)": [[50, "Clock.proc10"]], "proc11 (clock attribute)": [[50, "Clock.proc11"]], "proc12 (clock attribute)": [[50, "Clock.proc12"]], "proc13 (clock attribute)": [[50, "Clock.proc13"]], "proc14 (clock attribute)": [[50, "Clock.proc14"]], "proc15 (clock attribute)": [[50, "Clock.proc15"]], "proc16 (clock attribute)": [[50, "Clock.proc16"]], "proc17 (clock attribute)": [[50, "Clock.proc17"]], "proc18 (clock attribute)": [[50, "Clock.proc18"]], "proc19 (clock attribute)": [[50, "Clock.proc19"]], "proc2 (clock attribute)": [[50, "Clock.proc2"]], "proc20 (clock attribute)": [[50, "Clock.proc20"]], "proc21 (clock attribute)": [[50, "Clock.proc21"]], "proc22 (clock attribute)": [[50, "Clock.proc22"]], "proc23 (clock attribute)": [[50, "Clock.proc23"]], "proc24 (clock attribute)": [[50, "Clock.proc24"]], "proc25 (clock attribute)": [[50, "Clock.proc25"]], "proc26 (clock attribute)": [[50, "Clock.proc26"]], "proc27 (clock attribute)": [[50, "Clock.proc27"]], "proc28 (clock attribute)": [[50, "Clock.proc28"]], "proc29 (clock attribute)": [[50, "Clock.proc29"]], "proc3 (clock attribute)": [[50, "Clock.proc3"]], "proc30 (clock attribute)": [[50, "Clock.proc30"]], "proc31 (clock attribute)": [[50, "Clock.proc31"]], "proc4 (clock attribute)": [[50, "Clock.proc4"]], "proc5 (clock attribute)": [[50, "Clock.proc5"]], "proc6 (clock attribute)": [[50, "Clock.proc6"]], "proc7 (clock attribute)": [[50, "Clock.proc7"]], "proc8 (clock attribute)": [[50, "Clock.proc8"]], "proc9 (clock attribute)": [[50, "Clock.proc9"]], "process0 (clock attribute)": [[50, "Clock.process0"]], "process1 (clock attribute)": [[50, "Clock.process1"]], "process10 (clock attribute)": [[50, "Clock.process10"]], "process11 (clock attribute)": [[50, "Clock.process11"]], "process12 (clock attribute)": [[50, "Clock.process12"]], "process13 (clock attribute)": [[50, "Clock.process13"]], "process14 (clock attribute)": [[50, "Clock.process14"]], "process15 (clock attribute)": [[50, "Clock.process15"]], "process16 (clock attribute)": [[50, "Clock.process16"]], "process17 (clock attribute)": [[50, "Clock.process17"]], "process18 (clock attribute)": [[50, "Clock.process18"]], "process19 (clock attribute)": [[50, "Clock.process19"]], "process2 (clock attribute)": [[50, "Clock.process2"]], "process20 (clock attribute)": [[50, "Clock.process20"]], "process21 (clock attribute)": [[50, "Clock.process21"]], "process22 (clock attribute)": [[50, "Clock.process22"]], "process23 (clock attribute)": [[50, "Clock.process23"]], "process24 (clock attribute)": [[50, "Clock.process24"]], "process25 (clock attribute)": [[50, "Clock.process25"]], "process26 (clock attribute)": [[50, "Clock.process26"]], "process27 (clock attribute)": [[50, "Clock.process27"]], "process28 (clock attribute)": [[50, "Clock.process28"]], "process29 (clock attribute)": [[50, "Clock.process29"]], "process3 (clock attribute)": [[50, "Clock.process3"]], "process30 (clock attribute)": [[50, "Clock.process30"]], "process31 (clock attribute)": [[50, "Clock.process31"]], "process4 (clock attribute)": [[50, "Clock.process4"]], "process5 (clock attribute)": [[50, "Clock.process5"]], "process6 (clock attribute)": [[50, "Clock.process6"]], "process7 (clock attribute)": [[50, "Clock.process7"]], "process8 (clock attribute)": [[50, "Clock.process8"]], "process9 (clock attribute)": [[50, "Clock.process9"]], "reinit() (clock method)": [[50, "Clock.reinit"]], "reinit0 (clock attribute)": [[50, "Clock.reinit0"]], "reinit1 (clock attribute)": [[50, "Clock.reinit1"]], "reinit10 (clock attribute)": [[50, "Clock.reinit10"]], "reinit11 (clock attribute)": [[50, "Clock.reinit11"]], "reinit12 (clock attribute)": [[50, "Clock.reinit12"]], "reinit13 (clock attribute)": [[50, "Clock.reinit13"]], "reinit14 (clock attribute)": [[50, "Clock.reinit14"]], "reinit15 (clock attribute)": [[50, "Clock.reinit15"]], "reinit16 (clock attribute)": [[50, "Clock.reinit16"]], "reinit17 (clock attribute)": [[50, "Clock.reinit17"]], "reinit18 (clock attribute)": [[50, "Clock.reinit18"]], "reinit19 (clock attribute)": [[50, "Clock.reinit19"]], "reinit2 (clock attribute)": [[50, "Clock.reinit2"]], "reinit20 (clock attribute)": [[50, "Clock.reinit20"]], "reinit21 (clock attribute)": [[50, "Clock.reinit21"]], "reinit22 (clock attribute)": [[50, "Clock.reinit22"]], "reinit23 (clock attribute)": [[50, "Clock.reinit23"]], "reinit24 (clock attribute)": [[50, "Clock.reinit24"]], "reinit25 (clock attribute)": [[50, "Clock.reinit25"]], "reinit26 (clock attribute)": [[50, "Clock.reinit26"]], "reinit27 (clock attribute)": [[50, "Clock.reinit27"]], "reinit28 (clock attribute)": [[50, "Clock.reinit28"]], "reinit29 (clock attribute)": [[50, "Clock.reinit29"]], "reinit3 (clock attribute)": [[50, "Clock.reinit3"]], "reinit30 (clock attribute)": [[50, "Clock.reinit30"]], "reinit31 (clock attribute)": [[50, "Clock.reinit31"]], "reinit4 (clock attribute)": [[50, "Clock.reinit4"]], "reinit5 (clock attribute)": [[50, "Clock.reinit5"]], "reinit6 (clock attribute)": [[50, "Clock.reinit6"]], "reinit7 (clock attribute)": [[50, "Clock.reinit7"]], "reinit8 (clock attribute)": [[50, "Clock.reinit8"]], "reinit9 (clock attribute)": [[50, "Clock.reinit9"]], "runtime (clock attribute)": [[50, "Clock.runTime"]], "setbasedt() (clock method)": [[50, "Clock.setBaseDt"]], "settickdt() (clock method)": [[50, "Clock.setTickDt"]], "settickstep() (clock method)": [[50, "Clock.setTickStep"]], "start() (clock method)": [[50, "Clock.start"]], "step() (clock method)": [[50, "Clock.step"]], "stop() (clock method)": [[50, "Clock.stop"]], "stride (clock attribute)": [[50, "Clock.stride"]], "tickdt (clock attribute)": [[50, "Clock.tickDt"]], "tickstep (clock attribute)": [[50, "Clock.tickStep"]], "compartment (built-in class)": [[51, "Compartment"]], "cm (compartmentbase attribute)": [[52, "CompartmentBase.Cm"]], "compartmentbase (built-in class)": [[52, "CompartmentBase"]], "em (compartmentbase attribute)": [[52, "CompartmentBase.Em"]], "im (compartmentbase attribute)": [[52, "CompartmentBase.Im"]], "ra (compartmentbase attribute)": [[52, "CompartmentBase.Ra"]], "rm (compartmentbase attribute)": [[52, "CompartmentBase.Rm"]], "vm (compartmentbase attribute)": [[52, "CompartmentBase.Vm"]], "vmout (compartmentbase attribute)": [[52, "CompartmentBase.VmOut"]], "axial (compartmentbase attribute)": [[52, "CompartmentBase.axial"]], "axialout (compartmentbase attribute)": [[52, "CompartmentBase.axialOut"]], "cable() (compartmentbase method)": [[52, "CompartmentBase.cable"]], "channel (compartmentbase attribute)": [[52, "CompartmentBase.channel"]], "diameter (compartmentbase attribute)": [[52, "CompartmentBase.diameter"]], "displace() (compartmentbase method)": [[52, "CompartmentBase.displace"]], "getcm() (compartmentbase method)": [[52, "CompartmentBase.getCm"]], "getdiameter() (compartmentbase method)": [[52, "CompartmentBase.getDiameter"]], "getem() (compartmentbase method)": [[52, "CompartmentBase.getEm"]], "getim() (compartmentbase method)": [[52, "CompartmentBase.getIm"]], "getinitvm() (compartmentbase method)": [[52, "CompartmentBase.getInitVm"]], "getinject() (compartmentbase method)": [[52, "CompartmentBase.getInject"]], "getlength() (compartmentbase method)": [[52, "CompartmentBase.getLength"]], "getra() (compartmentbase method)": [[52, "CompartmentBase.getRa"]], "getrm() (compartmentbase method)": [[52, "CompartmentBase.getRm"]], "getvm() (compartmentbase method)": [[52, "CompartmentBase.getVm"]], "getx() (compartmentbase method)": [[52, "CompartmentBase.getX"]], "getx0() (compartmentbase method)": [[52, "CompartmentBase.getX0"]], "gety() (compartmentbase method)": [[52, "CompartmentBase.getY"]], "gety0() (compartmentbase method)": [[52, "CompartmentBase.getY0"]], "getz() (compartmentbase method)": [[52, "CompartmentBase.getZ"]], "getz0() (compartmentbase method)": [[52, "CompartmentBase.getZ0"]], "handleaxial() (compartmentbase method)": [[52, "CompartmentBase.handleAxial"]], "handlechannel() (compartmentbase method)": [[52, "CompartmentBase.handleChannel"]], "handleraxial() (compartmentbase method)": [[52, "CompartmentBase.handleRaxial"]], "init (compartmentbase attribute)": [[52, "CompartmentBase.init"]], "initproc() (compartmentbase method)": [[52, "CompartmentBase.initProc"]], "initreinit() (compartmentbase method)": [[52, "CompartmentBase.initReinit"]], "initvm (compartmentbase attribute)": [[52, "CompartmentBase.initVm"]], "inject (compartmentbase attribute)": [[52, "CompartmentBase.inject"]], "injectmsg() (compartmentbase method)": [[52, "CompartmentBase.injectMsg"], [52, "id0"]], "length (compartmentbase attribute)": [[52, "CompartmentBase.length"]], "proc (compartmentbase attribute)": [[52, "CompartmentBase.proc"]], "process() (compartmentbase method)": [[52, "CompartmentBase.process"]], "randinject() (compartmentbase method)": [[52, "CompartmentBase.randInject"]], "raxial (compartmentbase attribute)": [[52, "CompartmentBase.raxial"]], "raxialout (compartmentbase attribute)": [[52, "CompartmentBase.raxialOut"]], "reinit() (compartmentbase method)": [[52, "CompartmentBase.reinit"]], "setcm() (compartmentbase method)": [[52, "CompartmentBase.setCm"]], "setdiameter() (compartmentbase method)": [[52, "CompartmentBase.setDiameter"]], "setem() (compartmentbase method)": [[52, "CompartmentBase.setEm"]], "setgeomandelec() (compartmentbase method)": [[52, "CompartmentBase.setGeomAndElec"]], "setinitvm() (compartmentbase method)": [[52, "CompartmentBase.setInitVm"]], "setinject() (compartmentbase method)": [[52, "CompartmentBase.setInject"]], "setlength() (compartmentbase method)": [[52, "CompartmentBase.setLength"]], "setra() (compartmentbase method)": [[52, "CompartmentBase.setRa"]], "setrm() (compartmentbase method)": [[52, "CompartmentBase.setRm"]], "setvm() (compartmentbase method)": [[52, "CompartmentBase.setVm"]], "setx() (compartmentbase method)": [[52, "CompartmentBase.setX"]], "setx0() (compartmentbase method)": [[52, "CompartmentBase.setX0"]], "sety() (compartmentbase method)": [[52, "CompartmentBase.setY"]], "sety0() (compartmentbase method)": [[52, "CompartmentBase.setY0"]], "setz() (compartmentbase method)": [[52, "CompartmentBase.setZ"]], "setz0() (compartmentbase method)": [[52, "CompartmentBase.setZ0"]], "x (compartmentbase attribute)": [[52, "CompartmentBase.x"]], "x0 (compartmentbase attribute)": [[52, "CompartmentBase.x0"]], "y (compartmentbase attribute)": [[52, "CompartmentBase.y"]], "y0 (compartmentbase attribute)": [[52, "CompartmentBase.y0"]], "z (compartmentbase attribute)": [[52, "CompartmentBase.z"]], "z0 (compartmentbase attribute)": [[52, "CompartmentBase.z0"]], "cplxenzbase (built-in class)": [[53, "CplxEnzBase"]], "conck1 (cplxenzbase attribute)": [[53, "CplxEnzBase.concK1"]], "cplx (cplxenzbase attribute)": [[53, "CplxEnzBase.cplx"]], "cplxdest() (cplxenzbase method)": [[53, "CplxEnzBase.cplxDest"]], "cplxout (cplxenzbase attribute)": [[53, "CplxEnzBase.cplxOut"]], "enz (cplxenzbase attribute)": [[53, "CplxEnzBase.enz"]], "enzdest() (cplxenzbase method)": [[53, "CplxEnzBase.enzDest"]], "enzout (cplxenzbase attribute)": [[53, "CplxEnzBase.enzOut"]], "getconck1() (cplxenzbase method)": [[53, "CplxEnzBase.getConcK1"]], "getk1() (cplxenzbase method)": [[53, "CplxEnzBase.getK1"]], "getk2() (cplxenzbase method)": [[53, "CplxEnzBase.getK2"]], "getk3() (cplxenzbase method)": [[53, "CplxEnzBase.getK3"]], "getratio() (cplxenzbase method)": [[53, "CplxEnzBase.getRatio"]], "k1 (cplxenzbase attribute)": [[53, "CplxEnzBase.k1"]], "k2 (cplxenzbase attribute)": [[53, "CplxEnzBase.k2"]], "k3 (cplxenzbase attribute)": [[53, "CplxEnzBase.k3"]], "ratio (cplxenzbase attribute)": [[53, "CplxEnzBase.ratio"]], "setconck1() (cplxenzbase method)": [[53, "CplxEnzBase.setConcK1"]], "setk1() (cplxenzbase method)": [[53, "CplxEnzBase.setK1"]], "setk2() (cplxenzbase method)": [[53, "CplxEnzBase.setK2"]], "setk3() (cplxenzbase method)": [[53, "CplxEnzBase.setK3"]], "setratio() (cplxenzbase method)": [[53, "CplxEnzBase.setRatio"]], "cubemesh (built-in class)": [[54, "CubeMesh"]], "alwaysdiffuse (cubemesh attribute)": [[54, "CubeMesh.alwaysDiffuse"]], "coords (cubemesh attribute)": [[54, "CubeMesh.coords"]], "dx (cubemesh attribute)": [[54, "CubeMesh.dx"]], "dy (cubemesh attribute)": [[54, "CubeMesh.dy"]], "dz (cubemesh attribute)": [[54, "CubeMesh.dz"]], "getalwaysdiffuse() (cubemesh method)": [[54, "CubeMesh.getAlwaysDiffuse"]], "getcoords() (cubemesh method)": [[54, "CubeMesh.getCoords"]], "getdx() (cubemesh method)": [[54, "CubeMesh.getDx"]], "getdy() (cubemesh method)": [[54, "CubeMesh.getDy"]], "getdz() (cubemesh method)": [[54, "CubeMesh.getDz"]], "getistoroid() (cubemesh method)": [[54, "CubeMesh.getIsToroid"]], "getmeshtospace() (cubemesh method)": [[54, "CubeMesh.getMeshToSpace"]], "getnx() (cubemesh method)": [[54, "CubeMesh.getNx"]], "getny() (cubemesh method)": [[54, "CubeMesh.getNy"]], "getnz() (cubemesh method)": [[54, "CubeMesh.getNz"]], "getpreservenumentries() (cubemesh method)": [[54, "CubeMesh.getPreserveNumEntries"]], "getspacetomesh() (cubemesh method)": [[54, "CubeMesh.getSpaceToMesh"]], "getsurface() (cubemesh method)": [[54, "CubeMesh.getSurface"]], "getx0() (cubemesh method)": [[54, "CubeMesh.getX0"]], "getx1() (cubemesh method)": [[54, "CubeMesh.getX1"]], "gety0() (cubemesh method)": [[54, "CubeMesh.getY0"]], "gety1() (cubemesh method)": [[54, "CubeMesh.getY1"]], "getz0() (cubemesh method)": [[54, "CubeMesh.getZ0"]], "getz1() (cubemesh method)": [[54, "CubeMesh.getZ1"]], "istoroid (cubemesh attribute)": [[54, "CubeMesh.isToroid"]], "meshtospace (cubemesh attribute)": [[54, "CubeMesh.meshToSpace"]], "nx (cubemesh attribute)": [[54, "CubeMesh.nx"]], "ny (cubemesh attribute)": [[54, "CubeMesh.ny"]], "nz (cubemesh attribute)": [[54, "CubeMesh.nz"]], "preservenumentries (cubemesh attribute)": [[54, "CubeMesh.preserveNumEntries"]], "setalwaysdiffuse() (cubemesh method)": [[54, "CubeMesh.setAlwaysDiffuse"]], "setcoords() (cubemesh method)": [[54, "CubeMesh.setCoords"]], "setdx() (cubemesh method)": [[54, "CubeMesh.setDx"]], "setdy() (cubemesh method)": [[54, "CubeMesh.setDy"]], "setdz() (cubemesh method)": [[54, "CubeMesh.setDz"]], "setistoroid() (cubemesh method)": [[54, "CubeMesh.setIsToroid"]], "setmeshtospace() (cubemesh method)": [[54, "CubeMesh.setMeshToSpace"]], "setnx() (cubemesh method)": [[54, "CubeMesh.setNx"]], "setny() (cubemesh method)": [[54, "CubeMesh.setNy"]], "setnz() (cubemesh method)": [[54, "CubeMesh.setNz"]], "setpreservenumentries() (cubemesh method)": [[54, "CubeMesh.setPreserveNumEntries"]], "setspacetomesh() (cubemesh method)": [[54, "CubeMesh.setSpaceToMesh"]], "setsurface() (cubemesh method)": [[54, "CubeMesh.setSurface"]], "setx0() (cubemesh method)": [[54, "CubeMesh.setX0"]], "setx1() (cubemesh method)": [[54, "CubeMesh.setX1"]], "sety0() (cubemesh method)": [[54, "CubeMesh.setY0"]], "sety1() (cubemesh method)": [[54, "CubeMesh.setY1"]], "setz0() (cubemesh method)": [[54, "CubeMesh.setZ0"]], "setz1() (cubemesh method)": [[54, "CubeMesh.setZ1"]], "spacetomesh (cubemesh attribute)": [[54, "CubeMesh.spaceToMesh"]], "surface (cubemesh attribute)": [[54, "CubeMesh.surface"]], "x0 (cubemesh attribute)": [[54, "CubeMesh.x0"]], "x1 (cubemesh attribute)": [[54, "CubeMesh.x1"]], "y0 (cubemesh attribute)": [[54, "CubeMesh.y0"]], "y1 (cubemesh attribute)": [[54, "CubeMesh.y1"]], "z0 (cubemesh attribute)": [[54, "CubeMesh.z0"]], "z1 (cubemesh attribute)": [[54, "CubeMesh.z1"]], "cylmesh (built-in class)": [[55, "CylMesh"]], "coords (cylmesh attribute)": [[55, "CylMesh.coords"]], "difflength (cylmesh attribute)": [[55, "CylMesh.diffLength"]], "getcoords() (cylmesh method)": [[55, "CylMesh.getCoords"]], "getdifflength() (cylmesh method)": [[55, "CylMesh.getDiffLength"]], "getnumdiffcompts() (cylmesh method)": [[55, "CylMesh.getNumDiffCompts"]], "getr0() (cylmesh method)": [[55, "CylMesh.getR0"]], "getr1() (cylmesh method)": [[55, "CylMesh.getR1"]], "gettotlength() (cylmesh method)": [[55, "CylMesh.getTotLength"]], "getx0() (cylmesh method)": [[55, "CylMesh.getX0"]], "getx1() (cylmesh method)": [[55, "CylMesh.getX1"]], "gety0() (cylmesh method)": [[55, "CylMesh.getY0"]], "gety1() (cylmesh method)": [[55, "CylMesh.getY1"]], "getz0() (cylmesh method)": [[55, "CylMesh.getZ0"]], "getz1() (cylmesh method)": [[55, "CylMesh.getZ1"]], "numdiffcompts (cylmesh attribute)": [[55, "CylMesh.numDiffCompts"]], "r0 (cylmesh attribute)": [[55, "CylMesh.r0"]], "r1 (cylmesh attribute)": [[55, "CylMesh.r1"]], "setcoords() (cylmesh method)": [[55, "CylMesh.setCoords"]], "setdifflength() (cylmesh method)": [[55, "CylMesh.setDiffLength"]], "setr0() (cylmesh method)": [[55, "CylMesh.setR0"]], "setr1() (cylmesh method)": [[55, "CylMesh.setR1"]], "setx0() (cylmesh method)": [[55, "CylMesh.setX0"]], "setx1() (cylmesh method)": [[55, "CylMesh.setX1"]], "sety0() (cylmesh method)": [[55, "CylMesh.setY0"]], "sety1() (cylmesh method)": [[55, "CylMesh.setY1"]], "setz0() (cylmesh method)": [[55, "CylMesh.setZ0"]], "setz1() (cylmesh method)": [[55, "CylMesh.setZ1"]], "totlength (cylmesh attribute)": [[55, "CylMesh.totLength"]], "x0 (cylmesh attribute)": [[55, "CylMesh.x0"]], "x1 (cylmesh attribute)": [[55, "CylMesh.x1"]], "y0 (cylmesh attribute)": [[55, "CylMesh.y0"]], "y1 (cylmesh attribute)": [[55, "CylMesh.y1"]], "z0 (cylmesh attribute)": [[55, "CylMesh.z0"]], "z1 (cylmesh attribute)": [[55, "CylMesh.z1"]], "diagonalmsg (built-in class)": [[56, "DiagonalMsg"]], "getstride() (diagonalmsg method)": [[56, "DiagonalMsg.getStride"]], "setstride() (diagonalmsg method)": [[56, "DiagonalMsg.setStride"]], "stride (diagonalmsg attribute)": [[56, "DiagonalMsg.stride"]], "c (difshell attribute)": [[57, "DifShell.C"]], "ceq (difshell attribute)": [[57, "DifShell.Ceq"]], "d (difshell attribute)": [[57, "DifShell.D"]], "difshell (built-in class)": [[57, "DifShell"]], "buffer (difshell attribute)": [[57, "DifShell.buffer"]], "concentrationout (difshell attribute)": [[57, "DifShell.concentrationOut"]], "diameter (difshell attribute)": [[57, "DifShell.diameter"]], "eqtaupump() (difshell method)": [[57, "DifShell.eqTauPump"]], "finflux() (difshell method)": [[57, "DifShell.fInflux"]], "foutflux() (difshell method)": [[57, "DifShell.fOutflux"]], "fluxfromin() (difshell method)": [[57, "DifShell.fluxFromIn"]], "fluxfromout() (difshell method)": [[57, "DifShell.fluxFromOut"]], "getc() (difshell method)": [[57, "DifShell.getC"]], "getceq() (difshell method)": [[57, "DifShell.getCeq"]], "getd() (difshell method)": [[57, "DifShell.getD"]], "getdiameter() (difshell method)": [[57, "DifShell.getDiameter"]], "getinnerarea() (difshell method)": [[57, "DifShell.getInnerArea"]], "getleak() (difshell method)": [[57, "DifShell.getLeak"]], "getlength() (difshell method)": [[57, "DifShell.getLength"]], "getouterarea() (difshell method)": [[57, "DifShell.getOuterArea"]], "getshapemode() (difshell method)": [[57, "DifShell.getShapeMode"]], "getthickness() (difshell method)": [[57, "DifShell.getThickness"]], "getvalence() (difshell method)": [[57, "DifShell.getValence"]], "getvolume() (difshell method)": [[57, "DifShell.getVolume"]], "hillpump() (difshell method)": [[57, "DifShell.hillPump"]], "influx() (difshell method)": [[57, "DifShell.influx"]], "innerarea (difshell attribute)": [[57, "DifShell.innerArea"]], "innerdif (difshell attribute)": [[57, "DifShell.innerDif"]], "innerdifsourceout (difshell attribute)": [[57, "DifShell.innerDifSourceOut"]], "leak (difshell attribute)": [[57, "DifShell.leak"]], "length (difshell attribute)": [[57, "DifShell.length"]], "mmpump() (difshell method)": [[57, "DifShell.mmPump"]], "outerarea (difshell attribute)": [[57, "DifShell.outerArea"]], "outerdif (difshell attribute)": [[57, "DifShell.outerDif"]], "outerdifsourceout (difshell attribute)": [[57, "DifShell.outerDifSourceOut"]], "outflux() (difshell method)": [[57, "DifShell.outflux"]], "process() (difshell method)": [[57, "DifShell.process"], [57, "id0"]], "reaction() (difshell method)": [[57, "DifShell.reaction"]], "reinit() (difshell method)": [[57, "DifShell.reinit"], [57, "id1"]], "setceq() (difshell method)": [[57, "DifShell.setCeq"]], "setd() (difshell method)": [[57, "DifShell.setD"]], "setdiameter() (difshell method)": [[57, "DifShell.setDiameter"]], "setinnerarea() (difshell method)": [[57, "DifShell.setInnerArea"]], "setleak() (difshell method)": [[57, "DifShell.setLeak"]], "setlength() (difshell method)": [[57, "DifShell.setLength"]], "setouterarea() (difshell method)": [[57, "DifShell.setOuterArea"]], "setshapemode() (difshell method)": [[57, "DifShell.setShapeMode"]], "setthickness() (difshell method)": [[57, "DifShell.setThickness"]], "setvalence() (difshell method)": [[57, "DifShell.setValence"]], "setvolume() (difshell method)": [[57, "DifShell.setVolume"]], "shapemode (difshell attribute)": [[57, "DifShell.shapeMode"]], "storeinflux() (difshell method)": [[57, "DifShell.storeInflux"]], "storeoutflux() (difshell method)": [[57, "DifShell.storeOutflux"]], "taupump() (difshell method)": [[57, "DifShell.tauPump"]], "thickness (difshell attribute)": [[57, "DifShell.thickness"]], "valence (difshell attribute)": [[57, "DifShell.valence"]], "volume (difshell attribute)": [[57, "DifShell.volume"]], "diffamp (built-in class)": [[58, "DiffAmp"]], "gain (diffamp attribute)": [[58, "DiffAmp.gain"]], "gainin() (diffamp method)": [[58, "DiffAmp.gainIn"]], "getgain() (diffamp method)": [[58, "DiffAmp.getGain"]], "getoutputvalue() (diffamp method)": [[58, "DiffAmp.getOutputValue"]], "getsaturation() (diffamp method)": [[58, "DiffAmp.getSaturation"]], "minusin() (diffamp method)": [[58, "DiffAmp.minusIn"]], "output (diffamp attribute)": [[58, "DiffAmp.output"]], "outputvalue (diffamp attribute)": [[58, "DiffAmp.outputValue"]], "plusin() (diffamp method)": [[58, "DiffAmp.plusIn"]], "proc (diffamp attribute)": [[58, "DiffAmp.proc"]], "process() (diffamp method)": [[58, "DiffAmp.process"]], "reinit() (diffamp method)": [[58, "DiffAmp.reinit"]], "saturation (diffamp attribute)": [[58, "DiffAmp.saturation"]], "setgain() (diffamp method)": [[58, "DiffAmp.setGain"]], "setsaturation() (diffamp method)": [[58, "DiffAmp.setSaturation"]], "dsolve (built-in class)": [[59, "Dsolve"]], "buildmeshjunctions() (dsolve method)": [[59, "Dsolve.buildMeshJunctions"]], "buildneuromeshjunctions() (dsolve method)": [[59, "Dsolve.buildNeuroMeshJunctions"]], "compartment (dsolve attribute)": [[59, "Dsolve.compartment"]], "diffscale (dsolve attribute)": [[59, "Dsolve.diffScale"]], "diffvol1 (dsolve attribute)": [[59, "Dsolve.diffVol1"]], "diffvol2 (dsolve attribute)": [[59, "Dsolve.diffVol2"]], "getcompartment() (dsolve method)": [[59, "Dsolve.getCompartment"]], "getdiffscale() (dsolve method)": [[59, "Dsolve.getDiffScale"]], "getdiffvol1() (dsolve method)": [[59, "Dsolve.getDiffVol1"]], "getdiffvol2() (dsolve method)": [[59, "Dsolve.getDiffVol2"]], "getnvec() (dsolve method)": [[59, "Dsolve.getNVec"]], "getnumallvoxels() (dsolve method)": [[59, "Dsolve.getNumAllVoxels"]], "getnumpools() (dsolve method)": [[59, "Dsolve.getNumPools"]], "getnumvoxels() (dsolve method)": [[59, "Dsolve.getNumVoxels"]], "getpath() (dsolve method)": [[59, "Dsolve.getPath"]], "getstoich() (dsolve method)": [[59, "Dsolve.getStoich"]], "nvec (dsolve attribute)": [[59, "Dsolve.nVec"]], "numallvoxels (dsolve attribute)": [[59, "Dsolve.numAllVoxels"]], "numpools (dsolve attribute)": [[59, "Dsolve.numPools"]], "numvoxels (dsolve attribute)": [[59, "Dsolve.numVoxels"]], "path (dsolve attribute)": [[59, "Dsolve.path"]], "proc (dsolve attribute)": [[59, "Dsolve.proc"]], "process() (dsolve method)": [[59, "Dsolve.process"]], "reinit() (dsolve method)": [[59, "Dsolve.reinit"]], "setcompartment() (dsolve method)": [[59, "Dsolve.setCompartment"]], "setdiffscale() (dsolve method)": [[59, "Dsolve.setDiffScale"]], "setdiffvol1() (dsolve method)": [[59, "Dsolve.setDiffVol1"]], "setdiffvol2() (dsolve method)": [[59, "Dsolve.setDiffVol2"]], "setnvec() (dsolve method)": [[59, "Dsolve.setNVec"]], "setnumpools() (dsolve method)": [[59, "Dsolve.setNumPools"]], "setpath() (dsolve method)": [[59, "Dsolve.setPath"]], "setstoich() (dsolve method)": [[59, "Dsolve.setStoich"]], "stoich (dsolve attribute)": [[59, "Dsolve.stoich"]], "enz (built-in class)": [[60, "Enz"]], "setkmk1() (enz method)": [[60, "Enz.setKmK1"]], "enzbase (built-in class)": [[61, "EnzBase"]], "km (enzbase attribute)": [[61, "EnzBase.Km"]], "enzdest() (enzbase method)": [[61, "EnzBase.enzDest"]], "getkcat() (enzbase method)": [[61, "EnzBase.getKcat"]], "getkm() (enzbase method)": [[61, "EnzBase.getKm"]], "getnumkm() (enzbase method)": [[61, "EnzBase.getNumKm"]], "getnumsubstrates() (enzbase method)": [[61, "EnzBase.getNumSubstrates"]], "kcat (enzbase attribute)": [[61, "EnzBase.kcat"]], "numkm (enzbase attribute)": [[61, "EnzBase.numKm"]], "numsubstrates (enzbase attribute)": [[61, "EnzBase.numSubstrates"]], "prd (enzbase attribute)": [[61, "EnzBase.prd"]], "prddest() (enzbase method)": [[61, "EnzBase.prdDest"]], "prdout (enzbase attribute)": [[61, "EnzBase.prdOut"]], "proc (enzbase attribute)": [[61, "EnzBase.proc"]], "process() (enzbase method)": [[61, "EnzBase.process"]], "reinit() (enzbase method)": [[61, "EnzBase.reinit"]], "remesh() (enzbase method)": [[61, "EnzBase.remesh"]], "setkcat() (enzbase method)": [[61, "EnzBase.setKcat"]], "setkm() (enzbase method)": [[61, "EnzBase.setKm"]], "setnumkm() (enzbase method)": [[61, "EnzBase.setNumKm"]], "sub (enzbase attribute)": [[61, "EnzBase.sub"]], "subdest() (enzbase method)": [[61, "EnzBase.subDest"]], "subout (enzbase attribute)": [[61, "EnzBase.subOut"]], "exif (built-in class)": [[62, "ExIF"]], "deltathresh (exif attribute)": [[62, "ExIF.deltaThresh"]], "getdeltathresh() (exif method)": [[62, "ExIF.getDeltaThresh"]], "getvpeak() (exif method)": [[62, "ExIF.getVPeak"]], "setdeltathresh() (exif method)": [[62, "ExIF.setDeltaThresh"]], "setvpeak() (exif method)": [[62, "ExIF.setVPeak"]], "vpeak (exif attribute)": [[62, "ExIF.vPeak"]], "exponentialrng (built-in class)": [[63, "ExponentialRng"]], "getmean() (exponentialrng method)": [[63, "ExponentialRng.getMean"]], "getmethod() (exponentialrng method)": [[63, "ExponentialRng.getMethod"]], "mean (exponentialrng attribute)": [[63, "ExponentialRng.mean"]], "method (exponentialrng attribute)": [[63, "ExponentialRng.method"]], "setmean() (exponentialrng method)": [[63, "ExponentialRng.setMean"]], "setmethod() (exponentialrng method)": [[63, "ExponentialRng.setMethod"]], "finfo (built-in class)": [[64, "Finfo"]], "dest (finfo attribute)": [[64, "Finfo.dest"]], "docs (finfo attribute)": [[64, "Finfo.docs"]], "fieldname (finfo attribute)": [[64, "Finfo.fieldName"]], "getdest() (finfo method)": [[64, "Finfo.getDest"]], "getdocs() (finfo method)": [[64, "Finfo.getDocs"]], "getfieldname() (finfo method)": [[64, "Finfo.getFieldName"]], "getsrc() (finfo method)": [[64, "Finfo.getSrc"]], "gettype() (finfo method)": [[64, "Finfo.getType"]], "src (finfo attribute)": [[64, "Finfo.src"]], "type (finfo attribute)": [[64, "Finfo.type"]], "func (built-in class)": [[65, "Func"]], "derivative (func attribute)": [[65, "Func.derivative"]], "derivativeout (func attribute)": [[65, "Func.derivativeOut"]], "expr (func attribute)": [[65, "Func.expr"]], "getderivative() (func method)": [[65, "Func.getDerivative"]], "getexpr() (func method)": [[65, "Func.getExpr"]], "getmode() (func method)": [[65, "Func.getMode"]], "getvalue() (func method)": [[65, "Func.getValue"]], "getvar() (func method)": [[65, "Func.getVar"]], "getvars() (func method)": [[65, "Func.getVars"]], "getx() (func method)": [[65, "Func.getX"]], "gety() (func method)": [[65, "Func.getY"]], "getz() (func method)": [[65, "Func.getZ"]], "mode (func attribute)": [[65, "Func.mode"]], "proc (func attribute)": [[65, "Func.proc"]], "process() (func method)": [[65, "Func.process"]], "reinit() (func method)": [[65, "Func.reinit"]], "setexpr() (func method)": [[65, "Func.setExpr"]], "setmode() (func method)": [[65, "Func.setMode"]], "setvar() (func method)": [[65, "Func.setVar"]], "setx() (func method)": [[65, "Func.setX"]], "sety() (func method)": [[65, "Func.setY"]], "setz() (func method)": [[65, "Func.setZ"]], "value (func attribute)": [[65, "Func.value"]], "valueout (func attribute)": [[65, "Func.valueOut"]], "var (func attribute)": [[65, "Func.var"]], "varin() (func method)": [[65, "Func.varIn"]], "vars (func attribute)": [[65, "Func.vars"]], "x (func attribute)": [[65, "Func.x"]], "xin() (func method)": [[65, "Func.xIn"]], "xyin() (func method)": [[65, "Func.xyIn"]], "xyzin() (func method)": [[65, "Func.xyzIn"]], "y (func attribute)": [[65, "Func.y"]], "yin() (func method)": [[65, "Func.yIn"]], "z (func attribute)": [[65, "Func.z"]], "zin() (func method)": [[65, "Func.zIn"]], "function (built-in class)": [[66, "Function"]], "gammarng (built-in class)": [[66, "GammaRng"], [67, "GammaRng"]], "alpha (gammarng attribute)": [[66, "GammaRng.alpha"], [67, "GammaRng.alpha"]], "c (function attribute)": [[66, "Function.c"]], "derivative (function attribute)": [[66, "Function.derivative"]], "derivativeout (function attribute)": [[66, "Function.derivativeOut"]], "expr (function attribute)": [[66, "Function.expr"]], "getalpha() (gammarng method)": [[66, "GammaRng.getAlpha"], [67, "GammaRng.getAlpha"]], "getc() (function method)": [[66, "Function.getC"]], "getderivative() (function method)": [[66, "Function.getDerivative"]], "getexpr() (function method)": [[66, "Function.getExpr"]], "getindependent() (function method)": [[66, "Function.getIndependent"]], "getmode() (function method)": [[66, "Function.getMode"]], "getnumvars() (function method)": [[66, "Function.getNumVars"]], "getnumx() (function method)": [[66, "Function.getNumX"]], "getrate() (function method)": [[66, "Function.getRate"]], "gettheta() (gammarng method)": [[66, "GammaRng.getTheta"], [67, "GammaRng.getTheta"]], "getvalue() (function method)": [[66, "Function.getValue"]], "independent (function attribute)": [[66, "Function.independent"]], "mode (function attribute)": [[66, "Function.mode"]], "numvars (function attribute)": [[66, "Function.numVars"]], "proc (function attribute)": [[66, "Function.proc"]], "process() (function method)": [[66, "Function.process"]], "rate (function attribute)": [[66, "Function.rate"]], "rateout (function attribute)": [[66, "Function.rateOut"]], "reinit() (function method)": [[66, "Function.reinit"]], "requestout (function attribute)": [[66, "Function.requestOut"]], "setalpha() (gammarng method)": [[66, "GammaRng.setAlpha"], [67, "GammaRng.setAlpha"]], "setc() (function method)": [[66, "Function.setC"]], "setexpr() (function method)": [[66, "Function.setExpr"]], "setindependent() (function method)": [[66, "Function.setIndependent"]], "setmode() (function method)": [[66, "Function.setMode"]], "setnumvars() (function method)": [[66, "Function.setNumVars"]], "setnumx() (function method)": [[66, "Function.setNumX"]], "settheta() (gammarng method)": [[66, "GammaRng.setTheta"], [67, "GammaRng.setTheta"]], "theta (gammarng attribute)": [[66, "GammaRng.theta"], [67, "GammaRng.theta"]], "value (function attribute)": [[66, "Function.value"]], "valueout (function attribute)": [[66, "Function.valueOut"]], "gapjunction (built-in class)": [[68, "GapJunction"]], "gk (gapjunction attribute)": [[68, "GapJunction.Gk"]], "vm1() (gapjunction method)": [[68, "GapJunction.Vm1"]], "vm2() (gapjunction method)": [[68, "GapJunction.Vm2"]], "channel1 (gapjunction attribute)": [[68, "GapJunction.channel1"]], "channel1out (gapjunction attribute)": [[68, "GapJunction.channel1Out"]], "channel2 (gapjunction attribute)": [[68, "GapJunction.channel2"]], "channel2out (gapjunction attribute)": [[68, "GapJunction.channel2Out"]], "getgk() (gapjunction method)": [[68, "GapJunction.getGk"]], "proc (gapjunction attribute)": [[68, "GapJunction.proc"]], "process() (gapjunction method)": [[68, "GapJunction.process"]], "reinit() (gapjunction method)": [[68, "GapJunction.reinit"]], "setgk() (gapjunction method)": [[68, "GapJunction.setGk"]], "ca (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.Ca"]], "cainit (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.CaInit"]], "capost (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.CaPost"]], "capre (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.CaPre"]], "graupnerbrunel2012caplasticitysynhandler (built-in class)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler"]], "addpostspike() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.addPostSpike"]], "bistable (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.bistable"]], "delayd (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.delayD"]], "gammad (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.gammaD"]], "gammap (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.gammaP"]], "getbistable() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getBistable"]], "getca() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getCa"]], "getcainit() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getCaInit"]], "getcapost() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getCaPost"]], "getcapre() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getCaPre"]], "getdelayd() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getDelayD"]], "getgammad() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getGammaD"]], "getgammap() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getGammaP"]], "getnoisesd() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getNoiseSD"]], "getnoisy() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getNoisy"]], "getnumsynapse() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getNumSynapse"]], "gettauca() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getTauCa"]], "gettausyn() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getTauSyn"]], "getthetad() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getThetaD"]], "getthetap() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getThetaP"]], "getweightmax() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getWeightMax"]], "getweightmin() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getWeightMin"]], "getweightscale() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.getWeightScale"]], "noisesd (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.noiseSD"]], "noisy (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.noisy"]], "setbistable() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setBistable"]], "setca() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setCa"]], "setcainit() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setCaInit"]], "setcapost() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setCaPost"]], "setcapre() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setCaPre"]], "setdelayd() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setDelayD"]], "setgammad() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setGammaD"]], "setgammap() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setGammaP"]], "setnoisesd() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setNoiseSD"]], "setnoisy() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setNoisy"]], "setnumsynapse() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setNumSynapse"]], "settauca() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setTauCa"]], "settausyn() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setTauSyn"]], "setthetad() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setThetaD"]], "setthetap() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setThetaP"]], "setweightmax() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setWeightMax"]], "setweightmin() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setWeightMin"]], "setweightscale() (graupnerbrunel2012caplasticitysynhandler method)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.setWeightScale"]], "tauca (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.tauCa"]], "tausyn (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.tauSyn"]], "thetad (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.thetaD"]], "thetap (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.thetaP"]], "weightmax (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.weightMax"]], "weightmin (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.weightMin"]], "weightscale (graupnerbrunel2012caplasticitysynhandler attribute)": [[69, "GraupnerBrunel2012CaPlasticitySynHandler.weightScale"]], "group (built-in class)": [[70, "Group"]], "group (group attribute)": [[70, "Group.group"]], "gsolve (built-in class)": [[71, "Gsolve"]], "getnvec() (gsolve method)": [[71, "Gsolve.getNVec"]], "getnumallvoxels() (gsolve method)": [[71, "Gsolve.getNumAllVoxels"]], "getnumfire() (gsolve method)": [[71, "Gsolve.getNumFire"]], "getnumlocalvoxels() (gsolve method)": [[71, "Gsolve.getNumLocalVoxels"]], "getnumpools() (gsolve method)": [[71, "Gsolve.getNumPools"]], "getstoich() (gsolve method)": [[71, "Gsolve.getStoich"]], "getuseclockedupdate() (gsolve method)": [[71, "Gsolve.getUseClockedUpdate"]], "getuserandinit() (gsolve method)": [[71, "Gsolve.getUseRandInit"]], "init (gsolve attribute)": [[71, "Gsolve.init"]], "initproc() (gsolve method)": [[71, "Gsolve.initProc"]], "initreinit() (gsolve method)": [[71, "Gsolve.initReinit"]], "nvec (gsolve attribute)": [[71, "Gsolve.nVec"]], "numallvoxels (gsolve attribute)": [[71, "Gsolve.numAllVoxels"]], "numfire (gsolve attribute)": [[71, "Gsolve.numFire"]], "numlocalvoxels (gsolve attribute)": [[71, "Gsolve.numLocalVoxels"]], "numpools (gsolve attribute)": [[71, "Gsolve.numPools"]], "proc (gsolve attribute)": [[71, "Gsolve.proc"]], "process() (gsolve method)": [[71, "Gsolve.process"]], "reinit() (gsolve method)": [[71, "Gsolve.reinit"]], "setnvec() (gsolve method)": [[71, "Gsolve.setNVec"]], "setnumallvoxels() (gsolve method)": [[71, "Gsolve.setNumAllVoxels"]], "setnumpools() (gsolve method)": [[71, "Gsolve.setNumPools"]], "setstoich() (gsolve method)": [[71, "Gsolve.setStoich"]], "setuseclockedupdate() (gsolve method)": [[71, "Gsolve.setUseClockedUpdate"]], "setuserandinit() (gsolve method)": [[71, "Gsolve.setUseRandInit"]], "stoich (gsolve attribute)": [[71, "Gsolve.stoich"]], "useclockedupdate (gsolve attribute)": [[71, "Gsolve.useClockedUpdate"]], "userandinit (gsolve attribute)": [[71, "Gsolve.useRandInit"]], "voxelvol() (gsolve method)": [[71, "Gsolve.voxelVol"]], "xcompt (gsolve attribute)": [[71, "Gsolve.xCompt"]], "xcomptin() (gsolve method)": [[71, "Gsolve.xComptIn"]], "xcomptout (gsolve attribute)": [[71, "Gsolve.xComptOut"]], "hdf5datawriter (built-in class)": [[72, "HDF5DataWriter"]], "flushlimit (hdf5datawriter attribute)": [[72, "HDF5DataWriter.flushLimit"]], "getflushlimit() (hdf5datawriter method)": [[72, "HDF5DataWriter.getFlushLimit"]], "proc (hdf5datawriter attribute)": [[72, "HDF5DataWriter.proc"]], "process() (hdf5datawriter method)": [[72, "HDF5DataWriter.process"]], "reinit() (hdf5datawriter method)": [[72, "HDF5DataWriter.reinit"]], "requestout (hdf5datawriter attribute)": [[72, "HDF5DataWriter.requestOut"]], "setflushlimit() (hdf5datawriter method)": [[72, "HDF5DataWriter.setFlushLimit"]], "hdf5writerbase (built-in class)": [[73, "HDF5WriterBase"]], "chunksize (hdf5writerbase attribute)": [[73, "HDF5WriterBase.chunkSize"]], "close() (hdf5writerbase method)": [[73, "HDF5WriterBase.close"]], "compression (hdf5writerbase attribute)": [[73, "HDF5WriterBase.compression"]], "compressor (hdf5writerbase attribute)": [[73, "HDF5WriterBase.compressor"]], "doubleattr (hdf5writerbase attribute)": [[73, "HDF5WriterBase.doubleAttr"]], "doublevecattr (hdf5writerbase attribute)": [[73, "HDF5WriterBase.doubleVecAttr"]], "filename (hdf5writerbase attribute)": [[73, "HDF5WriterBase.filename"]], "flush() (hdf5writerbase method)": [[73, "HDF5WriterBase.flush"]], "getchunksize() (hdf5writerbase method)": [[73, "HDF5WriterBase.getChunkSize"]], "getcompression() (hdf5writerbase method)": [[73, "HDF5WriterBase.getCompression"]], "getcompressor() (hdf5writerbase method)": [[73, "HDF5WriterBase.getCompressor"]], "getdoubleattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.getDoubleAttr"]], "getdoublevecattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.getDoubleVecAttr"]], "getfilename() (hdf5writerbase method)": [[73, "HDF5WriterBase.getFilename"]], "getisopen() (hdf5writerbase method)": [[73, "HDF5WriterBase.getIsOpen"]], "getlongattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.getLongAttr"]], "getlongvecattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.getLongVecAttr"]], "getmode() (hdf5writerbase method)": [[73, "HDF5WriterBase.getMode"]], "getstringattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.getStringAttr"]], "getstringvecattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.getStringVecAttr"]], "isopen (hdf5writerbase attribute)": [[73, "HDF5WriterBase.isOpen"]], "longattr (hdf5writerbase attribute)": [[73, "HDF5WriterBase.longAttr"]], "longvecattr (hdf5writerbase attribute)": [[73, "HDF5WriterBase.longVecAttr"]], "mode (hdf5writerbase attribute)": [[73, "HDF5WriterBase.mode"]], "setchunksize() (hdf5writerbase method)": [[73, "HDF5WriterBase.setChunkSize"]], "setcompression() (hdf5writerbase method)": [[73, "HDF5WriterBase.setCompression"]], "setcompressor() (hdf5writerbase method)": [[73, "HDF5WriterBase.setCompressor"]], "setdoubleattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.setDoubleAttr"]], "setdoublevecattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.setDoubleVecAttr"]], "setfilename() (hdf5writerbase method)": [[73, "HDF5WriterBase.setFilename"]], "setlongattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.setLongAttr"]], "setlongvecattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.setLongVecAttr"]], "setmode() (hdf5writerbase method)": [[73, "HDF5WriterBase.setMode"]], "setstringattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.setStringAttr"]], "setstringvecattr() (hdf5writerbase method)": [[73, "HDF5WriterBase.setStringVecAttr"]], "stringattr (hdf5writerbase attribute)": [[73, "HDF5WriterBase.stringAttr"]], "stringvecattr (hdf5writerbase attribute)": [[73, "HDF5WriterBase.stringVecAttr"]], "hhchannel (built-in class)": [[74, "HHChannel"]], "hhchannel2d (built-in class)": [[75, "HHChannel2D"]], "x (hhchannel2d attribute)": [[75, "HHChannel2D.X"]], "xindex (hhchannel2d attribute)": [[75, "HHChannel2D.Xindex"]], "xpower (hhchannel2d attribute)": [[75, "HHChannel2D.Xpower"]], "y (hhchannel2d attribute)": [[75, "HHChannel2D.Y"]], "yindex (hhchannel2d attribute)": [[75, "HHChannel2D.Yindex"]], "ypower (hhchannel2d attribute)": [[75, "HHChannel2D.Ypower"]], "z (hhchannel2d attribute)": [[75, "HHChannel2D.Z"]], "zindex (hhchannel2d attribute)": [[75, "HHChannel2D.Zindex"]], "zpower (hhchannel2d attribute)": [[75, "HHChannel2D.Zpower"]], "concen() (hhchannel2d method)": [[75, "HHChannel2D.concen"]], "concen2() (hhchannel2d method)": [[75, "HHChannel2D.concen2"]], "getinstant() (hhchannel2d method)": [[75, "HHChannel2D.getInstant"]], "getnumgatex() (hhchannel2d method)": [[75, "HHChannel2D.getNumGateX"]], "getnumgatey() (hhchannel2d method)": [[75, "HHChannel2D.getNumGateY"]], "getnumgatez() (hhchannel2d method)": [[75, "HHChannel2D.getNumGateZ"]], "getx() (hhchannel2d method)": [[75, "HHChannel2D.getX"]], "getxindex() (hhchannel2d method)": [[75, "HHChannel2D.getXindex"]], "getxpower() (hhchannel2d method)": [[75, "HHChannel2D.getXpower"]], "gety() (hhchannel2d method)": [[75, "HHChannel2D.getY"]], "getyindex() (hhchannel2d method)": [[75, "HHChannel2D.getYindex"]], "getypower() (hhchannel2d method)": [[75, "HHChannel2D.getYpower"]], "getz() (hhchannel2d method)": [[75, "HHChannel2D.getZ"]], "getzindex() (hhchannel2d method)": [[75, "HHChannel2D.getZindex"]], "getzpower() (hhchannel2d method)": [[75, "HHChannel2D.getZpower"]], "instant (hhchannel2d attribute)": [[75, "HHChannel2D.instant"]], "setinstant() (hhchannel2d method)": [[75, "HHChannel2D.setInstant"]], "setnumgatex() (hhchannel2d method)": [[75, "HHChannel2D.setNumGateX"]], "setnumgatey() (hhchannel2d method)": [[75, "HHChannel2D.setNumGateY"]], "setnumgatez() (hhchannel2d method)": [[75, "HHChannel2D.setNumGateZ"]], "setx() (hhchannel2d method)": [[75, "HHChannel2D.setX"]], "setxindex() (hhchannel2d method)": [[75, "HHChannel2D.setXindex"]], "setxpower() (hhchannel2d method)": [[75, "HHChannel2D.setXpower"]], "sety() (hhchannel2d method)": [[75, "HHChannel2D.setY"]], "setyindex() (hhchannel2d method)": [[75, "HHChannel2D.setYindex"]], "setypower() (hhchannel2d method)": [[75, "HHChannel2D.setYpower"]], "setz() (hhchannel2d method)": [[75, "HHChannel2D.setZ"]], "setzindex() (hhchannel2d method)": [[75, "HHChannel2D.setZindex"]], "setzpower() (hhchannel2d method)": [[75, "HHChannel2D.setZpower"]], "hhchannelbase (built-in class)": [[76, "HHChannelBase"]], "x (hhchannelbase attribute)": [[76, "HHChannelBase.X"]], "xpower (hhchannelbase attribute)": [[76, "HHChannelBase.Xpower"]], "y (hhchannelbase attribute)": [[76, "HHChannelBase.Y"]], "ypower (hhchannelbase attribute)": [[76, "HHChannelBase.Ypower"]], "z (hhchannelbase attribute)": [[76, "HHChannelBase.Z"]], "zpower (hhchannelbase attribute)": [[76, "HHChannelBase.Zpower"]], "concen() (hhchannelbase method)": [[76, "HHChannelBase.concen"]], "creategate() (hhchannelbase method)": [[76, "HHChannelBase.createGate"]], "getinstant() (hhchannelbase method)": [[76, "HHChannelBase.getInstant"]], "getnumgatex() (hhchannelbase method)": [[76, "HHChannelBase.getNumGateX"]], "getnumgatey() (hhchannelbase method)": [[76, "HHChannelBase.getNumGateY"]], "getnumgatez() (hhchannelbase method)": [[76, "HHChannelBase.getNumGateZ"]], "getuseconcentration() (hhchannelbase method)": [[76, "HHChannelBase.getUseConcentration"]], "getx() (hhchannelbase method)": [[76, "HHChannelBase.getX"]], "getxpower() (hhchannelbase method)": [[76, "HHChannelBase.getXpower"]], "gety() (hhchannelbase method)": [[76, "HHChannelBase.getY"]], "getypower() (hhchannelbase method)": [[76, "HHChannelBase.getYpower"]], "getz() (hhchannelbase method)": [[76, "HHChannelBase.getZ"]], "getzpower() (hhchannelbase method)": [[76, "HHChannelBase.getZpower"]], "instant (hhchannelbase attribute)": [[76, "HHChannelBase.instant"]], "setinstant() (hhchannelbase method)": [[76, "HHChannelBase.setInstant"]], "setnumgatex() (hhchannelbase method)": [[76, "HHChannelBase.setNumGateX"]], "setnumgatey() (hhchannelbase method)": [[76, "HHChannelBase.setNumGateY"]], "setnumgatez() (hhchannelbase method)": [[76, "HHChannelBase.setNumGateZ"]], "setuseconcentration() (hhchannelbase method)": [[76, "HHChannelBase.setUseConcentration"]], "setx() (hhchannelbase method)": [[76, "HHChannelBase.setX"]], "setxpower() (hhchannelbase method)": [[76, "HHChannelBase.setXpower"]], "sety() (hhchannelbase method)": [[76, "HHChannelBase.setY"]], "setypower() (hhchannelbase method)": [[76, "HHChannelBase.setYpower"]], "setz() (hhchannelbase method)": [[76, "HHChannelBase.setZ"]], "setzpower() (hhchannelbase method)": [[76, "HHChannelBase.setZpower"]], "useconcentration (hhchannelbase attribute)": [[76, "HHChannelBase.useConcentration"]], "a (hhgate attribute)": [[77, "HHGate.A"]], "b (hhgate attribute)": [[77, "HHGate.B"]], "hhgate (built-in class)": [[77, "HHGate"]], "alpha (hhgate attribute)": [[77, "HHGate.alpha"]], "alphaparms (hhgate attribute)": [[77, "HHGate.alphaParms"]], "beta (hhgate attribute)": [[77, "HHGate.beta"]], "divs (hhgate attribute)": [[77, "HHGate.divs"]], "geta() (hhgate method)": [[77, "HHGate.getA"]], "getalpha() (hhgate method)": [[77, "HHGate.getAlpha"]], "getalphaparms() (hhgate method)": [[77, "HHGate.getAlphaParms"]], "getb() (hhgate method)": [[77, "HHGate.getB"]], "getbeta() (hhgate method)": [[77, "HHGate.getBeta"]], "getdivs() (hhgate method)": [[77, "HHGate.getDivs"]], "getminfinity() (hhgate method)": [[77, "HHGate.getMInfinity"]], "getmax() (hhgate method)": [[77, "HHGate.getMax"]], "getmin() (hhgate method)": [[77, "HHGate.getMin"]], "gettablea() (hhgate method)": [[77, "HHGate.getTableA"]], "gettableb() (hhgate method)": [[77, "HHGate.getTableB"]], "gettau() (hhgate method)": [[77, "HHGate.getTau"]], "getuseinterpolation() (hhgate method)": [[77, "HHGate.getUseInterpolation"]], "minfinity (hhgate attribute)": [[77, "HHGate.mInfinity"]], "max (hhgate attribute)": [[77, "HHGate.max"]], "min (hhgate attribute)": [[77, "HHGate.min"]], "setalpha() (hhgate method)": [[77, "HHGate.setAlpha"]], "setalphaparms() (hhgate method)": [[77, "HHGate.setAlphaParms"]], "setbeta() (hhgate method)": [[77, "HHGate.setBeta"]], "setdivs() (hhgate method)": [[77, "HHGate.setDivs"]], "setminfinity() (hhgate method)": [[77, "HHGate.setMInfinity"]], "setmax() (hhgate method)": [[77, "HHGate.setMax"]], "setmin() (hhgate method)": [[77, "HHGate.setMin"]], "settablea() (hhgate method)": [[77, "HHGate.setTableA"]], "settableb() (hhgate method)": [[77, "HHGate.setTableB"]], "settau() (hhgate method)": [[77, "HHGate.setTau"]], "setuseinterpolation() (hhgate method)": [[77, "HHGate.setUseInterpolation"]], "setupalpha() (hhgate method)": [[77, "HHGate.setupAlpha"]], "setupgate() (hhgate method)": [[77, "HHGate.setupGate"]], "setuptau() (hhgate method)": [[77, "HHGate.setupTau"]], "tablea (hhgate attribute)": [[77, "HHGate.tableA"]], "tableb (hhgate attribute)": [[77, "HHGate.tableB"]], "tau (hhgate attribute)": [[77, "HHGate.tau"]], "tweakalpha() (hhgate method)": [[77, "HHGate.tweakAlpha"]], "tweaktau() (hhgate method)": [[77, "HHGate.tweakTau"]], "useinterpolation (hhgate attribute)": [[77, "HHGate.useInterpolation"]], "a (hhgate2d attribute)": [[78, "HHGate2D.A"]], "b (hhgate2d attribute)": [[78, "HHGate2D.B"]], "hhgate2d (built-in class)": [[78, "HHGate2D"]], "geta() (hhgate2d method)": [[78, "HHGate2D.getA"]], "getb() (hhgate2d method)": [[78, "HHGate2D.getB"]], "gettablea() (hhgate2d method)": [[78, "HHGate2D.getTableA"]], "gettableb() (hhgate2d method)": [[78, "HHGate2D.getTableB"]], "getxdivsa() (hhgate2d method)": [[78, "HHGate2D.getXdivsA"]], "getxdivsb() (hhgate2d method)": [[78, "HHGate2D.getXdivsB"]], "getxmaxa() (hhgate2d method)": [[78, "HHGate2D.getXmaxA"]], "getxmaxb() (hhgate2d method)": [[78, "HHGate2D.getXmaxB"]], "getxmina() (hhgate2d method)": [[78, "HHGate2D.getXminA"]], "getxminb() (hhgate2d method)": [[78, "HHGate2D.getXminB"]], "getydivsa() (hhgate2d method)": [[78, "HHGate2D.getYdivsA"]], "getydivsb() (hhgate2d method)": [[78, "HHGate2D.getYdivsB"]], "getymaxa() (hhgate2d method)": [[78, "HHGate2D.getYmaxA"]], "getymaxb() (hhgate2d method)": [[78, "HHGate2D.getYmaxB"]], "getymina() (hhgate2d method)": [[78, "HHGate2D.getYminA"]], "getyminb() (hhgate2d method)": [[78, "HHGate2D.getYminB"]], "settablea() (hhgate2d method)": [[78, "HHGate2D.setTableA"]], "settableb() (hhgate2d method)": [[78, "HHGate2D.setTableB"]], "setxdivsa() (hhgate2d method)": [[78, "HHGate2D.setXdivsA"]], "setxdivsb() (hhgate2d method)": [[78, "HHGate2D.setXdivsB"]], "setxmaxa() (hhgate2d method)": [[78, "HHGate2D.setXmaxA"]], "setxmaxb() (hhgate2d method)": [[78, "HHGate2D.setXmaxB"]], "setxmina() (hhgate2d method)": [[78, "HHGate2D.setXminA"]], "setxminb() (hhgate2d method)": [[78, "HHGate2D.setXminB"]], "setydivsa() (hhgate2d method)": [[78, "HHGate2D.setYdivsA"]], "setydivsb() (hhgate2d method)": [[78, "HHGate2D.setYdivsB"]], "setymaxa() (hhgate2d method)": [[78, "HHGate2D.setYmaxA"]], "setymaxb() (hhgate2d method)": [[78, "HHGate2D.setYmaxB"]], "setymina() (hhgate2d method)": [[78, "HHGate2D.setYminA"]], "setyminb() (hhgate2d method)": [[78, "HHGate2D.setYminB"]], "tablea (hhgate2d attribute)": [[78, "HHGate2D.tableA"]], "tableb (hhgate2d attribute)": [[78, "HHGate2D.tableB"]], "xdivsa (hhgate2d attribute)": [[78, "HHGate2D.xdivsA"]], "xdivsb (hhgate2d attribute)": [[78, "HHGate2D.xdivsB"]], "xmaxa (hhgate2d attribute)": [[78, "HHGate2D.xmaxA"]], "xmaxb (hhgate2d attribute)": [[78, "HHGate2D.xmaxB"]], "xmina (hhgate2d attribute)": [[78, "HHGate2D.xminA"]], "xminb (hhgate2d attribute)": [[78, "HHGate2D.xminB"]], "ydivsa (hhgate2d attribute)": [[78, "HHGate2D.ydivsA"]], "ydivsb (hhgate2d attribute)": [[78, "HHGate2D.ydivsB"]], "ymaxa (hhgate2d attribute)": [[78, "HHGate2D.ymaxA"]], "ymaxb (hhgate2d attribute)": [[78, "HHGate2D.ymaxB"]], "ymina (hhgate2d attribute)": [[78, "HHGate2D.yminA"]], "yminb (hhgate2d attribute)": [[78, "HHGate2D.yminB"]], "hsolve (built-in class)": [[79, "HSolve"]], "caadvance (hsolve attribute)": [[79, "HSolve.caAdvance"]], "cadiv (hsolve attribute)": [[79, "HSolve.caDiv"]], "camax (hsolve attribute)": [[79, "HSolve.caMax"]], "camin (hsolve attribute)": [[79, "HSolve.caMin"]], "dt (hsolve attribute)": [[79, "HSolve.dt"]], "getcaadvance() (hsolve method)": [[79, "HSolve.getCaAdvance"]], "getcadiv() (hsolve method)": [[79, "HSolve.getCaDiv"]], "getcamax() (hsolve method)": [[79, "HSolve.getCaMax"]], "getcamin() (hsolve method)": [[79, "HSolve.getCaMin"]], "getdt() (hsolve method)": [[79, "HSolve.getDt"]], "getseed() (hsolve method)": [[79, "HSolve.getSeed"]], "gettarget() (hsolve method)": [[79, "HSolve.getTarget"]], "getvdiv() (hsolve method)": [[79, "HSolve.getVDiv"]], "getvmax() (hsolve method)": [[79, "HSolve.getVMax"]], "getvmin() (hsolve method)": [[79, "HSolve.getVMin"]], "proc (hsolve attribute)": [[79, "HSolve.proc"]], "process() (hsolve method)": [[79, "HSolve.process"]], "reinit() (hsolve method)": [[79, "HSolve.reinit"]], "seed (hsolve attribute)": [[79, "HSolve.seed"]], "setcaadvance() (hsolve method)": [[79, "HSolve.setCaAdvance"]], "setcadiv() (hsolve method)": [[79, "HSolve.setCaDiv"]], "setcamax() (hsolve method)": [[79, "HSolve.setCaMax"]], "setcamin() (hsolve method)": [[79, "HSolve.setCaMin"]], "setdt() (hsolve method)": [[79, "HSolve.setDt"]], "setseed() (hsolve method)": [[79, "HSolve.setSeed"]], "settarget() (hsolve method)": [[79, "HSolve.setTarget"]], "setvdiv() (hsolve method)": [[79, "HSolve.setVDiv"]], "setvmax() (hsolve method)": [[79, "HSolve.setVMax"]], "setvmin() (hsolve method)": [[79, "HSolve.setVMin"]], "target (hsolve attribute)": [[79, "HSolve.target"]], "vdiv (hsolve attribute)": [[79, "HSolve.vDiv"]], "vmax (hsolve attribute)": [[79, "HSolve.vMax"]], "vmin (hsolve attribute)": [[79, "HSolve.vMin"]], "inputvariable (built-in class)": [[80, "InputVariable"]], "input() (inputvariable method)": [[80, "InputVariable.input"]], "intfire (built-in class)": [[81, "IntFire"]], "vm (intfire attribute)": [[81, "IntFire.Vm"]], "activation() (intfire method)": [[81, "IntFire.activation"]], "getrefractoryperiod() (intfire method)": [[81, "IntFire.getRefractoryPeriod"]], "gettau() (intfire method)": [[81, "IntFire.getTau"]], "getthresh() (intfire method)": [[81, "IntFire.getThresh"]], "getvm() (intfire method)": [[81, "IntFire.getVm"]], "proc (intfire attribute)": [[81, "IntFire.proc"]], "process() (intfire method)": [[81, "IntFire.process"]], "refractoryperiod (intfire attribute)": [[81, "IntFire.refractoryPeriod"]], "reinit() (intfire method)": [[81, "IntFire.reinit"]], "setrefractoryperiod() (intfire method)": [[81, "IntFire.setRefractoryPeriod"]], "settau() (intfire method)": [[81, "IntFire.setTau"]], "setthresh() (intfire method)": [[81, "IntFire.setThresh"]], "setvm() (intfire method)": [[81, "IntFire.setVm"]], "spikeout (intfire attribute)": [[81, "IntFire.spikeOut"]], "tau (intfire attribute)": [[81, "IntFire.tau"]], "thresh (intfire attribute)": [[81, "IntFire.thresh"]], "intfirebase (built-in class)": [[82, "IntFireBase"]], "activation() (intfirebase method)": [[82, "IntFireBase.activation"]], "gethasfired() (intfirebase method)": [[82, "IntFireBase.getHasFired"]], "getlasteventtime() (intfirebase method)": [[82, "IntFireBase.getLastEventTime"]], "getrefractoryperiod() (intfirebase method)": [[82, "IntFireBase.getRefractoryPeriod"]], "getthresh() (intfirebase method)": [[82, "IntFireBase.getThresh"]], "getvreset() (intfirebase method)": [[82, "IntFireBase.getVReset"]], "hasfired (intfirebase attribute)": [[82, "IntFireBase.hasFired"]], "lasteventtime (intfirebase attribute)": [[82, "IntFireBase.lastEventTime"]], "refractoryperiod (intfirebase attribute)": [[82, "IntFireBase.refractoryPeriod"]], "setrefractoryperiod() (intfirebase method)": [[82, "IntFireBase.setRefractoryPeriod"]], "setthresh() (intfirebase method)": [[82, "IntFireBase.setThresh"]], "setvreset() (intfirebase method)": [[82, "IntFireBase.setVReset"]], "spikeout (intfirebase attribute)": [[82, "IntFireBase.spikeOut"]], "thresh (intfirebase attribute)": [[82, "IntFireBase.thresh"]], "vreset (intfirebase attribute)": [[82, "IntFireBase.vReset"]], "interpol (built-in class)": [[83, "Interpol"]], "getxmax() (interpol method)": [[83, "Interpol.getXmax"]], "getxmin() (interpol method)": [[83, "Interpol.getXmin"]], "gety() (interpol method)": [[83, "Interpol.getY"]], "input() (interpol method)": [[83, "Interpol.input"]], "lookupout (interpol attribute)": [[83, "Interpol.lookupOut"]], "proc (interpol attribute)": [[83, "Interpol.proc"]], "process() (interpol method)": [[83, "Interpol.process"]], "reinit() (interpol method)": [[83, "Interpol.reinit"]], "setxmax() (interpol method)": [[83, "Interpol.setXmax"]], "setxmin() (interpol method)": [[83, "Interpol.setXmin"]], "xmax (interpol attribute)": [[83, "Interpol.xmax"]], "xmin (interpol attribute)": [[83, "Interpol.xmin"]], "y (interpol attribute)": [[83, "Interpol.y"]], "interpol2d (built-in class)": [[84, "Interpol2D"]], "dx (interpol2d attribute)": [[84, "Interpol2D.dx"]], "dy (interpol2d attribute)": [[84, "Interpol2D.dy"]], "getdx() (interpol2d method)": [[84, "Interpol2D.getDx"]], "getdy() (interpol2d method)": [[84, "Interpol2D.getDy"]], "gettable() (interpol2d method)": [[84, "Interpol2D.getTable"]], "gettablevector2d() (interpol2d method)": [[84, "Interpol2D.getTableVector2D"]], "getxdivs() (interpol2d method)": [[84, "Interpol2D.getXdivs"]], "getxmax() (interpol2d method)": [[84, "Interpol2D.getXmax"]], "getxmin() (interpol2d method)": [[84, "Interpol2D.getXmin"]], "getydivs() (interpol2d method)": [[84, "Interpol2D.getYdivs"]], "getymax() (interpol2d method)": [[84, "Interpol2D.getYmax"]], "getymin() (interpol2d method)": [[84, "Interpol2D.getYmin"]], "getz() (interpol2d method)": [[84, "Interpol2D.getZ"]], "lookup() (interpol2d method)": [[84, "Interpol2D.lookup"]], "lookupout (interpol2d attribute)": [[84, "Interpol2D.lookupOut"]], "lookupreturn2d (interpol2d attribute)": [[84, "Interpol2D.lookupReturn2D"]], "setdx() (interpol2d method)": [[84, "Interpol2D.setDx"]], "setdy() (interpol2d method)": [[84, "Interpol2D.setDy"]], "settable() (interpol2d method)": [[84, "Interpol2D.setTable"]], "settablevector2d() (interpol2d method)": [[84, "Interpol2D.setTableVector2D"]], "setxdivs() (interpol2d method)": [[84, "Interpol2D.setXdivs"]], "setxmax() (interpol2d method)": [[84, "Interpol2D.setXmax"]], "setxmin() (interpol2d method)": [[84, "Interpol2D.setXmin"]], "setydivs() (interpol2d method)": [[84, "Interpol2D.setYdivs"]], "setymax() (interpol2d method)": [[84, "Interpol2D.setYmax"]], "setymin() (interpol2d method)": [[84, "Interpol2D.setYmin"]], "table (interpol2d attribute)": [[84, "Interpol2D.table"]], "tablevector2d (interpol2d attribute)": [[84, "Interpol2D.tableVector2D"]], "xdivs (interpol2d attribute)": [[84, "Interpol2D.xdivs"]], "xmax (interpol2d attribute)": [[84, "Interpol2D.xmax"]], "xmin (interpol2d attribute)": [[84, "Interpol2D.xmin"]], "ydivs (interpol2d attribute)": [[84, "Interpol2D.ydivs"]], "ymax (interpol2d attribute)": [[84, "Interpol2D.ymax"]], "ymin (interpol2d attribute)": [[84, "Interpol2D.ymin"]], "z (interpol2d attribute)": [[84, "Interpol2D.z"]], "izhif (built-in class)": [[85, "IzhIF"]], "a (izhif attribute)": [[85, "IzhIF.a"]], "a0 (izhif attribute)": [[85, "IzhIF.a0"]], "b (izhif attribute)": [[85, "IzhIF.b"]], "b0 (izhif attribute)": [[85, "IzhIF.b0"]], "c0 (izhif attribute)": [[85, "IzhIF.c0"]], "d (izhif attribute)": [[85, "IzhIF.d"]], "geta() (izhif method)": [[85, "IzhIF.getA"]], "geta0() (izhif method)": [[85, "IzhIF.getA0"]], "getb() (izhif method)": [[85, "IzhIF.getB"]], "getb0() (izhif method)": [[85, "IzhIF.getB0"]], "getc0() (izhif method)": [[85, "IzhIF.getC0"]], "getd() (izhif method)": [[85, "IzhIF.getD"]], "getu() (izhif method)": [[85, "IzhIF.getU"]], "getuinit() (izhif method)": [[85, "IzhIF.getUInit"]], "getvpeak() (izhif method)": [[85, "IzhIF.getVPeak"]], "seta() (izhif method)": [[85, "IzhIF.setA"]], "seta0() (izhif method)": [[85, "IzhIF.setA0"]], "setb() (izhif method)": [[85, "IzhIF.setB"]], "setb0() (izhif method)": [[85, "IzhIF.setB0"]], "setc0() (izhif method)": [[85, "IzhIF.setC0"]], "setd() (izhif method)": [[85, "IzhIF.setD"]], "setu() (izhif method)": [[85, "IzhIF.setU"]], "setuinit() (izhif method)": [[85, "IzhIF.setUInit"]], "setvpeak() (izhif method)": [[85, "IzhIF.setVPeak"]], "u (izhif attribute)": [[85, "IzhIF.u"]], "uinit (izhif attribute)": [[85, "IzhIF.uInit"]], "vpeak (izhif attribute)": [[85, "IzhIF.vPeak"]], "im (izhikevichnrn attribute)": [[86, "IzhikevichNrn.Im"]], "izhikevichnrn (built-in class)": [[86, "IzhikevichNrn"]], "rmbytau (izhikevichnrn attribute)": [[86, "IzhikevichNrn.RmByTau"]], "vm (izhikevichnrn attribute)": [[86, "IzhikevichNrn.Vm"]], "vmout (izhikevichnrn attribute)": [[86, "IzhikevichNrn.VmOut"], [86, "id0"]], "vmax (izhikevichnrn attribute)": [[86, "IzhikevichNrn.Vmax"]], "a (izhikevichnrn attribute)": [[86, "IzhikevichNrn.a"]], "adest() (izhikevichnrn method)": [[86, "IzhikevichNrn.aDest"]], "accommodating (izhikevichnrn attribute)": [[86, "IzhikevichNrn.accommodating"]], "alpha (izhikevichnrn attribute)": [[86, "IzhikevichNrn.alpha"]], "b (izhikevichnrn attribute)": [[86, "IzhikevichNrn.b"]], "bdest() (izhikevichnrn method)": [[86, "IzhikevichNrn.bDest"]], "beta (izhikevichnrn attribute)": [[86, "IzhikevichNrn.beta"]], "c (izhikevichnrn attribute)": [[86, "IzhikevichNrn.c"]], "cdest() (izhikevichnrn method)": [[86, "IzhikevichNrn.cDest"]], "channel (izhikevichnrn attribute)": [[86, "IzhikevichNrn.channel"]], "d (izhikevichnrn attribute)": [[86, "IzhikevichNrn.d"]], "ddest() (izhikevichnrn method)": [[86, "IzhikevichNrn.dDest"]], "gamma (izhikevichnrn attribute)": [[86, "IzhikevichNrn.gamma"]], "geta() (izhikevichnrn method)": [[86, "IzhikevichNrn.getA"]], "getaccommodating() (izhikevichnrn method)": [[86, "IzhikevichNrn.getAccommodating"]], "getalpha() (izhikevichnrn method)": [[86, "IzhikevichNrn.getAlpha"]], "getb() (izhikevichnrn method)": [[86, "IzhikevichNrn.getB"]], "getbeta() (izhikevichnrn method)": [[86, "IzhikevichNrn.getBeta"]], "getc() (izhikevichnrn method)": [[86, "IzhikevichNrn.getC"]], "getd() (izhikevichnrn method)": [[86, "IzhikevichNrn.getD"]], "getgamma() (izhikevichnrn method)": [[86, "IzhikevichNrn.getGamma"]], "getim() (izhikevichnrn method)": [[86, "IzhikevichNrn.getIm"]], "getinitu() (izhikevichnrn method)": [[86, "IzhikevichNrn.getInitU"]], "getinitvm() (izhikevichnrn method)": [[86, "IzhikevichNrn.getInitVm"]], "getinject() (izhikevichnrn method)": [[86, "IzhikevichNrn.getInject"]], "getrmbytau() (izhikevichnrn method)": [[86, "IzhikevichNrn.getRmByTau"]], "getu() (izhikevichnrn method)": [[86, "IzhikevichNrn.getU"]], "getu0() (izhikevichnrn method)": [[86, "IzhikevichNrn.getU0"]], "getvm() (izhikevichnrn method)": [[86, "IzhikevichNrn.getVm"]], "getvmax() (izhikevichnrn method)": [[86, "IzhikevichNrn.getVmax"]], "handlechannel() (izhikevichnrn method)": [[86, "IzhikevichNrn.handleChannel"]], "initu (izhikevichnrn attribute)": [[86, "IzhikevichNrn.initU"]], "initvm (izhikevichnrn attribute)": [[86, "IzhikevichNrn.initVm"]], "inject (izhikevichnrn attribute)": [[86, "IzhikevichNrn.inject"]], "injectmsg() (izhikevichnrn method)": [[86, "IzhikevichNrn.injectMsg"]], "proc (izhikevichnrn attribute)": [[86, "IzhikevichNrn.proc"]], "process() (izhikevichnrn method)": [[86, "IzhikevichNrn.process"]], "reinit() (izhikevichnrn method)": [[86, "IzhikevichNrn.reinit"]], "seta() (izhikevichnrn method)": [[86, "IzhikevichNrn.setA"]], "setaccommodating() (izhikevichnrn method)": [[86, "IzhikevichNrn.setAccommodating"]], "setalpha() (izhikevichnrn method)": [[86, "IzhikevichNrn.setAlpha"]], "setb() (izhikevichnrn method)": [[86, "IzhikevichNrn.setB"]], "setbeta() (izhikevichnrn method)": [[86, "IzhikevichNrn.setBeta"]], "setc() (izhikevichnrn method)": [[86, "IzhikevichNrn.setC"]], "setd() (izhikevichnrn method)": [[86, "IzhikevichNrn.setD"]], "setgamma() (izhikevichnrn method)": [[86, "IzhikevichNrn.setGamma"]], "setinitu() (izhikevichnrn method)": [[86, "IzhikevichNrn.setInitU"]], "setinitvm() (izhikevichnrn method)": [[86, "IzhikevichNrn.setInitVm"]], "setinject() (izhikevichnrn method)": [[86, "IzhikevichNrn.setInject"]], "setrmbytau() (izhikevichnrn method)": [[86, "IzhikevichNrn.setRmByTau"]], "setu0() (izhikevichnrn method)": [[86, "IzhikevichNrn.setU0"]], "setvm() (izhikevichnrn method)": [[86, "IzhikevichNrn.setVm"]], "setvmax() (izhikevichnrn method)": [[86, "IzhikevichNrn.setVmax"]], "spikeout (izhikevichnrn attribute)": [[86, "IzhikevichNrn.spikeOut"]], "u (izhikevichnrn attribute)": [[86, "IzhikevichNrn.u"]], "u0 (izhikevichnrn attribute)": [[86, "IzhikevichNrn.u0"]], "ksolve (built-in class)": [[87, "Ksolve"]], "compartment (ksolve attribute)": [[87, "Ksolve.compartment"]], "epsabs (ksolve attribute)": [[87, "Ksolve.epsAbs"]], "epsrel (ksolve attribute)": [[87, "Ksolve.epsRel"]], "estimateddt (ksolve attribute)": [[87, "Ksolve.estimatedDt"]], "getcompartment() (ksolve method)": [[87, "Ksolve.getCompartment"]], "getepsabs() (ksolve method)": [[87, "Ksolve.getEpsAbs"]], "getepsrel() (ksolve method)": [[87, "Ksolve.getEpsRel"]], "getestimateddt() (ksolve method)": [[87, "Ksolve.getEstimatedDt"]], "getmethod() (ksolve method)": [[87, "Ksolve.getMethod"]], "getnvec() (ksolve method)": [[87, "Ksolve.getNVec"]], "getnumallvoxels() (ksolve method)": [[87, "Ksolve.getNumAllVoxels"]], "getnumlocalvoxels() (ksolve method)": [[87, "Ksolve.getNumLocalVoxels"]], "getnumpools() (ksolve method)": [[87, "Ksolve.getNumPools"]], "getstoich() (ksolve method)": [[87, "Ksolve.getStoich"]], "init (ksolve attribute)": [[87, "Ksolve.init"]], "initproc() (ksolve method)": [[87, "Ksolve.initProc"]], "initreinit() (ksolve method)": [[87, "Ksolve.initReinit"]], "method (ksolve attribute)": [[87, "Ksolve.method"]], "nvec (ksolve attribute)": [[87, "Ksolve.nVec"]], "numallvoxels (ksolve attribute)": [[87, "Ksolve.numAllVoxels"]], "numlocalvoxels (ksolve attribute)": [[87, "Ksolve.numLocalVoxels"]], "numpools (ksolve attribute)": [[87, "Ksolve.numPools"]], "proc (ksolve attribute)": [[87, "Ksolve.proc"]], "process() (ksolve method)": [[87, "Ksolve.process"]], "reinit() (ksolve method)": [[87, "Ksolve.reinit"]], "setcompartment() (ksolve method)": [[87, "Ksolve.setCompartment"]], "setepsabs() (ksolve method)": [[87, "Ksolve.setEpsAbs"]], "setepsrel() (ksolve method)": [[87, "Ksolve.setEpsRel"]], "setmethod() (ksolve method)": [[87, "Ksolve.setMethod"]], "setnvec() (ksolve method)": [[87, "Ksolve.setNVec"]], "setnumallvoxels() (ksolve method)": [[87, "Ksolve.setNumAllVoxels"]], "setnumpools() (ksolve method)": [[87, "Ksolve.setNumPools"]], "stoich (ksolve attribute)": [[87, "Ksolve.stoich"]], "voxelvol() (ksolve method)": [[87, "Ksolve.voxelVol"]], "xcompt (ksolve attribute)": [[87, "Ksolve.xCompt"]], "xcomptin() (ksolve method)": [[87, "Ksolve.xComptIn"]], "xcomptout (ksolve attribute)": [[87, "Ksolve.xComptOut"]], "lif (built-in class)": [[88, "LIF"]], "leakage (built-in class)": [[89, "Leakage"]], "markovchannel (built-in class)": [[90, "MarkovChannel"]], "vm (markovchannel attribute)": [[90, "MarkovChannel.Vm"]], "gbar (markovchannel attribute)": [[90, "MarkovChannel.gbar"]], "getgbar() (markovchannel method)": [[90, "MarkovChannel.getGbar"]], "getinitialstate() (markovchannel method)": [[90, "MarkovChannel.getInitialState"]], "getlabels() (markovchannel method)": [[90, "MarkovChannel.getLabels"]], "getligandconc() (markovchannel method)": [[90, "MarkovChannel.getLigandConc"]], "getnumopenstates() (markovchannel method)": [[90, "MarkovChannel.getNumOpenStates"]], "getnumstates() (markovchannel method)": [[90, "MarkovChannel.getNumStates"]], "getstate() (markovchannel method)": [[90, "MarkovChannel.getState"]], "getvm() (markovchannel method)": [[90, "MarkovChannel.getVm"]], "handleligandconc() (markovchannel method)": [[90, "MarkovChannel.handleLigandConc"]], "handlestate() (markovchannel method)": [[90, "MarkovChannel.handleState"]], "initialstate (markovchannel attribute)": [[90, "MarkovChannel.initialState"]], "labels (markovchannel attribute)": [[90, "MarkovChannel.labels"]], "ligandconc (markovchannel attribute)": [[90, "MarkovChannel.ligandConc"]], "numopenstates (markovchannel attribute)": [[90, "MarkovChannel.numOpenStates"]], "numstates (markovchannel attribute)": [[90, "MarkovChannel.numStates"]], "setgbar() (markovchannel method)": [[90, "MarkovChannel.setGbar"]], "setinitialstate() (markovchannel method)": [[90, "MarkovChannel.setInitialState"]], "setlabels() (markovchannel method)": [[90, "MarkovChannel.setLabels"]], "setligandconc() (markovchannel method)": [[90, "MarkovChannel.setLigandConc"]], "setnumopenstates() (markovchannel method)": [[90, "MarkovChannel.setNumOpenStates"]], "setnumstates() (markovchannel method)": [[90, "MarkovChannel.setNumStates"]], "setvm() (markovchannel method)": [[90, "MarkovChannel.setVm"]], "state (markovchannel attribute)": [[90, "MarkovChannel.state"]], "markovgslsolver (built-in class)": [[91, "MarkovGslSolver"]], "absoluteaccuracy (markovgslsolver attribute)": [[91, "MarkovGslSolver.absoluteAccuracy"]], "getabsoluteaccuracy() (markovgslsolver method)": [[91, "MarkovGslSolver.getAbsoluteAccuracy"]], "getinternaldt() (markovgslsolver method)": [[91, "MarkovGslSolver.getInternalDt"]], "getisinitialized() (markovgslsolver method)": [[91, "MarkovGslSolver.getIsInitialized"]], "getmethod() (markovgslsolver method)": [[91, "MarkovGslSolver.getMethod"]], "getrelativeaccuracy() (markovgslsolver method)": [[91, "MarkovGslSolver.getRelativeAccuracy"]], "handleq() (markovgslsolver method)": [[91, "MarkovGslSolver.handleQ"]], "init() (markovgslsolver method)": [[91, "MarkovGslSolver.init"]], "internaldt (markovgslsolver attribute)": [[91, "MarkovGslSolver.internalDt"]], "isinitialized (markovgslsolver attribute)": [[91, "MarkovGslSolver.isInitialized"]], "method (markovgslsolver attribute)": [[91, "MarkovGslSolver.method"]], "proc (markovgslsolver attribute)": [[91, "MarkovGslSolver.proc"]], "process() (markovgslsolver method)": [[91, "MarkovGslSolver.process"]], "reinit() (markovgslsolver method)": [[91, "MarkovGslSolver.reinit"]], "relativeaccuracy (markovgslsolver attribute)": [[91, "MarkovGslSolver.relativeAccuracy"]], "setabsoluteaccuracy() (markovgslsolver method)": [[91, "MarkovGslSolver.setAbsoluteAccuracy"]], "setinternaldt() (markovgslsolver method)": [[91, "MarkovGslSolver.setInternalDt"]], "setmethod() (markovgslsolver method)": [[91, "MarkovGslSolver.setMethod"]], "setrelativeaccuracy() (markovgslsolver method)": [[91, "MarkovGslSolver.setRelativeAccuracy"]], "stateout (markovgslsolver attribute)": [[91, "MarkovGslSolver.stateOut"]], "markovratetable (built-in class)": [[92, "MarkovRateTable"]], "q (markovratetable attribute)": [[92, "MarkovRateTable.Q"]], "vm (markovratetable attribute)": [[92, "MarkovRateTable.Vm"]], "channel (markovratetable attribute)": [[92, "MarkovRateTable.channel"]], "getligandconc() (markovratetable method)": [[92, "MarkovRateTable.getLigandConc"]], "getq() (markovratetable method)": [[92, "MarkovRateTable.getQ"]], "getsize() (markovratetable method)": [[92, "MarkovRateTable.getSize"]], "getvm() (markovratetable method)": [[92, "MarkovRateTable.getVm"]], "handleligandconc() (markovratetable method)": [[92, "MarkovRateTable.handleLigandConc"]], "handlevm() (markovratetable method)": [[92, "MarkovRateTable.handleVm"]], "init() (markovratetable method)": [[92, "MarkovRateTable.init"]], "instratesout (markovratetable attribute)": [[92, "MarkovRateTable.instratesOut"]], "ligandconc (markovratetable attribute)": [[92, "MarkovRateTable.ligandConc"]], "proc (markovratetable attribute)": [[92, "MarkovRateTable.proc"]], "process() (markovratetable method)": [[92, "MarkovRateTable.process"]], "reinit() (markovratetable method)": [[92, "MarkovRateTable.reinit"]], "set1d() (markovratetable method)": [[92, "MarkovRateTable.set1d"]], "set2d() (markovratetable method)": [[92, "MarkovRateTable.set2d"]], "setligandconc() (markovratetable method)": [[92, "MarkovRateTable.setLigandConc"]], "setvm() (markovratetable method)": [[92, "MarkovRateTable.setVm"]], "setconst() (markovratetable method)": [[92, "MarkovRateTable.setconst"]], "size (markovratetable attribute)": [[92, "MarkovRateTable.size"]], "markovsolver (built-in class)": [[93, "MarkovSolver"]], "proc (markovsolver attribute)": [[93, "MarkovSolver.proc"]], "process() (markovsolver method)": [[93, "MarkovSolver.process"]], "reinit() (markovsolver method)": [[93, "MarkovSolver.reinit"]], "markovsolverbase (built-in class)": [[94, "MarkovSolverBase"]], "q (markovsolverbase attribute)": [[94, "MarkovSolverBase.Q"]], "channel (markovsolverbase attribute)": [[94, "MarkovSolverBase.channel"]], "getinitialstate() (markovsolverbase method)": [[94, "MarkovSolverBase.getInitialState"]], "getinvdx() (markovsolverbase method)": [[94, "MarkovSolverBase.getInvdx"]], "getinvdy() (markovsolverbase method)": [[94, "MarkovSolverBase.getInvdy"]], "getq() (markovsolverbase method)": [[94, "MarkovSolverBase.getQ"]], "getstate() (markovsolverbase method)": [[94, "MarkovSolverBase.getState"]], "getxdivs() (markovsolverbase method)": [[94, "MarkovSolverBase.getXdivs"]], "getxmax() (markovsolverbase method)": [[94, "MarkovSolverBase.getXmax"]], "getxmin() (markovsolverbase method)": [[94, "MarkovSolverBase.getXmin"]], "getydivs() (markovsolverbase method)": [[94, "MarkovSolverBase.getYdivs"]], "getymax() (markovsolverbase method)": [[94, "MarkovSolverBase.getYmax"]], "getymin() (markovsolverbase method)": [[94, "MarkovSolverBase.getYmin"]], "handlevm() (markovsolverbase method)": [[94, "MarkovSolverBase.handleVm"]], "init() (markovsolverbase method)": [[94, "MarkovSolverBase.init"]], "initialstate (markovsolverbase attribute)": [[94, "MarkovSolverBase.initialState"]], "invdx (markovsolverbase attribute)": [[94, "MarkovSolverBase.invdx"]], "invdy (markovsolverbase attribute)": [[94, "MarkovSolverBase.invdy"]], "ligandconc() (markovsolverbase method)": [[94, "MarkovSolverBase.ligandConc"]], "proc (markovsolverbase attribute)": [[94, "MarkovSolverBase.proc"]], "process() (markovsolverbase method)": [[94, "MarkovSolverBase.process"]], "reinit() (markovsolverbase method)": [[94, "MarkovSolverBase.reinit"]], "setinitialstate() (markovsolverbase method)": [[94, "MarkovSolverBase.setInitialState"]], "setxdivs() (markovsolverbase method)": [[94, "MarkovSolverBase.setXdivs"]], "setxmax() (markovsolverbase method)": [[94, "MarkovSolverBase.setXmax"]], "setxmin() (markovsolverbase method)": [[94, "MarkovSolverBase.setXmin"]], "setydivs() (markovsolverbase method)": [[94, "MarkovSolverBase.setYdivs"]], "setymax() (markovsolverbase method)": [[94, "MarkovSolverBase.setYmax"]], "setymin() (markovsolverbase method)": [[94, "MarkovSolverBase.setYmin"]], "state (markovsolverbase attribute)": [[94, "MarkovSolverBase.state"]], "stateout (markovsolverbase attribute)": [[94, "MarkovSolverBase.stateOut"]], "xdivs (markovsolverbase attribute)": [[94, "MarkovSolverBase.xdivs"]], "xmax (markovsolverbase attribute)": [[94, "MarkovSolverBase.xmax"]], "xmin (markovsolverbase attribute)": [[94, "MarkovSolverBase.xmin"]], "ydivs (markovsolverbase attribute)": [[94, "MarkovSolverBase.ydivs"]], "ymax (markovsolverbase attribute)": [[94, "MarkovSolverBase.ymax"]], "ymin (markovsolverbase attribute)": [[94, "MarkovSolverBase.ymin"]], "coordinates (meshentry attribute)": [[96, "MeshEntry.Coordinates"]], "diffusionarea (meshentry attribute)": [[96, "MeshEntry.DiffusionArea"]], "diffusionscaling (meshentry attribute)": [[96, "MeshEntry.DiffusionScaling"]], "meshentry (built-in class)": [[96, "MeshEntry"]], "dimensions (meshentry attribute)": [[96, "MeshEntry.dimensions"]], "getcoordinates() (meshentry method)": [[96, "MeshEntry.getCoordinates"]], "getdiffusionarea() (meshentry method)": [[96, "MeshEntry.getDiffusionArea"]], "getdiffusionscaling() (meshentry method)": [[96, "MeshEntry.getDiffusionScaling"]], "getdimensions() (meshentry method)": [[96, "MeshEntry.getDimensions"]], "getmeshtype() (meshentry method)": [[96, "MeshEntry.getMeshType"]], "getneighbors() (meshentry method)": [[96, "MeshEntry.getNeighbors"]], "getvolume() (meshentry method)": [[96, "MeshEntry.getVolume"], [96, "id0"]], "mesh (meshentry attribute)": [[96, "MeshEntry.mesh"]], "meshtype (meshentry attribute)": [[96, "MeshEntry.meshType"]], "neighbors (meshentry attribute)": [[96, "MeshEntry.neighbors"]], "proc (meshentry attribute)": [[96, "MeshEntry.proc"]], "process() (meshentry method)": [[96, "MeshEntry.process"]], "reinit() (meshentry method)": [[96, "MeshEntry.reinit"]], "remeshout (meshentry attribute)": [[96, "MeshEntry.remeshOut"]], "remeshreacsout (meshentry attribute)": [[96, "MeshEntry.remeshReacsOut"]], "volume (meshentry attribute)": [[96, "MeshEntry.volume"]], "cmg (mgblock attribute)": [[97, "MgBlock.CMg"]], "mgblock (built-in class)": [[97, "MgBlock"]], "zk (mgblock attribute)": [[97, "MgBlock.Zk"]], "getcmg() (mgblock method)": [[97, "MgBlock.getCMg"]], "getzk() (mgblock method)": [[97, "MgBlock.getZk"]], "origchannel() (mgblock method)": [[97, "MgBlock.origChannel"]], "setcmg() (mgblock method)": [[97, "MgBlock.setCMg"]], "setzk() (mgblock method)": [[97, "MgBlock.setZk"]], "msg (built-in class)": [[98, "Msg"]], "adjacent (msg attribute)": [[98, "Msg.adjacent"]], "destfieldsone1 (msg attribute)": [[98, "Msg.destFieldsOnE1"]], "destfieldsone2 (msg attribute)": [[98, "Msg.destFieldsOnE2"]], "e1 (msg attribute)": [[98, "Msg.e1"]], "e2 (msg attribute)": [[98, "Msg.e2"]], "getadjacent() (msg method)": [[98, "Msg.getAdjacent"]], "getdestfieldsone1() (msg method)": [[98, "Msg.getDestFieldsOnE1"]], "getdestfieldsone2() (msg method)": [[98, "Msg.getDestFieldsOnE2"]], "gete1() (msg method)": [[98, "Msg.getE1"]], "gete2() (msg method)": [[98, "Msg.getE2"]], "getsrcfieldsone1() (msg method)": [[98, "Msg.getSrcFieldsOnE1"]], "getsrcfieldsone2() (msg method)": [[98, "Msg.getSrcFieldsOnE2"]], "srcfieldsone1 (msg attribute)": [[98, "Msg.srcFieldsOnE1"]], "srcfieldsone2 (msg attribute)": [[98, "Msg.srcFieldsOnE2"]], "mstring (built-in class)": [[99, "Mstring"]], "getthis() (mstring method)": [[99, "Mstring.getThis"]], "getvalue() (mstring method)": [[99, "Mstring.getValue"]], "setthis() (mstring method)": [[99, "Mstring.setThis"]], "setvalue() (mstring method)": [[99, "Mstring.setValue"]], "this (mstring attribute)": [[99, "Mstring.this"]], "value (mstring attribute)": [[99, "Mstring.value"]], "cmg (nmdachan attribute)": [[100, "NMDAChan.CMg"]], "ica (nmdachan attribute)": [[100, "NMDAChan.ICa"]], "icaout (nmdachan attribute)": [[100, "NMDAChan.ICaOut"]], "nmdachan (built-in class)": [[100, "NMDAChan"]], "assignintca() (nmdachan method)": [[100, "NMDAChan.assignIntCa"]], "condfraction (nmdachan attribute)": [[100, "NMDAChan.condFraction"]], "extca (nmdachan attribute)": [[100, "NMDAChan.extCa"]], "getcmg() (nmdachan method)": [[100, "NMDAChan.getCMg"]], "getcondfraction() (nmdachan method)": [[100, "NMDAChan.getCondFraction"]], "getextca() (nmdachan method)": [[100, "NMDAChan.getExtCa"]], "getica() (nmdachan method)": [[100, "NMDAChan.getICa"]], "getintca() (nmdachan method)": [[100, "NMDAChan.getIntCa"]], "getintcaoffset() (nmdachan method)": [[100, "NMDAChan.getIntCaOffset"]], "getintcascale() (nmdachan method)": [[100, "NMDAChan.getIntCaScale"]], "getpermeability() (nmdachan method)": [[100, "NMDAChan.getPermeability"]], "gettemperature() (nmdachan method)": [[100, "NMDAChan.getTemperature"]], "intca (nmdachan attribute)": [[100, "NMDAChan.intCa"]], "intcaoffset (nmdachan attribute)": [[100, "NMDAChan.intCaOffset"]], "intcascale (nmdachan attribute)": [[100, "NMDAChan.intCaScale"]], "permeability (nmdachan attribute)": [[100, "NMDAChan.permeability"]], "setcmg() (nmdachan method)": [[100, "NMDAChan.setCMg"]], "setcondfraction() (nmdachan method)": [[100, "NMDAChan.setCondFraction"]], "setextca() (nmdachan method)": [[100, "NMDAChan.setExtCa"]], "setintca() (nmdachan method)": [[100, "NMDAChan.setIntCa"]], "setintcaoffset() (nmdachan method)": [[100, "NMDAChan.setIntCaOffset"]], "setintcascale() (nmdachan method)": [[100, "NMDAChan.setIntCaScale"]], "setpermeability() (nmdachan method)": [[100, "NMDAChan.setPermeability"]], "settemperature() (nmdachan method)": [[100, "NMDAChan.setTemperature"]], "temperature (nmdachan attribute)": [[100, "NMDAChan.temperature"]], "nsdfwriter (built-in class)": [[101, "NSDFWriter"]], "getnumeventinput() (nsdfwriter method)": [[101, "NSDFWriter.getNumEventInput"]], "proc (nsdfwriter attribute)": [[101, "NSDFWriter.proc"]], "process() (nsdfwriter method)": [[101, "NSDFWriter.process"]], "reinit() (nsdfwriter method)": [[101, "NSDFWriter.reinit"]], "setnumeventinput() (nsdfwriter method)": [[101, "NSDFWriter.setNumEventInput"]], "cin (nernst attribute)": [[102, "Nernst.Cin"]], "cout (nernst attribute)": [[102, "Nernst.Cout"]], "e (nernst attribute)": [[102, "Nernst.E"]], "eout (nernst attribute)": [[102, "Nernst.Eout"]], "nernst (built-in class)": [[102, "Nernst"]], "temperature (nernst attribute)": [[102, "Nernst.Temperature"]], "ci() (nernst method)": [[102, "Nernst.ci"]], "co() (nernst method)": [[102, "Nernst.co"]], "getcin() (nernst method)": [[102, "Nernst.getCin"]], "getcout() (nernst method)": [[102, "Nernst.getCout"]], "gete() (nernst method)": [[102, "Nernst.getE"]], "getscale() (nernst method)": [[102, "Nernst.getScale"]], "gettemperature() (nernst method)": [[102, "Nernst.getTemperature"]], "getvalence() (nernst method)": [[102, "Nernst.getValence"]], "scale (nernst attribute)": [[102, "Nernst.scale"]], "setcin() (nernst method)": [[102, "Nernst.setCin"]], "setcout() (nernst method)": [[102, "Nernst.setCout"]], "setscale() (nernst method)": [[102, "Nernst.setScale"]], "settemperature() (nernst method)": [[102, "Nernst.setTemperature"]], "setvalence() (nernst method)": [[102, "Nernst.setValence"]], "valence (nernst attribute)": [[102, "Nernst.valence"]], "neuromesh (built-in class)": [[103, "NeuroMesh"]], "dendvoxelsoncompartment (neuromesh attribute)": [[103, "NeuroMesh.dendVoxelsOnCompartment"]], "difflength (neuromesh attribute)": [[103, "NeuroMesh.diffLength"]], "eleccomptlist (neuromesh attribute)": [[103, "NeuroMesh.elecComptList"]], "eleccomptmap (neuromesh attribute)": [[103, "NeuroMesh.elecComptMap"]], "endvoxelincompt (neuromesh attribute)": [[103, "NeuroMesh.endVoxelInCompt"]], "geometrypolicy (neuromesh attribute)": [[103, "NeuroMesh.geometryPolicy"]], "getdendvoxelsoncompartment() (neuromesh method)": [[103, "NeuroMesh.getDendVoxelsOnCompartment"]], "getdifflength() (neuromesh method)": [[103, "NeuroMesh.getDiffLength"]], "geteleccomptlist() (neuromesh method)": [[103, "NeuroMesh.getElecComptList"]], "geteleccomptmap() (neuromesh method)": [[103, "NeuroMesh.getElecComptMap"]], "getendvoxelincompt() (neuromesh method)": [[103, "NeuroMesh.getEndVoxelInCompt"]], "getgeometrypolicy() (neuromesh method)": [[103, "NeuroMesh.getGeometryPolicy"]], "getnumdiffcompts() (neuromesh method)": [[103, "NeuroMesh.getNumDiffCompts"]], "getnumsegments() (neuromesh method)": [[103, "NeuroMesh.getNumSegments"]], "getparentvoxel() (neuromesh method)": [[103, "NeuroMesh.getParentVoxel"]], "getseparatespines() (neuromesh method)": [[103, "NeuroMesh.getSeparateSpines"]], "getspinevoxelondendvoxel() (neuromesh method)": [[103, "NeuroMesh.getSpineVoxelOnDendVoxel"]], "getspinevoxelsoncompartment() (neuromesh method)": [[103, "NeuroMesh.getSpineVoxelsOnCompartment"]], "getstartvoxelincompt() (neuromesh method)": [[103, "NeuroMesh.getStartVoxelInCompt"]], "getsubtree() (neuromesh method)": [[103, "NeuroMesh.getSubTree"]], "getsubtreepath() (neuromesh method)": [[103, "NeuroMesh.getSubTreePath"]], "numdiffcompts (neuromesh attribute)": [[103, "NeuroMesh.numDiffCompts"]], "numsegments (neuromesh attribute)": [[103, "NeuroMesh.numSegments"]], "parentvoxel (neuromesh attribute)": [[103, "NeuroMesh.parentVoxel"]], "psdlistout (neuromesh attribute)": [[103, "NeuroMesh.psdListOut"]], "separatespines (neuromesh attribute)": [[103, "NeuroMesh.separateSpines"]], "setdifflength() (neuromesh method)": [[103, "NeuroMesh.setDiffLength"]], "setgeometrypolicy() (neuromesh method)": [[103, "NeuroMesh.setGeometryPolicy"]], "setseparatespines() (neuromesh method)": [[103, "NeuroMesh.setSeparateSpines"]], "setsubtree() (neuromesh method)": [[103, "NeuroMesh.setSubTree"]], "setsubtreepath() (neuromesh method)": [[103, "NeuroMesh.setSubTreePath"]], "spinelistout (neuromesh attribute)": [[103, "NeuroMesh.spineListOut"]], "spinevoxelondendvoxel (neuromesh attribute)": [[103, "NeuroMesh.spineVoxelOnDendVoxel"]], "spinevoxelsoncompartment (neuromesh attribute)": [[103, "NeuroMesh.spineVoxelsOnCompartment"]], "startvoxelincompt (neuromesh attribute)": [[103, "NeuroMesh.startVoxelInCompt"]], "subtree (neuromesh attribute)": [[103, "NeuroMesh.subTree"]], "subtreepath (neuromesh attribute)": [[103, "NeuroMesh.subTreePath"]], "cm (neuron attribute)": [[104, "Neuron.CM"]], "em (neuron attribute)": [[104, "Neuron.Em"]], "neuron (built-in class)": [[104, "Neuron"]], "ra (neuron attribute)": [[104, "Neuron.RA"]], "rm (neuron attribute)": [[104, "Neuron.RM"]], "buildsegmenttree() (neuron method)": [[104, "Neuron.buildSegmentTree"]], "channeldistribution (neuron attribute)": [[104, "Neuron.channelDistribution"]], "compartmentlengthinlambdas (neuron attribute)": [[104, "Neuron.compartmentLengthInLambdas"]], "compartments (neuron attribute)": [[104, "Neuron.compartments"]], "compartmentsfromexpression (neuron attribute)": [[104, "Neuron.compartmentsFromExpression"]], "electrotonicdistancefromsoma (neuron attribute)": [[104, "Neuron.electrotonicDistanceFromSoma"]], "geometricaldistancefromsoma (neuron attribute)": [[104, "Neuron.geometricalDistanceFromSoma"]], "getcm() (neuron method)": [[104, "Neuron.getCM"]], "getchanneldistribution() (neuron method)": [[104, "Neuron.getChannelDistribution"]], "getcompartmentlengthinlambdas() (neuron method)": [[104, "Neuron.getCompartmentLengthInLambdas"]], "getcompartments() (neuron method)": [[104, "Neuron.getCompartments"]], "getcompartmentsfromexpression() (neuron method)": [[104, "Neuron.getCompartmentsFromExpression"]], "getelectrotonicdistancefromsoma() (neuron method)": [[104, "Neuron.getElectrotonicDistanceFromSoma"]], "getem() (neuron method)": [[104, "Neuron.getEm"]], "getgeometricaldistancefromsoma() (neuron method)": [[104, "Neuron.getGeometricalDistanceFromSoma"]], "getnumbranches() (neuron method)": [[104, "Neuron.getNumBranches"]], "getnumcompartments() (neuron method)": [[104, "Neuron.getNumCompartments"]], "getnumspine() (neuron method)": [[104, "Neuron.getNumSpine"]], "getnumspines() (neuron method)": [[104, "Neuron.getNumSpines"]], "getparentcompartmentofspine() (neuron method)": [[104, "Neuron.getParentCompartmentOfSpine"]], "getpassivedistribution() (neuron method)": [[104, "Neuron.getPassiveDistribution"]], "getpathdistancefromsoma() (neuron method)": [[104, "Neuron.getPathDistanceFromSoma"]], "getphi() (neuron method)": [[104, "Neuron.getPhi"]], "getra() (neuron method)": [[104, "Neuron.getRA"]], "getrm() (neuron method)": [[104, "Neuron.getRM"]], "getsourcefile() (neuron method)": [[104, "Neuron.getSourceFile"]], "getspinedistribution() (neuron method)": [[104, "Neuron.getSpineDistribution"]], "getspinesfromexpression() (neuron method)": [[104, "Neuron.getSpinesFromExpression"]], "getspinesoncompartment() (neuron method)": [[104, "Neuron.getSpinesOnCompartment"]], "gettheta() (neuron method)": [[104, "Neuron.getTheta"]], "getvaluesfromexpression() (neuron method)": [[104, "Neuron.getValuesFromExpression"]], "numbranches (neuron attribute)": [[104, "Neuron.numBranches"]], "numcompartments (neuron attribute)": [[104, "Neuron.numCompartments"]], "numspines (neuron attribute)": [[104, "Neuron.numSpines"]], "parentcompartmentofspine (neuron attribute)": [[104, "Neuron.parentCompartmentOfSpine"]], "passivedistribution (neuron attribute)": [[104, "Neuron.passiveDistribution"]], "pathdistancefromsoma (neuron attribute)": [[104, "Neuron.pathDistanceFromSoma"]], "phi (neuron attribute)": [[104, "Neuron.phi"]], "setcm() (neuron method)": [[104, "Neuron.setCM"]], "setchanneldistribution() (neuron method)": [[104, "Neuron.setChannelDistribution"]], "setcompartmentlengthinlambdas() (neuron method)": [[104, "Neuron.setCompartmentLengthInLambdas"]], "setem() (neuron method)": [[104, "Neuron.setEm"]], "setnumspine() (neuron method)": [[104, "Neuron.setNumSpine"]], "setpassivedistribution() (neuron method)": [[104, "Neuron.setPassiveDistribution"]], "setphi() (neuron method)": [[104, "Neuron.setPhi"]], "setra() (neuron method)": [[104, "Neuron.setRA"]], "setrm() (neuron method)": [[104, "Neuron.setRM"]], "setsourcefile() (neuron method)": [[104, "Neuron.setSourceFile"]], "setspineandpsddsolve() (neuron method)": [[104, "Neuron.setSpineAndPsdDsolve"]], "setspineandpsdmesh() (neuron method)": [[104, "Neuron.setSpineAndPsdMesh"]], "setspinedistribution() (neuron method)": [[104, "Neuron.setSpineDistribution"]], "settheta() (neuron method)": [[104, "Neuron.setTheta"]], "sourcefile (neuron attribute)": [[104, "Neuron.sourceFile"]], "spinedistribution (neuron attribute)": [[104, "Neuron.spineDistribution"]], "spinesfromexpression (neuron attribute)": [[104, "Neuron.spinesFromExpression"]], "spinesoncompartment (neuron attribute)": [[104, "Neuron.spinesOnCompartment"]], "theta (neuron attribute)": [[104, "Neuron.theta"]], "valuesfromexpression (neuron attribute)": [[104, "Neuron.valuesFromExpression"]], "neutral (built-in class)": [[105, "Neutral"]], "childout (neutral attribute)": [[105, "Neutral.childOut"]], "children (neutral attribute)": [[105, "Neutral.children"]], "classname (neutral attribute)": [[105, "Neutral.className"]], "destfields (neutral attribute)": [[105, "Neutral.destFields"]], "dt (neutral attribute)": [[105, "Neutral.dt"]], "fieldindex (neutral attribute)": [[105, "Neutral.fieldIndex"]], "getchildren() (neutral method)": [[105, "Neutral.getChildren"]], "getclassname() (neutral method)": [[105, "Neutral.getClassName"]], "getdestfields() (neutral method)": [[105, "Neutral.getDestFields"]], "getdt() (neutral method)": [[105, "Neutral.getDt"]], "getfieldindex() (neutral method)": [[105, "Neutral.getFieldIndex"]], "getidvalue() (neutral method)": [[105, "Neutral.getIdValue"]], "getindex() (neutral method)": [[105, "Neutral.getIndex"]], "getisa() (neutral method)": [[105, "Neutral.getIsA"]], "getme() (neutral method)": [[105, "Neutral.getMe"]], "getmsgdestfunctions() (neutral method)": [[105, "Neutral.getMsgDestFunctions"]], "getmsgdests() (neutral method)": [[105, "Neutral.getMsgDests"]], "getmsgin() (neutral method)": [[105, "Neutral.getMsgIn"]], "getmsgout() (neutral method)": [[105, "Neutral.getMsgOut"]], "getname() (neutral method)": [[105, "Neutral.getName"]], "getneighbors() (neutral method)": [[105, "Neutral.getNeighbors"]], "getnumdata() (neutral method)": [[105, "Neutral.getNumData"]], "getnumfield() (neutral method)": [[105, "Neutral.getNumField"]], "getparent() (neutral method)": [[105, "Neutral.getParent"]], "getpath() (neutral method)": [[105, "Neutral.getPath"]], "getsourcefields() (neutral method)": [[105, "Neutral.getSourceFields"]], "getthis() (neutral method)": [[105, "Neutral.getThis"]], "gettick() (neutral method)": [[105, "Neutral.getTick"]], "getvaluefields() (neutral method)": [[105, "Neutral.getValueFields"]], "idvalue (neutral attribute)": [[105, "Neutral.idValue"]], "index (neutral attribute)": [[105, "Neutral.index"]], "isa (neutral attribute)": [[105, "Neutral.isA"]], "me (neutral attribute)": [[105, "Neutral.me"]], "msgdestfunctions (neutral attribute)": [[105, "Neutral.msgDestFunctions"]], "msgdests (neutral attribute)": [[105, "Neutral.msgDests"]], "msgin (neutral attribute)": [[105, "Neutral.msgIn"]], "msgout (neutral attribute)": [[105, "Neutral.msgOut"]], "name (neutral attribute)": [[105, "Neutral.name"]], "neighbors (neutral attribute)": [[105, "Neutral.neighbors"]], "numdata (neutral attribute)": [[105, "Neutral.numData"]], "numfield (neutral attribute)": [[105, "Neutral.numField"]], "parent (neutral attribute)": [[105, "Neutral.parent"]], "parentmsg() (neutral method)": [[105, "Neutral.parentMsg"]], "path (neutral attribute)": [[105, "Neutral.path"]], "setname() (neutral method)": [[105, "Neutral.setName"]], "setnumdata() (neutral method)": [[105, "Neutral.setNumData"]], "setnumfield() (neutral method)": [[105, "Neutral.setNumField"]], "setthis() (neutral method)": [[105, "Neutral.setThis"]], "settick() (neutral method)": [[105, "Neutral.setTick"]], "sourcefields (neutral attribute)": [[105, "Neutral.sourceFields"]], "this (neutral attribute)": [[105, "Neutral.this"]], "tick (neutral attribute)": [[105, "Neutral.tick"]], "valuefields (neutral attribute)": [[105, "Neutral.valueFields"]], "normalrng (built-in class)": [[106, "NormalRng"]], "getmean() (normalrng method)": [[106, "NormalRng.getMean"]], "getmethod() (normalrng method)": [[106, "NormalRng.getMethod"]], "getvariance() (normalrng method)": [[106, "NormalRng.getVariance"]], "mean (normalrng attribute)": [[106, "NormalRng.mean"]], "method (normalrng attribute)": [[106, "NormalRng.method"]], "setmean() (normalrng method)": [[106, "NormalRng.setMean"]], "setmethod() (normalrng method)": [[106, "NormalRng.setMethod"]], "setvariance() (normalrng method)": [[106, "NormalRng.setVariance"]], "variance (normalrng attribute)": [[106, "NormalRng.variance"]], "onetoallmsg (built-in class)": [[107, "OneToAllMsg"]], "geti1() (onetoallmsg method)": [[107, "OneToAllMsg.getI1"]], "i1 (onetoallmsg attribute)": [[107, "OneToAllMsg.i1"]], "seti1() (onetoallmsg method)": [[107, "OneToAllMsg.setI1"]], "pidcontroller (built-in class)": [[108, "PIDController"]], "command (pidcontroller attribute)": [[108, "PIDController.command"]], "commandin() (pidcontroller method)": [[108, "PIDController.commandIn"]], "derivative (pidcontroller attribute)": [[108, "PIDController.derivative"]], "error (pidcontroller attribute)": [[108, "PIDController.error"]], "gain (pidcontroller attribute)": [[108, "PIDController.gain"]], "gaindest() (pidcontroller method)": [[108, "PIDController.gainDest"]], "getcommand() (pidcontroller method)": [[108, "PIDController.getCommand"]], "getderivative() (pidcontroller method)": [[108, "PIDController.getDerivative"]], "geterror() (pidcontroller method)": [[108, "PIDController.getError"]], "getgain() (pidcontroller method)": [[108, "PIDController.getGain"]], "getintegral() (pidcontroller method)": [[108, "PIDController.getIntegral"]], "getoutputvalue() (pidcontroller method)": [[108, "PIDController.getOutputValue"]], "getsaturation() (pidcontroller method)": [[108, "PIDController.getSaturation"]], "getsensed() (pidcontroller method)": [[108, "PIDController.getSensed"]], "gettaud() (pidcontroller method)": [[108, "PIDController.getTauD"]], "gettaui() (pidcontroller method)": [[108, "PIDController.getTauI"]], "integral (pidcontroller attribute)": [[108, "PIDController.integral"]], "output (pidcontroller attribute)": [[108, "PIDController.output"]], "outputvalue (pidcontroller attribute)": [[108, "PIDController.outputValue"]], "proc (pidcontroller attribute)": [[108, "PIDController.proc"]], "process() (pidcontroller method)": [[108, "PIDController.process"]], "reinit() (pidcontroller method)": [[108, "PIDController.reinit"]], "saturation (pidcontroller attribute)": [[108, "PIDController.saturation"]], "sensed (pidcontroller attribute)": [[108, "PIDController.sensed"]], "sensedin() (pidcontroller method)": [[108, "PIDController.sensedIn"]], "setcommand() (pidcontroller method)": [[108, "PIDController.setCommand"]], "setgain() (pidcontroller method)": [[108, "PIDController.setGain"]], "setsaturation() (pidcontroller method)": [[108, "PIDController.setSaturation"]], "settaud() (pidcontroller method)": [[108, "PIDController.setTauD"]], "settaui() (pidcontroller method)": [[108, "PIDController.setTauI"]], "taud (pidcontroller attribute)": [[108, "PIDController.tauD"]], "taui (pidcontroller attribute)": [[108, "PIDController.tauI"]], "poissonrng (built-in class)": [[109, "PoissonRng"]], "getmean() (poissonrng method)": [[109, "PoissonRng.getMean"]], "mean (poissonrng attribute)": [[109, "PoissonRng.mean"]], "setmean() (poissonrng method)": [[109, "PoissonRng.setMean"]], "pool (built-in class)": [[110, "Pool"]], "decrement() (pool method)": [[110, "Pool.decrement"]], "increment() (pool method)": [[110, "Pool.increment"]], "nin() (pool method)": [[110, "Pool.nIn"]], "poolbase (built-in class)": [[111, "PoolBase"]], "conc (poolbase attribute)": [[111, "PoolBase.conc"]], "concinit (poolbase attribute)": [[111, "PoolBase.concInit"]], "diffconst (poolbase attribute)": [[111, "PoolBase.diffConst"]], "getconc() (poolbase method)": [[111, "PoolBase.getConc"]], "getconcinit() (poolbase method)": [[111, "PoolBase.getConcInit"]], "getdiffconst() (poolbase method)": [[111, "PoolBase.getDiffConst"]], "getmotorconst() (poolbase method)": [[111, "PoolBase.getMotorConst"]], "getn() (poolbase method)": [[111, "PoolBase.getN"]], "getninit() (poolbase method)": [[111, "PoolBase.getNInit"]], "getspeciesid() (poolbase method)": [[111, "PoolBase.getSpeciesId"]], "getvolume() (poolbase method)": [[111, "PoolBase.getVolume"]], "handlemolwt() (poolbase method)": [[111, "PoolBase.handleMolWt"]], "motorconst (poolbase attribute)": [[111, "PoolBase.motorConst"]], "n (poolbase attribute)": [[111, "PoolBase.n"]], "ninit (poolbase attribute)": [[111, "PoolBase.nInit"]], "nout (poolbase attribute)": [[111, "PoolBase.nOut"]], "proc (poolbase attribute)": [[111, "PoolBase.proc"]], "process() (poolbase method)": [[111, "PoolBase.process"]], "reac (poolbase attribute)": [[111, "PoolBase.reac"]], "reacdest() (poolbase method)": [[111, "PoolBase.reacDest"]], "reinit() (poolbase method)": [[111, "PoolBase.reinit"]], "requestmolwt (poolbase attribute)": [[111, "PoolBase.requestMolWt"]], "setconc() (poolbase method)": [[111, "PoolBase.setConc"]], "setconcinit() (poolbase method)": [[111, "PoolBase.setConcInit"]], "setdiffconst() (poolbase method)": [[111, "PoolBase.setDiffConst"]], "setmotorconst() (poolbase method)": [[111, "PoolBase.setMotorConst"]], "setn() (poolbase method)": [[111, "PoolBase.setN"]], "setninit() (poolbase method)": [[111, "PoolBase.setNInit"]], "setspeciesid() (poolbase method)": [[111, "PoolBase.setSpeciesId"]], "setvolume() (poolbase method)": [[111, "PoolBase.setVolume"]], "species (poolbase attribute)": [[111, "PoolBase.species"]], "speciesid (poolbase attribute)": [[111, "PoolBase.speciesId"]], "volume (poolbase attribute)": [[111, "PoolBase.volume"]], "postmaster (built-in class)": [[112, "PostMaster"]], "buffersize (postmaster attribute)": [[112, "PostMaster.bufferSize"]], "getbuffersize() (postmaster method)": [[112, "PostMaster.getBufferSize"]], "getmynode() (postmaster method)": [[112, "PostMaster.getMyNode"]], "getnumnodes() (postmaster method)": [[112, "PostMaster.getNumNodes"]], "mynode (postmaster attribute)": [[112, "PostMaster.myNode"]], "numnodes (postmaster attribute)": [[112, "PostMaster.numNodes"]], "proc (postmaster attribute)": [[112, "PostMaster.proc"]], "process() (postmaster method)": [[112, "PostMaster.process"]], "reinit() (postmaster method)": [[112, "PostMaster.reinit"]], "setbuffersize() (postmaster method)": [[112, "PostMaster.setBufferSize"]], "psdmesh (built-in class)": [[113, "PsdMesh"]], "pulsegen (built-in class)": [[113, "PulseGen"], [114, "PulseGen"]], "baselevel (pulsegen attribute)": [[113, "PulseGen.baseLevel"], [114, "PulseGen.baseLevel"]], "count (pulsegen attribute)": [[113, "PulseGen.count"], [114, "PulseGen.count"]], "delay (pulsegen attribute)": [[113, "PulseGen.delay"], [114, "PulseGen.delay"]], "delayin() (pulsegen method)": [[113, "PulseGen.delayIn"], [114, "PulseGen.delayIn"]], "eleccomptlist (psdmesh attribute)": [[113, "PsdMesh.elecComptList"]], "eleccomptmap (psdmesh attribute)": [[113, "PsdMesh.elecComptMap"]], "endvoxelincompt (psdmesh attribute)": [[113, "PsdMesh.endVoxelInCompt"]], "firstdelay (pulsegen attribute)": [[113, "PulseGen.firstDelay"], [114, "PulseGen.firstDelay"]], "firstlevel (pulsegen attribute)": [[113, "PulseGen.firstLevel"], [114, "PulseGen.firstLevel"]], "firstwidth (pulsegen attribute)": [[113, "PulseGen.firstWidth"], [114, "PulseGen.firstWidth"]], "getbaselevel() (pulsegen method)": [[113, "PulseGen.getBaseLevel"], [114, "PulseGen.getBaseLevel"]], "getcount() (pulsegen method)": [[113, "PulseGen.getCount"], [114, "PulseGen.getCount"]], "getdelay() (pulsegen method)": [[113, "PulseGen.getDelay"], [114, "PulseGen.getDelay"]], "geteleccomptlist() (psdmesh method)": [[113, "PsdMesh.getElecComptList"]], "geteleccomptmap() (psdmesh method)": [[113, "PsdMesh.getElecComptMap"]], "getendvoxelincompt() (psdmesh method)": [[113, "PsdMesh.getEndVoxelInCompt"]], "getfirstdelay() (pulsegen method)": [[113, "PulseGen.getFirstDelay"], [114, "PulseGen.getFirstDelay"]], "getfirstlevel() (pulsegen method)": [[113, "PulseGen.getFirstLevel"], [114, "PulseGen.getFirstLevel"]], "getfirstwidth() (pulsegen method)": [[113, "PulseGen.getFirstWidth"], [114, "PulseGen.getFirstWidth"]], "getlevel() (pulsegen method)": [[113, "PulseGen.getLevel"], [114, "PulseGen.getLevel"]], "getneuronvoxel() (psdmesh method)": [[113, "PsdMesh.getNeuronVoxel"]], "getoutputvalue() (pulsegen method)": [[113, "PulseGen.getOutputValue"], [114, "PulseGen.getOutputValue"]], "getseconddelay() (pulsegen method)": [[113, "PulseGen.getSecondDelay"], [114, "PulseGen.getSecondDelay"]], "getsecondlevel() (pulsegen method)": [[113, "PulseGen.getSecondLevel"], [114, "PulseGen.getSecondLevel"]], "getsecondwidth() (pulsegen method)": [[113, "PulseGen.getSecondWidth"], [114, "PulseGen.getSecondWidth"]], "getstartvoxelincompt() (psdmesh method)": [[113, "PsdMesh.getStartVoxelInCompt"]], "getthickness() (psdmesh method)": [[113, "PsdMesh.getThickness"]], "gettrigmode() (pulsegen method)": [[113, "PulseGen.getTrigMode"], [114, "PulseGen.getTrigMode"]], "getwidth() (pulsegen method)": [[113, "PulseGen.getWidth"], [114, "PulseGen.getWidth"]], "input() (pulsegen method)": [[113, "PulseGen.input"], [114, "PulseGen.input"]], "level (pulsegen attribute)": [[113, "PulseGen.level"], [114, "PulseGen.level"]], "levelin() (pulsegen method)": [[113, "PulseGen.levelIn"], [114, "PulseGen.levelIn"]], "neuronvoxel (psdmesh attribute)": [[113, "PsdMesh.neuronVoxel"]], "output (pulsegen attribute)": [[113, "PulseGen.output"], [114, "PulseGen.output"]], "outputvalue (pulsegen attribute)": [[113, "PulseGen.outputValue"], [114, "PulseGen.outputValue"]], "proc (pulsegen attribute)": [[113, "PulseGen.proc"], [114, "PulseGen.proc"]], "process() (pulsegen method)": [[113, "PulseGen.process"], [114, "PulseGen.process"]], "psdlist() (psdmesh method)": [[113, "PsdMesh.psdList"]], "reinit() (pulsegen method)": [[113, "PulseGen.reinit"], [114, "PulseGen.reinit"]], "seconddelay (pulsegen attribute)": [[113, "PulseGen.secondDelay"], [114, "PulseGen.secondDelay"]], "secondlevel (pulsegen attribute)": [[113, "PulseGen.secondLevel"], [114, "PulseGen.secondLevel"]], "secondwidth (pulsegen attribute)": [[113, "PulseGen.secondWidth"], [114, "PulseGen.secondWidth"]], "setbaselevel() (pulsegen method)": [[113, "PulseGen.setBaseLevel"], [114, "PulseGen.setBaseLevel"]], "setcount() (pulsegen method)": [[113, "PulseGen.setCount"], [114, "PulseGen.setCount"]], "setdelay() (pulsegen method)": [[113, "PulseGen.setDelay"], [114, "PulseGen.setDelay"]], "setfirstdelay() (pulsegen method)": [[113, "PulseGen.setFirstDelay"], [114, "PulseGen.setFirstDelay"]], "setfirstlevel() (pulsegen method)": [[113, "PulseGen.setFirstLevel"], [114, "PulseGen.setFirstLevel"]], "setfirstwidth() (pulsegen method)": [[113, "PulseGen.setFirstWidth"], [114, "PulseGen.setFirstWidth"]], "setlevel() (pulsegen method)": [[113, "PulseGen.setLevel"], [114, "PulseGen.setLevel"]], "setseconddelay() (pulsegen method)": [[113, "PulseGen.setSecondDelay"], [114, "PulseGen.setSecondDelay"]], "setsecondlevel() (pulsegen method)": [[113, "PulseGen.setSecondLevel"], [114, "PulseGen.setSecondLevel"]], "setsecondwidth() (pulsegen method)": [[113, "PulseGen.setSecondWidth"], [114, "PulseGen.setSecondWidth"]], "setthickness() (psdmesh method)": [[113, "PsdMesh.setThickness"]], "settrigmode() (pulsegen method)": [[113, "PulseGen.setTrigMode"], [114, "PulseGen.setTrigMode"]], "setwidth() (pulsegen method)": [[113, "PulseGen.setWidth"], [114, "PulseGen.setWidth"]], "startvoxelincompt (psdmesh attribute)": [[113, "PsdMesh.startVoxelInCompt"]], "thickness (psdmesh attribute)": [[113, "PsdMesh.thickness"]], "trigmode (pulsegen attribute)": [[113, "PulseGen.trigMode"], [114, "PulseGen.trigMode"]], "width (pulsegen attribute)": [[113, "PulseGen.width"], [114, "PulseGen.width"]], "widthin() (pulsegen method)": [[113, "PulseGen.widthIn"], [114, "PulseGen.widthIn"]], "pyrun (built-in class)": [[115, "PyRun"]], "getinitstring() (pyrun method)": [[115, "PyRun.getInitString"]], "getinputvar() (pyrun method)": [[115, "PyRun.getInputVar"]], "getmode() (pyrun method)": [[115, "PyRun.getMode"]], "getoutputvar() (pyrun method)": [[115, "PyRun.getOutputVar"]], "getrunstring() (pyrun method)": [[115, "PyRun.getRunString"]], "initstring (pyrun attribute)": [[115, "PyRun.initString"]], "inputvar (pyrun attribute)": [[115, "PyRun.inputVar"]], "mode (pyrun attribute)": [[115, "PyRun.mode"]], "output (pyrun attribute)": [[115, "PyRun.output"]], "outputvar (pyrun attribute)": [[115, "PyRun.outputVar"]], "proc (pyrun attribute)": [[115, "PyRun.proc"]], "process() (pyrun method)": [[115, "PyRun.process"]], "reinit() (pyrun method)": [[115, "PyRun.reinit"]], "run() (pyrun method)": [[115, "PyRun.run"]], "runstring (pyrun attribute)": [[115, "PyRun.runString"]], "setinitstring() (pyrun method)": [[115, "PyRun.setInitString"]], "setinputvar() (pyrun method)": [[115, "PyRun.setInputVar"]], "setmode() (pyrun method)": [[115, "PyRun.setMode"]], "setoutputvar() (pyrun method)": [[115, "PyRun.setOutputVar"]], "setrunstring() (pyrun method)": [[115, "PyRun.setRunString"]], "trigger() (pyrun method)": [[115, "PyRun.trigger"]], "qif (built-in class)": [[116, "QIF"]], "a0 (qif attribute)": [[116, "QIF.a0"]], "geta0() (qif method)": [[116, "QIF.getA0"]], "getvcritical() (qif method)": [[116, "QIF.getVCritical"]], "seta0() (qif method)": [[116, "QIF.setA0"]], "setvcritical() (qif method)": [[116, "QIF.setVCritical"]], "vcritical (qif attribute)": [[116, "QIF.vCritical"]], "randgenerator (built-in class)": [[117, "RandGenerator"]], "getmean() (randgenerator method)": [[117, "RandGenerator.getMean"]], "getsample() (randgenerator method)": [[117, "RandGenerator.getSample"]], "getvariance() (randgenerator method)": [[117, "RandGenerator.getVariance"]], "mean (randgenerator attribute)": [[117, "RandGenerator.mean"]], "output (randgenerator attribute)": [[117, "RandGenerator.output"]], "proc (randgenerator attribute)": [[117, "RandGenerator.proc"]], "process() (randgenerator method)": [[117, "RandGenerator.process"]], "reinit() (randgenerator method)": [[117, "RandGenerator.reinit"]], "sample (randgenerator attribute)": [[117, "RandGenerator.sample"]], "variance (randgenerator attribute)": [[117, "RandGenerator.variance"]], "randspike (built-in class)": [[118, "RandSpike"]], "gethasfired() (randspike method)": [[118, "RandSpike.getHasFired"]], "getrate() (randspike method)": [[118, "RandSpike.getRate"]], "getrefractt() (randspike method)": [[118, "RandSpike.getRefractT"]], "hasfired (randspike attribute)": [[118, "RandSpike.hasFired"]], "proc (randspike attribute)": [[118, "RandSpike.proc"]], "process() (randspike method)": [[118, "RandSpike.process"]], "rate (randspike attribute)": [[118, "RandSpike.rate"]], "refractt (randspike attribute)": [[118, "RandSpike.refractT"]], "reinit() (randspike method)": [[118, "RandSpike.reinit"]], "setrate() (randspike method)": [[118, "RandSpike.setRate"]], "setrefractt() (randspike method)": [[118, "RandSpike.setRefractT"]], "spikeout (randspike attribute)": [[118, "RandSpike.spikeOut"]], "kb (reacbase attribute)": [[119, "ReacBase.Kb"]], "kf (reacbase attribute)": [[119, "ReacBase.Kf"]], "reacbase (built-in class)": [[119, "ReacBase"]], "getkb() (reacbase method)": [[119, "ReacBase.getKb"]], "getkf() (reacbase method)": [[119, "ReacBase.getKf"]], "getnumkb() (reacbase method)": [[119, "ReacBase.getNumKb"]], "getnumkf() (reacbase method)": [[119, "ReacBase.getNumKf"]], "getnumproducts() (reacbase method)": [[119, "ReacBase.getNumProducts"]], "getnumsubstrates() (reacbase method)": [[119, "ReacBase.getNumSubstrates"]], "numkb (reacbase attribute)": [[119, "ReacBase.numKb"]], "numkf (reacbase attribute)": [[119, "ReacBase.numKf"]], "numproducts (reacbase attribute)": [[119, "ReacBase.numProducts"]], "numsubstrates (reacbase attribute)": [[119, "ReacBase.numSubstrates"]], "prd (reacbase attribute)": [[119, "ReacBase.prd"]], "prddest() (reacbase method)": [[119, "ReacBase.prdDest"]], "prdout (reacbase attribute)": [[119, "ReacBase.prdOut"]], "proc (reacbase attribute)": [[119, "ReacBase.proc"]], "process() (reacbase method)": [[119, "ReacBase.process"]], "reinit() (reacbase method)": [[119, "ReacBase.reinit"]], "setkb() (reacbase method)": [[119, "ReacBase.setKb"]], "setkf() (reacbase method)": [[119, "ReacBase.setKf"]], "setnumkb() (reacbase method)": [[119, "ReacBase.setNumKb"]], "setnumkf() (reacbase method)": [[119, "ReacBase.setNumKf"]], "sub (reacbase attribute)": [[119, "ReacBase.sub"]], "subdest() (reacbase method)": [[119, "ReacBase.subDest"]], "subout (reacbase attribute)": [[119, "ReacBase.subOut"]], "stdpsynhandler (built-in class)": [[120, "STDPSynHandler"]], "aminus (stdpsynhandler attribute)": [[120, "STDPSynHandler.aMinus"]], "aminus0 (stdpsynhandler attribute)": [[120, "STDPSynHandler.aMinus0"]], "aplus0 (stdpsynhandler attribute)": [[120, "STDPSynHandler.aPlus0"]], "addpostspike() (stdpsynhandler method)": [[120, "STDPSynHandler.addPostSpike"]], "getaminus() (stdpsynhandler method)": [[120, "STDPSynHandler.getAMinus"]], "getaminus0() (stdpsynhandler method)": [[120, "STDPSynHandler.getAMinus0"]], "getaplus0() (stdpsynhandler method)": [[120, "STDPSynHandler.getAPlus0"]], "getnumsynapse() (stdpsynhandler method)": [[120, "STDPSynHandler.getNumSynapse"]], "gettauminus() (stdpsynhandler method)": [[120, "STDPSynHandler.getTauMinus"]], "gettauplus() (stdpsynhandler method)": [[120, "STDPSynHandler.getTauPlus"]], "getweightmax() (stdpsynhandler method)": [[120, "STDPSynHandler.getWeightMax"]], "getweightmin() (stdpsynhandler method)": [[120, "STDPSynHandler.getWeightMin"]], "setaminus() (stdpsynhandler method)": [[120, "STDPSynHandler.setAMinus"]], "setaminus0() (stdpsynhandler method)": [[120, "STDPSynHandler.setAMinus0"]], "setaplus0() (stdpsynhandler method)": [[120, "STDPSynHandler.setAPlus0"]], "setnumsynapse() (stdpsynhandler method)": [[120, "STDPSynHandler.setNumSynapse"]], "settauminus() (stdpsynhandler method)": [[120, "STDPSynHandler.setTauMinus"]], "settauplus() (stdpsynhandler method)": [[120, "STDPSynHandler.setTauPlus"]], "setweightmax() (stdpsynhandler method)": [[120, "STDPSynHandler.setWeightMax"]], "setweightmin() (stdpsynhandler method)": [[120, "STDPSynHandler.setWeightMin"]], "tauminus (stdpsynhandler attribute)": [[120, "STDPSynHandler.tauMinus"]], "tauplus (stdpsynhandler attribute)": [[120, "STDPSynHandler.tauPlus"]], "weightmax (stdpsynhandler attribute)": [[120, "STDPSynHandler.weightMax"]], "weightmin (stdpsynhandler attribute)": [[120, "STDPSynHandler.weightMin"]], "stdpsynapse (built-in class)": [[121, "STDPSynapse"]], "aplus (stdpsynapse attribute)": [[121, "STDPSynapse.aPlus"]], "getaplus() (stdpsynapse method)": [[121, "STDPSynapse.getAPlus"]], "setaplus() (stdpsynapse method)": [[121, "STDPSynapse.setAPlus"]], "seqsynhandler (built-in class)": [[122, "SeqSynHandler"]], "gethistory() (seqsynhandler method)": [[122, "SeqSynHandler.getHistory"]], "gethistorytime() (seqsynhandler method)": [[122, "SeqSynHandler.getHistoryTime"]], "getkernel() (seqsynhandler method)": [[122, "SeqSynHandler.getKernel"]], "getkernelequation() (seqsynhandler method)": [[122, "SeqSynHandler.getKernelEquation"]], "getkernelwidth() (seqsynhandler method)": [[122, "SeqSynHandler.getKernelWidth"]], "getnumsynapse() (seqsynhandler method)": [[122, "SeqSynHandler.getNumSynapse"]], "getresponsescale() (seqsynhandler method)": [[122, "SeqSynHandler.getResponseScale"]], "getseqactivation() (seqsynhandler method)": [[122, "SeqSynHandler.getSeqActivation"]], "getseqdt() (seqsynhandler method)": [[122, "SeqSynHandler.getSeqDt"]], "getweightscale() (seqsynhandler method)": [[122, "SeqSynHandler.getWeightScale"]], "getweightscalevec() (seqsynhandler method)": [[122, "SeqSynHandler.getWeightScaleVec"]], "history (seqsynhandler attribute)": [[122, "SeqSynHandler.history"]], "historytime (seqsynhandler attribute)": [[122, "SeqSynHandler.historyTime"]], "kernel (seqsynhandler attribute)": [[122, "SeqSynHandler.kernel"]], "kernelequation (seqsynhandler attribute)": [[122, "SeqSynHandler.kernelEquation"]], "kernelwidth (seqsynhandler attribute)": [[122, "SeqSynHandler.kernelWidth"]], "responsescale (seqsynhandler attribute)": [[122, "SeqSynHandler.responseScale"]], "seqactivation (seqsynhandler attribute)": [[122, "SeqSynHandler.seqActivation"]], "seqdt (seqsynhandler attribute)": [[122, "SeqSynHandler.seqDt"]], "sethistorytime() (seqsynhandler method)": [[122, "SeqSynHandler.setHistoryTime"]], "setkernelequation() (seqsynhandler method)": [[122, "SeqSynHandler.setKernelEquation"]], "setkernelwidth() (seqsynhandler method)": [[122, "SeqSynHandler.setKernelWidth"]], "setnumsynapse() (seqsynhandler method)": [[122, "SeqSynHandler.setNumSynapse"]], "setresponsescale() (seqsynhandler method)": [[122, "SeqSynHandler.setResponseScale"]], "setseqdt() (seqsynhandler method)": [[122, "SeqSynHandler.setSeqDt"]], "setweightscale() (seqsynhandler method)": [[122, "SeqSynHandler.setWeightScale"]], "weightscale (seqsynhandler attribute)": [[122, "SeqSynHandler.weightScale"]], "weightscalevec (seqsynhandler attribute)": [[122, "SeqSynHandler.weightScaleVec"]], "shell (built-in class)": [[123, "Shell"]], "simplesynhandler (built-in class)": [[123, "SimpleSynHandler"], [124, "SimpleSynHandler"]], "addmsg() (shell method)": [[123, "Shell.addMsg"]], "copy() (shell method)": [[123, "Shell.copy"]], "create() (shell method)": [[123, "Shell.create"]], "delete() (shell method)": [[123, "Shell.delete"]], "getnumsynapse() (simplesynhandler method)": [[123, "SimpleSynHandler.getNumSynapse"], [124, "SimpleSynHandler.getNumSynapse"]], "move() (shell method)": [[123, "Shell.move"]], "quit() (shell method)": [[123, "Shell.quit"]], "setnumsynapse() (simplesynhandler method)": [[123, "SimpleSynHandler.setNumSynapse"], [124, "SimpleSynHandler.setNumSynapse"]], "setclock() (shell method)": [[123, "Shell.setclock"]], "useclock() (shell method)": [[123, "Shell.useClock"]], "singlemsg (built-in class)": [[125, "SingleMsg"]], "geti1() (singlemsg method)": [[125, "SingleMsg.getI1"]], "geti2() (singlemsg method)": [[125, "SingleMsg.getI2"]], "i1 (singlemsg attribute)": [[125, "SingleMsg.i1"]], "i2 (singlemsg attribute)": [[125, "SingleMsg.i2"]], "seti1() (singlemsg method)": [[125, "SingleMsg.setI1"]], "seti2() (singlemsg method)": [[125, "SingleMsg.setI2"]], "sparsemsg (built-in class)": [[126, "SparseMsg"]], "clear() (sparsemsg method)": [[126, "SparseMsg.clear"]], "getnumcolumns() (sparsemsg method)": [[126, "SparseMsg.getNumColumns"]], "getnumentries() (sparsemsg method)": [[126, "SparseMsg.getNumEntries"]], "getnumrows() (sparsemsg method)": [[126, "SparseMsg.getNumRows"]], "getprobability() (sparsemsg method)": [[126, "SparseMsg.getProbability"]], "getseed() (sparsemsg method)": [[126, "SparseMsg.getSeed"]], "numcolumns (sparsemsg attribute)": [[126, "SparseMsg.numColumns"]], "numentries (sparsemsg attribute)": [[126, "SparseMsg.numEntries"]], "numrows (sparsemsg attribute)": [[126, "SparseMsg.numRows"]], "pairfill() (sparsemsg method)": [[126, "SparseMsg.pairFill"]], "probability (sparsemsg attribute)": [[126, "SparseMsg.probability"]], "seed (sparsemsg attribute)": [[126, "SparseMsg.seed"]], "setentry() (sparsemsg method)": [[126, "SparseMsg.setEntry"]], "setprobability() (sparsemsg method)": [[126, "SparseMsg.setProbability"]], "setrandomconnectivity() (sparsemsg method)": [[126, "SparseMsg.setRandomConnectivity"]], "setseed() (sparsemsg method)": [[126, "SparseMsg.setSeed"]], "transpose() (sparsemsg method)": [[126, "SparseMsg.transpose"]], "tripletfill() (sparsemsg method)": [[126, "SparseMsg.tripletFill"]], "unsetentry() (sparsemsg method)": [[126, "SparseMsg.unsetEntry"]], "species (built-in class)": [[127, "Species"]], "getmolwt() (species method)": [[127, "Species.getMolWt"]], "handlemolwtrequest() (species method)": [[127, "Species.handleMolWtRequest"]], "molwt (species attribute)": [[127, "Species.molWt"]], "molwtout (species attribute)": [[127, "Species.molWtOut"]], "pool (species attribute)": [[127, "Species.pool"]], "setmolwt() (species method)": [[127, "Species.setMolWt"]], "spikegen (built-in class)": [[128, "SpikeGen"]], "spikestats (built-in class)": [[128, "SpikeStats"], [129, "SpikeStats"]], "vm() (spikegen method)": [[128, "SpikeGen.Vm"]], "vm() (spikestats method)": [[128, "SpikeStats.Vm"], [129, "SpikeStats.Vm"]], "addspike() (spikestats method)": [[128, "SpikeStats.addSpike"], [129, "SpikeStats.addSpike"]], "edgetriggered (spikegen attribute)": [[128, "SpikeGen.edgeTriggered"]], "getedgetriggered() (spikegen method)": [[128, "SpikeGen.getEdgeTriggered"]], "gethasfired() (spikegen method)": [[128, "SpikeGen.getHasFired"]], "getrefractt() (spikegen method)": [[128, "SpikeGen.getRefractT"]], "getthreshold() (spikegen method)": [[128, "SpikeGen.getThreshold"]], "getthreshold() (spikestats method)": [[128, "SpikeStats.getThreshold"], [129, "SpikeStats.getThreshold"]], "hasfired (spikegen attribute)": [[128, "SpikeGen.hasFired"]], "proc (spikegen attribute)": [[128, "SpikeGen.proc"]], "process() (spikegen method)": [[128, "SpikeGen.process"]], "refractt (spikegen attribute)": [[128, "SpikeGen.refractT"]], "reinit() (spikegen method)": [[128, "SpikeGen.reinit"]], "setedgetriggered() (spikegen method)": [[128, "SpikeGen.setEdgeTriggered"]], "setrefractt() (spikegen method)": [[128, "SpikeGen.setRefractT"]], "setthreshold() (spikegen method)": [[128, "SpikeGen.setThreshold"]], "setthreshold() (spikestats method)": [[128, "SpikeStats.setThreshold"], [129, "SpikeStats.setThreshold"]], "spikeout (spikegen attribute)": [[128, "SpikeGen.spikeOut"]], "threshold (spikegen attribute)": [[128, "SpikeGen.threshold"]], "threshold (spikestats attribute)": [[128, "SpikeStats.threshold"], [129, "SpikeStats.threshold"]], "spine (built-in class)": [[130, "Spine"]], "getheaddiameter() (spine method)": [[130, "Spine.getHeadDiameter"]], "getheadlength() (spine method)": [[130, "Spine.getHeadLength"]], "getheadvolume() (spine method)": [[130, "Spine.getHeadVolume"]], "getpsdarea() (spine method)": [[130, "Spine.getPsdArea"]], "getshaftdiameter() (spine method)": [[130, "Spine.getShaftDiameter"]], "getshaftlength() (spine method)": [[130, "Spine.getShaftLength"]], "gettotallength() (spine method)": [[130, "Spine.getTotalLength"]], "headdiameter (spine attribute)": [[130, "Spine.headDiameter"]], "headlength (spine attribute)": [[130, "Spine.headLength"]], "headvolume (spine attribute)": [[130, "Spine.headVolume"]], "psdarea (spine attribute)": [[130, "Spine.psdArea"]], "setheaddiameter() (spine method)": [[130, "Spine.setHeadDiameter"]], "setheadlength() (spine method)": [[130, "Spine.setHeadLength"]], "setheadvolume() (spine method)": [[130, "Spine.setHeadVolume"]], "setpsdarea() (spine method)": [[130, "Spine.setPsdArea"]], "setshaftdiameter() (spine method)": [[130, "Spine.setShaftDiameter"]], "setshaftlength() (spine method)": [[130, "Spine.setShaftLength"]], "settotallength() (spine method)": [[130, "Spine.setTotalLength"]], "shaftdiameter (spine attribute)": [[130, "Spine.shaftDiameter"]], "shaftlength (spine attribute)": [[130, "Spine.shaftLength"]], "totallength (spine attribute)": [[130, "Spine.totalLength"]], "spinemesh (built-in class)": [[131, "SpineMesh"]], "eleccomptlist (spinemesh attribute)": [[131, "SpineMesh.elecComptList"]], "eleccomptmap (spinemesh attribute)": [[131, "SpineMesh.elecComptMap"]], "endvoxelincompt (spinemesh attribute)": [[131, "SpineMesh.endVoxelInCompt"]], "geteleccomptlist() (spinemesh method)": [[131, "SpineMesh.getElecComptList"]], "geteleccomptmap() (spinemesh method)": [[131, "SpineMesh.getElecComptMap"]], "getendvoxelincompt() (spinemesh method)": [[131, "SpineMesh.getEndVoxelInCompt"]], "getneuronvoxel() (spinemesh method)": [[131, "SpineMesh.getNeuronVoxel"]], "getparentvoxel() (spinemesh method)": [[131, "SpineMesh.getParentVoxel"]], "getstartvoxelincompt() (spinemesh method)": [[131, "SpineMesh.getStartVoxelInCompt"]], "neuronvoxel (spinemesh attribute)": [[131, "SpineMesh.neuronVoxel"]], "parentvoxel (spinemesh attribute)": [[131, "SpineMesh.parentVoxel"]], "spinelist() (spinemesh method)": [[131, "SpineMesh.spineList"]], "startvoxelincompt (spinemesh attribute)": [[131, "SpineMesh.startVoxelInCompt"]], "stats (built-in class)": [[132, "Stats"]], "getmean() (stats method)": [[132, "Stats.getMean"]], "getnum() (stats method)": [[132, "Stats.getNum"]], "getsdev() (stats method)": [[132, "Stats.getSdev"]], "getsum() (stats method)": [[132, "Stats.getSum"]], "getwindowlength() (stats method)": [[132, "Stats.getWindowLength"]], "getwmean() (stats method)": [[132, "Stats.getWmean"]], "getwnum() (stats method)": [[132, "Stats.getWnum"]], "getwsdev() (stats method)": [[132, "Stats.getWsdev"]], "getwsum() (stats method)": [[132, "Stats.getWsum"]], "input() (stats method)": [[132, "Stats.input"]], "mean (stats attribute)": [[132, "Stats.mean"]], "num (stats attribute)": [[132, "Stats.num"]], "proc (stats attribute)": [[132, "Stats.proc"]], "process() (stats method)": [[132, "Stats.process"]], "reinit() (stats method)": [[132, "Stats.reinit"]], "requestout (stats attribute)": [[132, "Stats.requestOut"]], "sdev (stats attribute)": [[132, "Stats.sdev"]], "setwindowlength() (stats method)": [[132, "Stats.setWindowLength"]], "sum (stats attribute)": [[132, "Stats.sum"]], "windowlength (stats attribute)": [[132, "Stats.windowLength"]], "wmean (stats attribute)": [[132, "Stats.wmean"]], "wnum (stats attribute)": [[132, "Stats.wnum"]], "wsdev (stats attribute)": [[132, "Stats.wsdev"]], "wsum (stats attribute)": [[132, "Stats.wsum"]], "steadystate (built-in class)": [[133, "SteadyState"]], "badstoichiometry (steadystate attribute)": [[133, "SteadyState.badStoichiometry"]], "convergencecriterion (steadystate attribute)": [[133, "SteadyState.convergenceCriterion"]], "eigenvalues (steadystate attribute)": [[133, "SteadyState.eigenvalues"]], "getbadstoichiometry() (steadystate method)": [[133, "SteadyState.getBadStoichiometry"]], "getconvergencecriterion() (steadystate method)": [[133, "SteadyState.getConvergenceCriterion"]], "geteigenvalues() (steadystate method)": [[133, "SteadyState.getEigenvalues"]], "getisinitialized() (steadystate method)": [[133, "SteadyState.getIsInitialized"]], "getmaxiter() (steadystate method)": [[133, "SteadyState.getMaxIter"]], "getniter() (steadystate method)": [[133, "SteadyState.getNIter"]], "getnnegeigenvalues() (steadystate method)": [[133, "SteadyState.getNNegEigenvalues"]], "getnposeigenvalues() (steadystate method)": [[133, "SteadyState.getNPosEigenvalues"]], "getnumvarpools() (steadystate method)": [[133, "SteadyState.getNumVarPools"]], "getrank() (steadystate method)": [[133, "SteadyState.getRank"]], "getsolutionstatus() (steadystate method)": [[133, "SteadyState.getSolutionStatus"]], "getstatetype() (steadystate method)": [[133, "SteadyState.getStateType"]], "getstatus() (steadystate method)": [[133, "SteadyState.getStatus"]], "getstoich() (steadystate method)": [[133, "SteadyState.getStoich"]], "gettotal() (steadystate method)": [[133, "SteadyState.getTotal"]], "isinitialized (steadystate attribute)": [[133, "SteadyState.isInitialized"]], "maxiter (steadystate attribute)": [[133, "SteadyState.maxIter"]], "niter (steadystate attribute)": [[133, "SteadyState.nIter"]], "nnegeigenvalues (steadystate attribute)": [[133, "SteadyState.nNegEigenvalues"]], "nposeigenvalues (steadystate attribute)": [[133, "SteadyState.nPosEigenvalues"]], "numvarpools (steadystate attribute)": [[133, "SteadyState.numVarPools"]], "randominit() (steadystate method)": [[133, "SteadyState.randomInit"]], "rank (steadystate attribute)": [[133, "SteadyState.rank"]], "resettle() (steadystate method)": [[133, "SteadyState.resettle"]], "setconvergencecriterion() (steadystate method)": [[133, "SteadyState.setConvergenceCriterion"]], "setmaxiter() (steadystate method)": [[133, "SteadyState.setMaxIter"]], "setstoich() (steadystate method)": [[133, "SteadyState.setStoich"]], "settotal() (steadystate method)": [[133, "SteadyState.setTotal"]], "settle() (steadystate method)": [[133, "SteadyState.settle"]], "setupmatrix() (steadystate method)": [[133, "SteadyState.setupMatrix"]], "showmatrices() (steadystate method)": [[133, "SteadyState.showMatrices"]], "solutionstatus (steadystate attribute)": [[133, "SteadyState.solutionStatus"]], "statetype (steadystate attribute)": [[133, "SteadyState.stateType"]], "status (steadystate attribute)": [[133, "SteadyState.status"]], "stoich (steadystate attribute)": [[133, "SteadyState.stoich"]], "total (steadystate attribute)": [[133, "SteadyState.total"]], "stimulustable (built-in class)": [[134, "StimulusTable"]], "doloop (stimulustable attribute)": [[134, "StimulusTable.doLoop"]], "getdoloop() (stimulustable method)": [[134, "StimulusTable.getDoLoop"]], "getlooptime() (stimulustable method)": [[134, "StimulusTable.getLoopTime"]], "getstarttime() (stimulustable method)": [[134, "StimulusTable.getStartTime"]], "getstepposition() (stimulustable method)": [[134, "StimulusTable.getStepPosition"]], "getstepsize() (stimulustable method)": [[134, "StimulusTable.getStepSize"]], "getstoptime() (stimulustable method)": [[134, "StimulusTable.getStopTime"]], "looptime (stimulustable attribute)": [[134, "StimulusTable.loopTime"]], "output (stimulustable attribute)": [[134, "StimulusTable.output"]], "proc (stimulustable attribute)": [[134, "StimulusTable.proc"]], "process() (stimulustable method)": [[134, "StimulusTable.process"]], "reinit() (stimulustable method)": [[134, "StimulusTable.reinit"]], "setdoloop() (stimulustable method)": [[134, "StimulusTable.setDoLoop"]], "setlooptime() (stimulustable method)": [[134, "StimulusTable.setLoopTime"]], "setstarttime() (stimulustable method)": [[134, "StimulusTable.setStartTime"]], "setstepposition() (stimulustable method)": [[134, "StimulusTable.setStepPosition"]], "setstepsize() (stimulustable method)": [[134, "StimulusTable.setStepSize"]], "setstoptime() (stimulustable method)": [[134, "StimulusTable.setStopTime"]], "starttime (stimulustable attribute)": [[134, "StimulusTable.startTime"]], "stepposition (stimulustable attribute)": [[134, "StimulusTable.stepPosition"]], "stepsize (stimulustable attribute)": [[134, "StimulusTable.stepSize"]], "stoptime (stimulustable attribute)": [[134, "StimulusTable.stopTime"]], "stoich (built-in class)": [[135, "Stoich"]], "buildxreacs() (stoich method)": [[135, "Stoich.buildXreacs"]], "columnindex (stoich attribute)": [[135, "Stoich.columnIndex"]], "compartment (stoich attribute)": [[135, "Stoich.compartment"]], "dsolve (stoich attribute)": [[135, "Stoich.dsolve"]], "filterxreacs() (stoich method)": [[135, "Stoich.filterXreacs"]], "getcolumnindex() (stoich method)": [[135, "Stoich.getColumnIndex"]], "getcompartment() (stoich method)": [[135, "Stoich.getCompartment"]], "getdsolve() (stoich method)": [[135, "Stoich.getDsolve"]], "getksolve() (stoich method)": [[135, "Stoich.getKsolve"]], "getmatrixentry() (stoich method)": [[135, "Stoich.getMatrixEntry"]], "getnumallpools() (stoich method)": [[135, "Stoich.getNumAllPools"]], "getnumbufpools() (stoich method)": [[135, "Stoich.getNumBufPools"]], "getnumproxypools() (stoich method)": [[135, "Stoich.getNumProxyPools"]], "getnumrates() (stoich method)": [[135, "Stoich.getNumRates"]], "getnumvarpools() (stoich method)": [[135, "Stoich.getNumVarPools"]], "getpath() (stoich method)": [[135, "Stoich.getPath"]], "getpoolidmap() (stoich method)": [[135, "Stoich.getPoolIdMap"]], "getproxypools() (stoich method)": [[135, "Stoich.getProxyPools"]], "getrowstart() (stoich method)": [[135, "Stoich.getRowStart"]], "getstatus() (stoich method)": [[135, "Stoich.getStatus"]], "ksolve (stoich attribute)": [[135, "Stoich.ksolve"]], "matrixentry (stoich attribute)": [[135, "Stoich.matrixEntry"]], "numallpools (stoich attribute)": [[135, "Stoich.numAllPools"]], "numbufpools (stoich attribute)": [[135, "Stoich.numBufPools"]], "numproxypools (stoich attribute)": [[135, "Stoich.numProxyPools"]], "numrates (stoich attribute)": [[135, "Stoich.numRates"]], "numvarpools (stoich attribute)": [[135, "Stoich.numVarPools"]], "path (stoich attribute)": [[135, "Stoich.path"]], "poolidmap (stoich attribute)": [[135, "Stoich.poolIdMap"]], "proxypools (stoich attribute)": [[135, "Stoich.proxyPools"]], "rowstart (stoich attribute)": [[135, "Stoich.rowStart"]], "scalebufsandrates() (stoich method)": [[135, "Stoich.scaleBufsAndRates"]], "setcompartment() (stoich method)": [[135, "Stoich.setCompartment"]], "setdsolve() (stoich method)": [[135, "Stoich.setDsolve"]], "setksolve() (stoich method)": [[135, "Stoich.setKsolve"]], "setpath() (stoich method)": [[135, "Stoich.setPath"]], "status (stoich attribute)": [[135, "Stoich.status"]], "unzombify() (stoich method)": [[135, "Stoich.unzombify"]], "streamer (built-in class)": [[136, "Streamer"]], "addtable() (streamer method)": [[136, "Streamer.addTable"]], "addtables() (streamer method)": [[136, "Streamer.addTables"]], "format (streamer attribute)": [[136, "Streamer.format"]], "getformat() (streamer method)": [[136, "Streamer.getFormat"]], "getnumtables() (streamer method)": [[136, "Streamer.getNumTables"]], "getoutfile() (streamer method)": [[136, "Streamer.getOutfile"]], "numtables (streamer attribute)": [[136, "Streamer.numTables"]], "outfile (streamer attribute)": [[136, "Streamer.outfile"]], "proc (streamer attribute)": [[136, "Streamer.proc"]], "process() (streamer method)": [[136, "Streamer.process"]], "reinit() (streamer method)": [[136, "Streamer.reinit"]], "removetable() (streamer method)": [[136, "Streamer.removeTable"]], "removetables() (streamer method)": [[136, "Streamer.removeTables"]], "setformat() (streamer method)": [[136, "Streamer.setFormat"]], "setoutfile() (streamer method)": [[136, "Streamer.setOutfile"]], "symcompartment (built-in class)": [[137, "SymCompartment"]], "cylinder (symcompartment attribute)": [[137, "SymCompartment.cylinder"]], "cylinderout (symcompartment attribute)": [[137, "SymCompartment.cylinderOut"]], "distal (symcompartment attribute)": [[137, "SymCompartment.distal"]], "distalout (symcompartment attribute)": [[137, "SymCompartment.distalOut"], [137, "id6"], [137, "id8"]], "proximal (symcompartment attribute)": [[137, "SymCompartment.proximal"]], "proximalonly (symcompartment attribute)": [[137, "SymCompartment.proximalOnly"]], "proximalout (symcompartment attribute)": [[137, "SymCompartment.proximalOut"], [137, "id9"]], "raxialcylinder() (symcompartment method)": [[137, "SymCompartment.raxialCylinder"]], "raxialsphere() (symcompartment method)": [[137, "SymCompartment.raxialSphere"], [137, "id4"]], "raxialsym() (symcompartment method)": [[137, "SymCompartment.raxialSym"], [137, "id0"], [137, "id2"]], "sibling (symcompartment attribute)": [[137, "SymCompartment.sibling"]], "sphere (symcompartment attribute)": [[137, "SymCompartment.sphere"]], "sumraxial() (symcompartment method)": [[137, "SymCompartment.sumRaxial"], [137, "id1"], [137, "id3"]], "sumraxialout (symcompartment attribute)": [[137, "SymCompartment.sumRaxialOut"], [137, "id5"], [137, "id7"]], "synchan (built-in class)": [[138, "SynChan"]], "activation() (synchan method)": [[138, "SynChan.activation"]], "getnormalizeweights() (synchan method)": [[138, "SynChan.getNormalizeWeights"]], "gettau1() (synchan method)": [[138, "SynChan.getTau1"]], "gettau2() (synchan method)": [[138, "SynChan.getTau2"]], "normalizeweights (synchan attribute)": [[138, "SynChan.normalizeWeights"]], "setnormalizeweights() (synchan method)": [[138, "SynChan.setNormalizeWeights"]], "settau1() (synchan method)": [[138, "SynChan.setTau1"]], "settau2() (synchan method)": [[138, "SynChan.setTau2"]], "tau1 (synchan attribute)": [[138, "SynChan.tau1"]], "tau2 (synchan attribute)": [[138, "SynChan.tau2"]], "synhandlerbase (built-in class)": [[139, "SynHandlerBase"]], "activationout (synhandlerbase attribute)": [[139, "SynHandlerBase.activationOut"]], "getnumsynapses() (synhandlerbase method)": [[139, "SynHandlerBase.getNumSynapses"]], "numsynapses (synhandlerbase attribute)": [[139, "SynHandlerBase.numSynapses"]], "proc (synhandlerbase attribute)": [[139, "SynHandlerBase.proc"]], "process() (synhandlerbase method)": [[139, "SynHandlerBase.process"]], "reinit() (synhandlerbase method)": [[139, "SynHandlerBase.reinit"]], "setnumsynapses() (synhandlerbase method)": [[139, "SynHandlerBase.setNumSynapses"]], "synapse (built-in class)": [[140, "Synapse"]], "addspike() (synapse method)": [[140, "Synapse.addSpike"]], "delay (synapse attribute)": [[140, "Synapse.delay"]], "getdelay() (synapse method)": [[140, "Synapse.getDelay"]], "getweight() (synapse method)": [[140, "Synapse.getWeight"]], "setdelay() (synapse method)": [[140, "Synapse.setDelay"]], "setweight() (synapse method)": [[140, "Synapse.setWeight"]], "weight (synapse attribute)": [[140, "Synapse.weight"]], "table (built-in class)": [[141, "Table"]], "format (table attribute)": [[141, "Table.format"]], "getformat() (table method)": [[141, "Table.getFormat"]], "getname() (table method)": [[141, "Table.getName"]], "getoutfile() (table method)": [[141, "Table.getOutfile"]], "getthreshold() (table method)": [[141, "Table.getThreshold"]], "getusestreamer() (table method)": [[141, "Table.getUseStreamer"]], "input() (table method)": [[141, "Table.input"]], "name (table attribute)": [[141, "Table.name"]], "outfile (table attribute)": [[141, "Table.outfile"]], "proc (table attribute)": [[141, "Table.proc"]], "process() (table method)": [[141, "Table.process"]], "reinit() (table method)": [[141, "Table.reinit"]], "requestout (table attribute)": [[141, "Table.requestOut"]], "setformat() (table method)": [[141, "Table.setFormat"]], "setname() (table method)": [[141, "Table.setName"]], "setoutfile() (table method)": [[141, "Table.setOutfile"]], "setthreshold() (table method)": [[141, "Table.setThreshold"]], "setusestreamer() (table method)": [[141, "Table.setUseStreamer"]], "spike() (table method)": [[141, "Table.spike"]], "threshold (table attribute)": [[141, "Table.threshold"]], "usestreamer (table attribute)": [[141, "Table.useStreamer"]], "table2 (built-in class)": [[142, "Table2"]], "format (table2 attribute)": [[142, "Table2.format"]], "getformat() (table2 method)": [[142, "Table2.getFormat"]], "getname() (table2 method)": [[142, "Table2.getName"]], "getoutfile() (table2 method)": [[142, "Table2.getOutfile"]], "getthreshold() (table2 method)": [[142, "Table2.getThreshold"]], "getusestreamer() (table2 method)": [[142, "Table2.getUseStreamer"]], "input() (table2 method)": [[142, "Table2.input"]], "name (table2 attribute)": [[142, "Table2.name"]], "outfile (table2 attribute)": [[142, "Table2.outfile"]], "proc (table2 attribute)": [[142, "Table2.proc"]], "process() (table2 method)": [[142, "Table2.process"]], "reinit() (table2 method)": [[142, "Table2.reinit"]], "requestout (table2 attribute)": [[142, "Table2.requestOut"]], "setformat() (table2 method)": [[142, "Table2.setFormat"]], "setname() (table2 method)": [[142, "Table2.setName"]], "setoutfile() (table2 method)": [[142, "Table2.setOutfile"]], "setthreshold() (table2 method)": [[142, "Table2.setThreshold"]], "setusestreamer() (table2 method)": [[142, "Table2.setUseStreamer"]], "spike() (table2 method)": [[142, "Table2.spike"]], "threshold (table2 attribute)": [[142, "Table2.threshold"]], "usestreamer (table2 attribute)": [[142, "Table2.useStreamer"]], "tablebase (built-in class)": [[143, "TableBase"]], "clearvec() (tablebase method)": [[143, "TableBase.clearVec"]], "comparevec() (tablebase method)": [[143, "TableBase.compareVec"]], "comparexplot() (tablebase method)": [[143, "TableBase.compareXplot"]], "getoutputvalue() (tablebase method)": [[143, "TableBase.getOutputValue"]], "getsize() (tablebase method)": [[143, "TableBase.getSize"]], "getvector() (tablebase method)": [[143, "TableBase.getVector"]], "gety() (tablebase method)": [[143, "TableBase.getY"]], "lineartransform() (tablebase method)": [[143, "TableBase.linearTransform"]], "loadcsv() (tablebase method)": [[143, "TableBase.loadCSV"]], "loadxplot() (tablebase method)": [[143, "TableBase.loadXplot"]], "loadxplotrange() (tablebase method)": [[143, "TableBase.loadXplotRange"]], "outputvalue (tablebase attribute)": [[143, "TableBase.outputValue"]], "plainplot() (tablebase method)": [[143, "TableBase.plainPlot"]], "setvector() (tablebase method)": [[143, "TableBase.setVector"]], "size (tablebase attribute)": [[143, "TableBase.size"]], "vector (tablebase attribute)": [[143, "TableBase.vector"]], "xplot() (tablebase method)": [[143, "TableBase.xplot"]], "y (tablebase attribute)": [[143, "TableBase.y"]], "timetable (built-in class)": [[144, "TimeTable"]], "eventout (timetable attribute)": [[144, "TimeTable.eventOut"]], "filename (timetable attribute)": [[144, "TimeTable.filename"]], "getfilename() (timetable method)": [[144, "TimeTable.getFilename"]], "getmethod() (timetable method)": [[144, "TimeTable.getMethod"]], "getstate() (timetable method)": [[144, "TimeTable.getState"]], "method (timetable attribute)": [[144, "TimeTable.method"]], "proc (timetable attribute)": [[144, "TimeTable.proc"]], "process() (timetable method)": [[144, "TimeTable.process"]], "reinit() (timetable method)": [[144, "TimeTable.reinit"]], "setfilename() (timetable method)": [[144, "TimeTable.setFilename"]], "setmethod() (timetable method)": [[144, "TimeTable.setMethod"]], "state (timetable attribute)": [[144, "TimeTable.state"]], "uniformrng (built-in class)": [[145, "UniformRng"]], "getmax() (uniformrng method)": [[145, "UniformRng.getMax"]], "getmin() (uniformrng method)": [[145, "UniformRng.getMin"]], "max (uniformrng attribute)": [[145, "UniformRng.max"]], "min (uniformrng attribute)": [[145, "UniformRng.min"]], "setmax() (uniformrng method)": [[145, "UniformRng.setMax"]], "setmin() (uniformrng method)": [[145, "UniformRng.setMin"]], "vclamp (built-in class)": [[146, "VClamp"]], "command (vclamp attribute)": [[146, "VClamp.command"]], "commandin() (vclamp method)": [[146, "VClamp.commandIn"]], "current (vclamp attribute)": [[146, "VClamp.current"]], "currentout (vclamp attribute)": [[146, "VClamp.currentOut"]], "gain (vclamp attribute)": [[146, "VClamp.gain"]], "getcommand() (vclamp method)": [[146, "VClamp.getCommand"]], "getcurrent() (vclamp method)": [[146, "VClamp.getCurrent"]], "getgain() (vclamp method)": [[146, "VClamp.getGain"]], "getmode() (vclamp method)": [[146, "VClamp.getMode"]], "getsensed() (vclamp method)": [[146, "VClamp.getSensed"]], "gettau() (vclamp method)": [[146, "VClamp.getTau"]], "gettd() (vclamp method)": [[146, "VClamp.getTd"]], "getti() (vclamp method)": [[146, "VClamp.getTi"]], "mode (vclamp attribute)": [[146, "VClamp.mode"]], "proc (vclamp attribute)": [[146, "VClamp.proc"]], "process() (vclamp method)": [[146, "VClamp.process"]], "reinit() (vclamp method)": [[146, "VClamp.reinit"]], "sensed (vclamp attribute)": [[146, "VClamp.sensed"]], "sensedin() (vclamp method)": [[146, "VClamp.sensedIn"]], "setgain() (vclamp method)": [[146, "VClamp.setGain"]], "setmode() (vclamp method)": [[146, "VClamp.setMode"]], "settau() (vclamp method)": [[146, "VClamp.setTau"]], "settd() (vclamp method)": [[146, "VClamp.setTd"]], "setti() (vclamp method)": [[146, "VClamp.setTi"]], "tau (vclamp attribute)": [[146, "VClamp.tau"]], "td (vclamp attribute)": [[146, "VClamp.td"]], "ti (vclamp attribute)": [[146, "VClamp.ti"]], "variable (built-in class)": [[147, "Variable"]], "getvalue() (variable method)": [[147, "Variable.getValue"]], "input() (variable method)": [[147, "Variable.input"]], "setvalue() (variable method)": [[147, "Variable.setValue"]], "value (variable attribute)": [[147, "Variable.value"]], "vectortable (built-in class)": [[148, "VectorTable"]], "getinvdx() (vectortable method)": [[148, "VectorTable.getInvdx"]], "getlookupindex() (vectortable method)": [[148, "VectorTable.getLookupindex"]], "getlookupvalue() (vectortable method)": [[148, "VectorTable.getLookupvalue"]], "gettable() (vectortable method)": [[148, "VectorTable.getTable"]], "getxdivs() (vectortable method)": [[148, "VectorTable.getXdivs"]], "getxmax() (vectortable method)": [[148, "VectorTable.getXmax"]], "getxmin() (vectortable method)": [[148, "VectorTable.getXmin"]], "invdx (vectortable attribute)": [[148, "VectorTable.invdx"]], "lookupindex (vectortable attribute)": [[148, "VectorTable.lookupindex"]], "lookupvalue (vectortable attribute)": [[148, "VectorTable.lookupvalue"]], "settable() (vectortable method)": [[148, "VectorTable.setTable"]], "setxdivs() (vectortable method)": [[148, "VectorTable.setXdivs"]], "setxmax() (vectortable method)": [[148, "VectorTable.setXmax"]], "setxmin() (vectortable method)": [[148, "VectorTable.setXmin"]], "table (vectortable attribute)": [[148, "VectorTable.table"]], "xdivs (vectortable attribute)": [[148, "VectorTable.xdivs"]], "xmax (vectortable attribute)": [[148, "VectorTable.xmax"]], "xmin (vectortable attribute)": [[148, "VectorTable.xmin"]], "zombiecaconc (built-in class)": [[149, "ZombieCaConc"]], "zombiecompartment (built-in class)": [[150, "ZombieCompartment"]], "zombiefunction (built-in class)": [[151, "ZombieFunction"]], "proc (zombiefunction attribute)": [[151, "ZombieFunction.proc"]], "process() (zombiefunction method)": [[151, "ZombieFunction.process"]], "reinit() (zombiefunction method)": [[151, "ZombieFunction.reinit"]], "process() (testsched method)": [[155, "testSched.process"]], "testsched (built-in class)": [[155, "testSched"]]}})